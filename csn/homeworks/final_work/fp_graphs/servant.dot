strict digraph deps {
"_C" [style=solid];
"_CT" [style=solid];
"_RB" [style=solid];
"_testNubbed" [style=solid];
"acceptCheck" [style=solid];
"addAcceptCheck" [style=solid];
"addAuthCheck" [style=solid];
"addBodyCheck" [style=solid];
"addCapture" [style=solid];
"addFragment" [style=solid];
"addHeader" [style=solid];
"addHeaderCheck" [style=solid];
"addMethodCheck" [style=solid];
"addParameterCheck" [style=solid];
"addQueryParam" [style=solid];
"addSegment" [style=solid];
"allFieldLinks" [style=solid];
"allFieldLinks\'" [style=solid];
"allLinks" [style=solid];
"allLinks\'" [style=solid];
"allowedMethod" [style=solid];
"allowedMethodHead" [style=solid];
"appendToPath" [style=solid];
"appendToQueryString" [style=solid];
"argPath" [style=solid];
"basicAuthReq" [style=solid];
"camelCase" [style=solid];
"camelCaseL" [style=solid];
"canHandleAcceptH" [style=solid];
"captureArg" [style=solid];
"catchConnectionError" [style=solid];
"checkContentTypeHeader" [style=solid];
"choice" [style=solid];
"client" [style=solid];
"clientIn" [style=solid];
"clientResponseToResponse" [style=solid];
"combineAction" [style=solid];
"combineFragment" [style=solid];
"combineResponse" [style=solid];
"comprehensiveAPI" [style=solid];
"comprehensiveAPIWithoutRaw" [style=solid];
"comprehensiveAPIWithoutStreaming" [style=solid];
"comprehensiveAPIWithoutStreamingOrRaw" [style=solid];
"concatCase" [style=solid];
"concatCaseL" [style=solid];
"ct_wildcard" [style=solid];
"decodeBAHdr" [style=solid];
"decodedAs" [style=solid];
"defAction" [style=solid];
"defEndpoint" [style=solid];
"defRenderingOptions" [style=solid];
"defReq" [style=solid];
"defResponse" [style=solid];
"defUrl" [style=solid];
"defaultDocOptions" [style=solid];
"defaultErrorFormatters" [style=solid];
"defaultMakeClientRequest" [style=solid];
"defaultRequest" [style=solid];
"defaultSamples" [style=solid];
"delayedFail" [style=solid];
"delayedFailFatal" [style=solid];
"descendIntoNamedContext" [style=solid];
"docs" [style=solid];
"docsWith" [style=solid];
"docsWithIntros" [style=solid];
"docsWithOptions" [style=solid];
"eitherDecodeLenient" [style=solid];
"emptyAPI" [style=solid];
"emptyDelayed" [style=solid];
"emptyServer" [style=solid];
"err300" [style=solid];
"err301" [style=solid];
"err302" [style=solid];
"err303" [style=solid];
"err304" [style=solid];
"err305" [style=solid];
"err307" [style=solid];
"err400" [style=solid];
"err400Formatter" [style=solid];
"err401" [style=solid];
"err402" [style=solid];
"err403" [style=solid];
"err404" [style=solid];
"err405" [style=solid];
"err406" [style=solid];
"err407" [style=solid];
"err409" [style=solid];
"err410" [style=solid];
"err411" [style=solid];
"err412" [style=solid];
"err413" [style=solid];
"err414" [style=solid];
"err415" [style=solid];
"err416" [style=solid];
"err417" [style=solid];
"err418" [style=solid];
"err422" [style=solid];
"err500" [style=solid];
"err501" [style=solid];
"err502" [style=solid];
"err503" [style=solid];
"err504" [style=solid];
"err505" [style=solid];
"escape" [style=solid];
"escaped" [style=solid];
"extraInfo" [style=solid];
"fieldLink" [style=solid];
"fieldLink\'" [style=solid];
"fixPath" [style=solid];
"foldMapUnion" [style=solid];
"foldRequiredArgument" [style=solid];
"foreach" [style=solid];
"foreachStep" [style=solid];
"foreign" [style=solid];
"fromAction" [style=solid];
"fromActionStep" [style=solid];
"fromInputStream" [style=solid];
"fromServant" [style=solid];
"fromStepT" [style=solid];
"genericApi" [style=solid];
"genericClient" [style=solid];
"genericClientHoist" [style=solid];
"genericServe" [style=solid];
"genericServeT" [style=solid];
"genericServeTWithContext" [style=solid];
"genericServer" [style=solid];
"genericServerT" [style=solid];
"getAcceptHeader" [style=solid];
"getAllResponseHeaders" [style=solid];
"getEscaped" [style=solid];
"getResponse" [style=solid];
"getStatusText" [style=solid];
"hoistClient" [style=solid];
"hoistServer" [style=solid];
"infixl" [style=solid];
"infixr" [style=solid];
"initXhr" [style=solid];
"isCapture" [style=solid];
"layout" [style=solid];
"layoutWithContext" [style=solid];
"leafRouter" [style=solid];
"liftRouteResult" [style=solid];
"linkFragment" [style=solid];
"linkQueryParams" [style=solid];
"linkSegments" [style=solid];
"linkURI" [style=solid];
"linkURI\'" [style=solid];
"listFromAPI" [style=solid];
"lookupResponseHeader" [style=solid];
"makeLenses" [style=solid];
"makePrisms" [style=solid];
"mapMaybe" [style=solid];
"mapMaybeStep" [style=solid];
"mapStepT" [style=solid];
"markdown" [style=solid];
"markdownWith" [style=solid];
"matchUnion" [style=solid];
"mediaTypeRnf" [style=solid];
"methodCheck" [style=solid];
"methodRouter" [style=solid];
"mkAuthHandler" [style=solid];
"mkAuthenticatedRequest" [style=solid];
"mkBAChallengerHdr" [style=solid];
"mkClientEnv" [style=solid];
"mkContextWithErrorFormatter" [style=solid];
"mkFailureResponse" [style=solid];
"noContentRouter" [style=solid];
"noHeader" [style=solid];
"noSamples" [style=solid];
"onReadyStateChange" [style=solid];
"openXhr" [style=solid];
"parseBaseUrl" [style=solid];
"parseHeaders" [style=solid];
"passToServer" [style=solid];
"pathRouter" [style=solid];
"performRequest" [style=solid];
"performWithStreamingRequest" [style=solid];
"performXhr" [style=solid];
"pretty" [style=solid];
"readFile" [style=solid];
"reflectDescription" [style=solid];
"requestToClientRequest" [style=solid];
"respond" [style=solid];
"responseServerError" [style=solid];
"routerLayout" [style=solid];
"routerStructure" [style=solid];
"runAction" [style=solid];
"runBasicAuth" [style=solid];
"runChoice" [style=solid];
"runClientM" [style=solid];
"runClientMOrigin" [style=solid];
"runDelayed" [style=solid];
"runDelayedIO" [style=solid];
"runHandler" [style=solid];
"runRequest" [style=solid];
"runRouter" [style=solid];
"runRouterEnv" [style=solid];
"runSourceT" [style=solid];
"runStepT" [style=solid];
"safeLink" [style=solid];
"safeLink\'" [style=solid];
"sameStructure" [style=solid];
"sampleByteString" [style=solid];
"sampleByteStrings" [style=solid];
"samples" [style=solid];
"sendXhr" [style=solid];
"serve" [style=solid];
"serveDirectory" [style=solid];
"serveDirectoryEmbedded" [style=solid];
"serveDirectoryFileServer" [style=solid];
"serveDirectoryWebApp" [style=solid];
"serveDirectoryWebAppLookup" [style=solid];
"serveDirectoryWith" [style=solid];
"serveWithContext" [style=solid];
"setHeaders" [style=solid];
"setRequestBody" [style=solid];
"setRequestBodyLBS" [style=solid];
"showBaseUrl" [style=solid];
"showPath" [style=solid];
"simpleToLink" [style=solid];
"single" [style=solid];
"singleSample" [style=solid];
"snakeCase" [style=solid];
"snakeCaseL" [style=solid];
"source" [style=solid];
"sourceFromSourceIO" [style=solid];
"statusOf" [style=solid];
"streamRouter" [style=solid];
"toApplication" [style=solid];
"toBody" [style=solid];
"toOutputStream" [style=solid];
"toResponse" [style=solid];
"toSample" [style=solid];
"toServant" [style=solid];
"toUrl" [style=solid];
"transformStepWithAtto" [style=solid];
"transformWithAtto" [style=solid];
"tweakResponse" [style=solid];
"unfoldRequestArgument" [style=solid];
"unfoldRequiredArgument" [style=solid];
"withClientEnvIO" [style=solid];
"withClientM" [style=solid];
"withRequest" [style=solid];
"worseHTTPCode" [style=solid];
"" -> "addHeader";
"" -> "appendToPath";
"" -> "appendToQueryString";
"" -> "basicAuthReq";
"" -> "clientIn";
"" -> "defaultRequest";
"" -> "foldMapUnion";
"" -> "matchUnion";
"" -> "mkAuthenticatedRequest";
"" -> "parseBaseUrl";
"" -> "setRequestBody";
"" -> "setRequestBodyLBS";
"" -> "showBaseUrl";
"_testNubbed" -> "allFieldLinks";
"_testNubbed" -> "allFieldLinks\'";
"_testNubbed" -> "allLinks";
"_testNubbed" -> "allLinks\'";
"_testNubbed" -> "fieldLink";
"_testNubbed" -> "fieldLink\'";
"_testNubbed" -> "linkFragment";
"_testNubbed" -> "linkQueryParams";
"_testNubbed" -> "linkSegments";
"_testNubbed" -> "linkURI";
"_testNubbed" -> "linkURI\'";
"_testNubbed" -> "safeLink";
"_testNubbed" -> "safeLink\'";
"acceptCheck" -> "canHandleAcceptH";
"acceptCheck" -> "delayedFail";
"acceptCheck" -> "err406";
"allFieldLinks" -> "allFieldLinks\'";
"allFieldLinks\'" -> "addFragment";
"allFieldLinks\'" -> "addQueryParam";
"allFieldLinks\'" -> "addSegment";
"allFieldLinks\'" -> "allLinks\'";
"allFieldLinks\'" -> "escaped";
"allFieldLinks\'" -> "fromServant";
"allFieldLinks\'" -> "simpleToLink";
"allLinks" -> "allLinks\'";
"allowedMethod" -> "allowedMethodHead";
"basicAuthReq" -> "addHeader";
"basicAuthReq" -> "clientIn";
"basicAuthReq" -> "foldMapUnion";
"basicAuthReq" -> "foldRequiredArgument";
"basicAuthReq" -> "getResponse";
"basicAuthReq" -> "matchUnion";
"basicAuthReq" -> "mediaTypeRnf";
"basicAuthReq" -> "statusOf";
"camelCase" -> "camelCaseL";
"camelCase" -> "makeLenses";
"camelCase" -> "makePrisms";
"catchConnectionError" -> "catchConnectionError";
"catchConnectionError" -> "clientResponseToResponse";
"catchConnectionError" -> "defaultMakeClientRequest";
"catchConnectionError" -> "mkClientEnv";
"catchConnectionError" -> "mkFailureResponse";
"choice" -> "choice";
"client" -> "clientIn";
"client" -> "genericClient";
"client" -> "genericClientHoist";
"client" -> "performRequest";
"client" -> "runRequest";
"clientIn" -> "addHeader";
"clientIn" -> "appendToPath";
"clientIn" -> "appendToQueryString";
"clientIn" -> "basicAuthReq";
"clientIn" -> "checkContentTypeHeader";
"clientIn" -> "decodedAs";
"clientIn" -> "defaultRequest";
"clientIn" -> "foldRequiredArgument";
"clientIn" -> "getResponse";
"clientIn" -> "runRequest";
"clientIn" -> "setRequestBody";
"clientIn" -> "setRequestBodyLBS";
"clientIn" -> "statusOf";
"combineAction" -> "combineAction";
"combineAction" -> "combineFragment";
"combineAction" -> "combineResponse";
"combineFragment" -> "combineAction";
"combineFragment" -> "combineFragment";
"combineResponse" -> "combineResponse";
"comprehensiveAPIWithoutStreamingOrRaw" -> "readFile";
"concatCase" -> "concatCaseL";
"decodedAs" -> "checkContentTypeHeader";
"defAction" -> "defResponse";
"defEndpoint" -> "combineAction";
"defReq" -> "defUrl";
"defaultErrorFormatters" -> "err400Formatter";
"defaultErrorFormatters" -> "err404";
"defaultSamples" -> "singleSample";
"defaultSamples" -> "toSample";
"delayedFail" -> "liftRouteResult";
"delayedFailFatal" -> "liftRouteResult";
"docs" -> "defaultDocOptions";
"docs" -> "docsWithOptions";
"docsWith" -> "combineAction";
"docsWith" -> "docsWithOptions";
"docsWithIntros" -> "defaultDocOptions";
"docsWithIntros" -> "defaultSamples";
"docsWithIntros" -> "docsWith";
"docsWithOptions" -> "defAction";
"docsWithOptions" -> "defEndpoint";
"eitherDecodeLenient" -> "eitherDecodeLenient";
"eitherDecodeLenient" -> "reflectDescription";
"emptyServer" -> "addAuthCheck";
"emptyServer" -> "runBasicAuth";
"emptyServer" -> "withRequest";
"err400Formatter" -> "err400";
"err505" -> "serveDirectory";
"err505" -> "serveDirectoryEmbedded";
"err505" -> "serveDirectoryFileServer";
"err505" -> "serveDirectoryWebApp";
"err505" -> "serveDirectoryWebAppLookup";
"err505" -> "serveDirectoryWith";
"extraInfo" -> "defAction";
"extraInfo" -> "defEndpoint";
"extraInfo" -> "defaultDocOptions";
"fieldLink" -> "fieldLink\'";
"fieldLink\'" -> "genericApi";
"fieldLink\'" -> "safeLink\'";
"fixPath" -> "respond";
"foreach" -> "foreachStep";
"fromAction" -> "fromActionStep";
"fromStepT" -> "fromStepT";
"fromStepT" -> "mapStepT";
"genericApi" -> "foldRequiredArgument";
"genericApi" -> "unfoldRequestArgument";
"genericApi" -> "unfoldRequiredArgument";
"genericClient" -> "clientIn";
"genericClient" -> "fromServant";
"genericClientHoist" -> "client";
"genericClientHoist" -> "clientIn";
"genericClientHoist" -> "fromServant";
"genericClientHoist" -> "runClientM";
"genericServe" -> "genericServer";
"genericServe" -> "serve";
"genericServeT" -> "genericApi";
"genericServeT" -> "genericServerT";
"genericServeT" -> "hoistServer";
"genericServeT" -> "serve";
"genericServeTWithContext" -> "genericApi";
"genericServeTWithContext" -> "genericServerT";
"genericServeTWithContext" -> "serveWithContext";
"genericServer" -> "toServant";
"genericServerT" -> "addCapture";
"genericServerT" -> "canHandleAcceptH";
"genericServerT" -> "choice";
"genericServerT" -> "delayedFail";
"genericServerT" -> "getResponse";
"genericServerT" -> "mapMaybe";
"genericServerT" -> "mkContextWithErrorFormatter";
"genericServerT" -> "toServant";
"genericServerT" -> "unfoldRequestArgument";
"genericServerT" -> "withRequest";
"getAcceptHeader" -> "ct_wildcard";
"getAcceptHeader" -> "descendIntoNamedContext";
"hoistClient" -> "performRequest";
"hoistClient" -> "performWithStreamingRequest";
"infixr" -> "canHandleAcceptH";
"infixr" -> "eitherDecodeLenient";
"infixr" -> "statusOf";
"layout" -> "layoutWithContext";
"layoutWithContext" -> "addAuthCheck";
"layoutWithContext" -> "delayedFailFatal";
"layoutWithContext" -> "emptyDelayed";
"layoutWithContext" -> "err501";
"layoutWithContext" -> "routerLayout";
"layoutWithContext" -> "runHandler";
"layoutWithContext" -> "withRequest";
"linkFragment" -> "linkURI";
"linkSegments" -> "getEscaped";
"linkURI" -> "linkURI\'";
"linkURI\'" -> "escape";
"linkURI\'" -> "getEscaped";
"listFromAPI" -> "client";
"listFromAPI" -> "defReq";
"listFromAPI" -> "hoistClient";
"listFromAPI" -> "mkClientEnv";
"listFromAPI" -> "runClientM";
"listFromAPI" -> "withClientEnvIO";
"listFromAPI" -> "withClientM";
"lookupResponseHeader" -> "fromStepT";
"lookupResponseHeader" -> "source";
"lookupResponseHeader" -> "sourceFromSourceIO";
"mapMaybe" -> "mapMaybeStep";
"markdown" -> "defRenderingOptions";
"markdown" -> "markdownWith";
"markdownWith" -> "emptyAPI";
"markdownWith" -> "sampleByteStrings";
"markdownWith" -> "showPath";
"markdownWith" -> "single";
"mediaTypeRnf" -> "addHeader";
"mediaTypeRnf" -> "appendToPath";
"mediaTypeRnf" -> "appendToQueryString";
"mediaTypeRnf" -> "defaultRequest";
"mediaTypeRnf" -> "foldMapUnion";
"mediaTypeRnf" -> "matchUnion";
"mediaTypeRnf" -> "mediaTypeRnf";
"mediaTypeRnf" -> "parseBaseUrl";
"mediaTypeRnf" -> "setRequestBody";
"mediaTypeRnf" -> "setRequestBodyLBS";
"mediaTypeRnf" -> "showBaseUrl";
"methodCheck" -> "allowedMethod";
"methodCheck" -> "delayedFail";
"methodCheck" -> "err405";
"methodRouter" -> "acceptCheck";
"methodRouter" -> "addAcceptCheck";
"methodRouter" -> "addMethodCheck";
"methodRouter" -> "allowedMethodHead";
"methodRouter" -> "err406";
"methodRouter" -> "getAcceptHeader";
"methodRouter" -> "leafRouter";
"methodRouter" -> "methodCheck";
"methodRouter" -> "respond";
"methodRouter" -> "runAction";
"mkAuthHandler" -> "addAuthCheck";
"mkAuthHandler" -> "delayedFailFatal";
"mkAuthHandler" -> "genericServe";
"mkAuthHandler" -> "genericServeT";
"mkAuthHandler" -> "genericServeTWithContext";
"mkAuthHandler" -> "genericServer";
"mkAuthHandler" -> "genericServerT";
"mkAuthHandler" -> "runHandler";
"mkAuthHandler" -> "withRequest";
"mkAuthenticatedRequest" -> "parseBaseUrl";
"mkAuthenticatedRequest" -> "showBaseUrl";
"mkClientEnv" -> "defaultMakeClientRequest";
"mkContextWithErrorFormatter" -> "defaultErrorFormatters";
"noContentRouter" -> "addMethodCheck";
"noContentRouter" -> "getResponse";
"noContentRouter" -> "leafRouter";
"noContentRouter" -> "methodCheck";
"noContentRouter" -> "methodRouter";
"noContentRouter" -> "noContentRouter";
"noContentRouter" -> "respond";
"noContentRouter" -> "runAction";
"noContentRouter" -> "streamRouter";
"parseBaseUrl" -> "addHeader";
"parseBaseUrl" -> "basicAuthReq";
"parseBaseUrl" -> "parseBaseUrl";
"parseHeaders" -> "client";
"parseHeaders" -> "defaultMakeClientRequest";
"parseHeaders" -> "hoistClient";
"parseHeaders" -> "mkClientEnv";
"parseHeaders" -> "runClientM";
"performRequest" -> "catchConnectionError";
"performRequest" -> "clientResponseToResponse";
"performRequest" -> "initXhr";
"performRequest" -> "mkFailureResponse";
"performRequest" -> "performXhr";
"performRequest" -> "requestToClientRequest";
"performRequest" -> "toResponse";
"performWithStreamingRequest" -> "client";
"performWithStreamingRequest" -> "clientResponseToResponse";
"performWithStreamingRequest" -> "defAction";
"performWithStreamingRequest" -> "defEndpoint";
"performWithStreamingRequest" -> "defRenderingOptions";
"performWithStreamingRequest" -> "defResponse";
"performWithStreamingRequest" -> "defaultDocOptions";
"performWithStreamingRequest" -> "defaultMakeClientRequest";
"performWithStreamingRequest" -> "docs";
"performWithStreamingRequest" -> "docsWith";
"performWithStreamingRequest" -> "docsWithIntros";
"performWithStreamingRequest" -> "docsWithOptions";
"performWithStreamingRequest" -> "emptyAPI";
"performWithStreamingRequest" -> "extraInfo";
"performWithStreamingRequest" -> "fromInputStream";
"performWithStreamingRequest" -> "hoistClient";
"performWithStreamingRequest" -> "makeLenses";
"performWithStreamingRequest" -> "markdown";
"performWithStreamingRequest" -> "markdownWith";
"performWithStreamingRequest" -> "mkClientEnv";
"performWithStreamingRequest" -> "mkFailureResponse";
"performWithStreamingRequest" -> "noSamples";
"performWithStreamingRequest" -> "pretty";
"performWithStreamingRequest" -> "requestToClientRequest";
"performWithStreamingRequest" -> "runClientM";
"performWithStreamingRequest" -> "sampleByteString";
"performWithStreamingRequest" -> "sampleByteStrings";
"performWithStreamingRequest" -> "samples";
"performWithStreamingRequest" -> "showPath";
"performWithStreamingRequest" -> "single";
"performWithStreamingRequest" -> "singleSample";
"performWithStreamingRequest" -> "toSample";
"performWithStreamingRequest" -> "withClientM";
"performXhr" -> "onReadyStateChange";
"performXhr" -> "openXhr";
"performXhr" -> "sendXhr";
"performXhr" -> "setHeaders";
"performXhr" -> "toBody";
"performXhr" -> "toUrl";
"pretty" -> "argPath";
"pretty" -> "camelCase";
"pretty" -> "camelCaseL";
"pretty" -> "captureArg";
"pretty" -> "concatCase";
"pretty" -> "concatCaseL";
"pretty" -> "defReq";
"pretty" -> "isCapture";
"pretty" -> "listFromAPI";
"pretty" -> "snakeCase";
"pretty" -> "snakeCaseL";
"readFile" -> "fromActionStep";
"reflectDescription" -> "fromServant";
"reflectDescription" -> "genericApi";
"reflectDescription" -> "toServant";
"requestToClientRequest" -> "toOutputStream";
"respond" -> "acceptCheck";
"respond" -> "addAcceptCheck";
"respond" -> "addHeader";
"respond" -> "addMethodCheck";
"respond" -> "allowedMethodHead";
"respond" -> "err406";
"respond" -> "foldMapUnion";
"respond" -> "getAcceptHeader";
"respond" -> "getResponse";
"respond" -> "leafRouter";
"respond" -> "lookupResponseHeader";
"respond" -> "methodCheck";
"respond" -> "noHeader";
"respond" -> "runAction";
"respond" -> "safeLink";
"respond" -> "statusOf";
"routerLayout" -> "routerStructure";
"routerStructure" -> "routerStructure";
"runAction" -> "respond";
"runAction" -> "responseServerError";
"runAction" -> "runDelayed";
"runAction" -> "runHandler";
"runBasicAuth" -> "decodeBAHdr";
"runBasicAuth" -> "delayedFailFatal";
"runBasicAuth" -> "err401";
"runBasicAuth" -> "err403";
"runBasicAuth" -> "mkBAChallengerHdr";
"runChoice" -> "respond";
"runChoice" -> "runChoice";
"runChoice" -> "worseHTTPCode";
"runClientM" -> "runClientMOrigin";
"runClientM" -> "withClientM";
"runDelayed" -> "liftRouteResult";
"runDelayed" -> "runDelayedIO";
"runRequest" -> "client";
"runRouter" -> "runRouterEnv";
"runRouterEnv" -> "respond";
"runRouterEnv" -> "runChoice";
"runRouterEnv" -> "runRouterEnv";
"runSourceT" -> "runStepT";
"runStepT" -> "runStepT";
"safeLink" -> "safeLink\'";
"sameStructure" -> "routerStructure";
"sampleByteString" -> "toSample";
"serve" -> "serveWithContext";
"serveDirectory" -> "serveDirectoryFileServer";
"serveDirectoryEmbedded" -> "serveDirectoryWith";
"serveDirectoryFileServer" -> "fixPath";
"serveDirectoryFileServer" -> "serveDirectoryWith";
"serveDirectoryWebApp" -> "fixPath";
"serveDirectoryWebApp" -> "serveDirectoryWith";
"serveDirectoryWebAppLookup" -> "fixPath";
"serveDirectoryWebAppLookup" -> "serveDirectoryWith";
"serveWithContext" -> "emptyDelayed";
"serveWithContext" -> "mkContextWithErrorFormatter";
"serveWithContext" -> "runRouter";
"serveWithContext" -> "toApplication";
"setRequestBody" -> "runRequest";
"snakeCase" -> "snakeCaseL";
"source" -> "fromStepT";
"sourceFromSourceIO" -> "mapStepT";
"sourceFromSourceIO" -> "transformWithAtto";
"statusOf" -> "foldMapUnion";
"statusOf" -> "matchUnion";
"statusOf" -> "statusOf";
"streamRouter" -> "addAcceptCheck";
"streamRouter" -> "addBodyCheck";
"streamRouter" -> "addHeaderCheck";
"streamRouter" -> "addMethodCheck";
"streamRouter" -> "addParameterCheck";
"streamRouter" -> "delayedFail";
"streamRouter" -> "delayedFailFatal";
"streamRouter" -> "err406";
"streamRouter" -> "err415";
"streamRouter" -> "getAcceptHeader";
"streamRouter" -> "leafRouter";
"streamRouter" -> "mapMaybe";
"streamRouter" -> "methodCheck";
"streamRouter" -> "mkContextWithErrorFormatter";
"streamRouter" -> "passToServer";
"streamRouter" -> "pathRouter";
"streamRouter" -> "respond";
"streamRouter" -> "runAction";
"streamRouter" -> "runDelayed";
"streamRouter" -> "unfoldRequestArgument";
"streamRouter" -> "withRequest";
"toApplication" -> "respond";
"toApplication" -> "responseServerError";
"toOutputStream" -> "defaultErrorFormatters";
"toOutputStream" -> "descendIntoNamedContext";
"toOutputStream" -> "emptyServer";
"toOutputStream" -> "err300";
"toOutputStream" -> "err301";
"toOutputStream" -> "err302";
"toOutputStream" -> "err303";
"toOutputStream" -> "err304";
"toOutputStream" -> "err305";
"toOutputStream" -> "err307";
"toOutputStream" -> "err400";
"toOutputStream" -> "err401";
"toOutputStream" -> "err402";
"toOutputStream" -> "err403";
"toOutputStream" -> "err404";
"toOutputStream" -> "err405";
"toOutputStream" -> "err406";
"toOutputStream" -> "err407";
"toOutputStream" -> "err409";
"toOutputStream" -> "err410";
"toOutputStream" -> "err411";
"toOutputStream" -> "err412";
"toOutputStream" -> "err413";
"toOutputStream" -> "err414";
"toOutputStream" -> "err415";
"toOutputStream" -> "err416";
"toOutputStream" -> "err417";
"toOutputStream" -> "err418";
"toOutputStream" -> "err422";
"toOutputStream" -> "err500";
"toOutputStream" -> "err501";
"toOutputStream" -> "err502";
"toOutputStream" -> "err503";
"toOutputStream" -> "err504";
"toOutputStream" -> "err505";
"toOutputStream" -> "getAcceptHeader";
"toOutputStream" -> "hoistServer";
"toOutputStream" -> "layout";
"toOutputStream" -> "layoutWithContext";
"toOutputStream" -> "runHandler";
"toOutputStream" -> "serve";
"toOutputStream" -> "serveWithContext";
"toOutputStream" -> "toApplication";
"toOutputStream" -> "tweakResponse";
"toResponse" -> "getAllResponseHeaders";
"toResponse" -> "getResponse";
"toResponse" -> "getStatusText";
"toResponse" -> "parseHeaders";
"toUrl" -> "showBaseUrl";
"transformWithAtto" -> "mapStepT";
"transformWithAtto" -> "transformStepWithAtto";
"unfoldRequestArgument" -> "addHeader";
"unfoldRequestArgument" -> "lookupResponseHeader";
"unfoldRequestArgument" -> "noHeader";
"withClientEnvIO" -> "mkClientEnv";
"withRequest" -> "defaultErrorFormatters";
"withRequest" -> "mkContextWithErrorFormatter";
}
