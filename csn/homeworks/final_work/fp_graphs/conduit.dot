strict digraph deps {
"addE" [style=solid];
"allC" [style=solid];
"allCE" [style=solid];
"allE" [style=solid];
"allNewBuffersStrategy" [style=solid];
"allS" [style=solid];
"allocBuffer" [style=solid];
"and" [style=solid];
"andC" [style=solid];
"andCE" [style=solid];
"andE" [style=solid];
"anyC" [style=solid];
"anyCE" [style=solid];
"anyE" [style=solid];
"anyS" [style=solid];
"asum" [style=solid];
"asumC" [style=solid];
"await" [style=solid];
"awaitE" [style=solid];
"awaitForever" [style=solid];
"awaitNonNull" [style=solid];
"await\'" [style=solid];
"bbhelper" [style=solid];
"bracketP" [style=solid];
"bufferSize" [style=solid];
"build" [style=solid];
"builderToByteString" [style=solid];
"builderToByteStringFlush" [style=solid];
"builderToByteStringWith" [style=solid];
"builderToByteStringWithFlush" [style=solid];
"catMaybesC" [style=solid];
"catMaybesS" [style=solid];
"catchC" [style=solid];
"catchCatchC" [style=solid];
"catchExceptC" [style=solid];
"catchP" [style=solid];
"cautiousAcquire" [style=solid];
"cautiousCleanup" [style=solid];
"chunksOf" [style=solid];
"chunksOfCE" [style=solid];
"chunksOfE" [style=solid];
"chunksOfExactlyCE" [style=solid];
"chunksOfExactlyE" [style=solid];
"closeDirStream" [style=solid];
"closeFile" [style=solid];
"concatC" [style=solid];
"concatMapAccum" [style=solid];
"concatMapAccumC" [style=solid];
"concatMapAccumM" [style=solid];
"concatMapAccumMC" [style=solid];
"concatMapAccumMS" [style=solid];
"concatMapAccumS" [style=solid];
"concatMapC" [style=solid];
"concatMapCE" [style=solid];
"concatMapE" [style=solid];
"concatMapMC" [style=solid];
"concatMapMS" [style=solid];
"concatMapS" [style=solid];
"concatS" [style=solid];
"conduitToPipe" [style=solid];
"conduitVector" [style=solid];
"connect" [style=solid];
"connectFold" [style=solid];
"connectFoldM" [style=solid];
"connectResume" [style=solid];
"connectResumeConduit" [style=solid];
"connectStream" [style=solid];
"connectStream1" [style=solid];
"connectStream2" [style=solid];
"consumeC" [style=solid];
"consumeS" [style=solid];
"decodeUtf8" [style=solid];
"decodeUtf8C" [style=solid];
"decodeUtf8Lenient" [style=solid];
"decodeUtf8LenientC" [style=solid];
"defaultStrategy" [style=solid];
"drop" [style=solid];
"dropC" [style=solid];
"dropCE" [style=solid];
"dropE" [style=solid];
"dropS" [style=solid];
"dropWhile" [style=solid];
"dropWhileC" [style=solid];
"dropWhileCE" [style=solid];
"dropWhileE" [style=solid];
"elem" [style=solid];
"elemC" [style=solid];
"elemCE" [style=solid];
"elemE" [style=solid];
"encodeUtf8" [style=solid];
"encodeUtf8C" [style=solid];
"enumFromTo" [style=solid];
"enumFromToC" [style=solid];
"enumFromToS" [style=solid];
"enumFromToS_int" [style=solid];
"evalRWSC" [style=solid];
"evalRWSLC" [style=solid];
"evalStateC" [style=solid];
"evalStateLC" [style=solid];
"exceptC" [style=solid];
"execRWSC" [style=solid];
"execRWSLC" [style=solid];
"execStateC" [style=solid];
"execStateLC" [style=solid];
"execWriterC" [style=solid];
"execWriterLC" [style=solid];
"filter" [style=solid];
"filterC" [style=solid];
"filterCE" [style=solid];
"filterE" [style=solid];
"filterFuseRight" [style=solid];
"filterMC" [style=solid];
"filterMCE" [style=solid];
"filterME" [style=solid];
"filterMS" [style=solid];
"filterS" [style=solid];
"findC" [style=solid];
"findS" [style=solid];
"fmapS" [style=solid];
"fold" [style=solid];
"foldC" [style=solid];
"foldCE" [style=solid];
"foldE" [style=solid];
"foldM" [style=solid];
"foldMC" [style=solid];
"foldMCE" [style=solid];
"foldME" [style=solid];
"foldMS" [style=solid];
"foldMap" [style=solid];
"foldMapC" [style=solid];
"foldMapCE" [style=solid];
"foldMapE" [style=solid];
"foldMapM" [style=solid];
"foldMapMC" [style=solid];
"foldMapMCE" [style=solid];
"foldMapME" [style=solid];
"foldMaybeNull" [style=solid];
"foldS" [style=solid];
"foldWhile" [style=solid];
"foldl" [style=solid];
"foldl1C" [style=solid];
"foldl1E" [style=solid];
"foldl1S" [style=solid];
"foldlC" [style=solid];
"foldlCE" [style=solid];
"foldlE" [style=solid];
"fuse" [style=solid];
"fuseBoth" [style=solid];
"fuseBothMaybe" [style=solid];
"fuseLeftovers" [style=solid];
"fuseReturnLeftovers" [style=solid];
"fuseStream" [style=solid];
"fuseUpstream" [style=solid];
"generalizeUpstream" [style=solid];
"getFileType" [style=solid];
"groupBy1S" [style=solid];
"groupByC" [style=solid];
"groupByS" [style=solid];
"groupOn1C" [style=solid];
"groupOn1S" [style=solid];
"handleC" [style=solid];
"handleP" [style=solid];
"head" [style=solid];
"headC" [style=solid];
"headCE" [style=solid];
"headDef" [style=solid];
"headDefC" [style=solid];
"headE" [style=solid];
"headS" [style=solid];
"idP" [style=solid];
"infixl" [style=solid];
"infixr" [style=solid];
"initRepeatS" [style=solid];
"initReplicateS" [style=solid];
"injectLeftovers" [style=solid];
"intersperseC" [style=solid];
"intersperseS" [style=solid];
"isSymlink" [style=solid];
"isolateC" [style=solid];
"isolateS" [style=solid];
"iterM" [style=solid];
"iterMC" [style=solid];
"iterMS" [style=solid];
"iterate" [style=solid];
"iterateC" [style=solid];
"iterateS" [style=solid];
"lastC" [style=solid];
"lastCE" [style=solid];
"lastDef" [style=solid];
"lastDefC" [style=solid];
"lastEC" [style=solid];
"lastES" [style=solid];
"lastS" [style=solid];
"leftover" [style=solid];
"length" [style=solid];
"lengthC" [style=solid];
"lengthCE" [style=solid];
"lengthE" [style=solid];
"lengthIf" [style=solid];
"lengthIfC" [style=solid];
"lengthIfCE" [style=solid];
"lengthIfE" [style=solid];
"line" [style=solid];
"lineAscii" [style=solid];
"lineAsciiC" [style=solid];
"lineC" [style=solid];
"linesUnbounded" [style=solid];
"linesUnboundedAscii" [style=solid];
"linesUnboundedAsciiC" [style=solid];
"linesUnboundedC" [style=solid];
"map" [style=solid];
"mapAccumC" [style=solid];
"mapAccumMC" [style=solid];
"mapAccumMS" [style=solid];
"mapAccumS" [style=solid];
"mapAccumWhileC" [style=solid];
"mapAccumWhileMC" [style=solid];
"mapAccumWhileMS" [style=solid];
"mapAccumWhileS" [style=solid];
"mapC" [style=solid];
"mapCE" [style=solid];
"mapE" [style=solid];
"mapFoldableC" [style=solid];
"mapFoldableMC" [style=solid];
"mapFoldableMS" [style=solid];
"mapFoldableS" [style=solid];
"mapFuseRight" [style=solid];
"mapInput" [style=solid];
"mapInputM" [style=solid];
"mapM" [style=solid];
"mapMC" [style=solid];
"mapMCE" [style=solid];
"mapME" [style=solid];
"mapMS" [style=solid];
"mapM_" [style=solid];
"mapM_C" [style=solid];
"mapM_CE" [style=solid];
"mapM_E" [style=solid];
"mapM_S" [style=solid];
"mapMaybeC" [style=solid];
"mapMaybeMC" [style=solid];
"mapMaybeMS" [style=solid];
"mapMaybeS" [style=solid];
"mapOutput" [style=solid];
"mapOutputMaybe" [style=solid];
"mapS" [style=solid];
"mapWhile" [style=solid];
"mapWhileC" [style=solid];
"maximum" [style=solid];
"maximumC" [style=solid];
"maximumCE" [style=solid];
"maximumE" [style=solid];
"maybeC" [style=solid];
"mergeSource" [style=solid];
"minimum" [style=solid];
"minimumC" [style=solid];
"minimumCE" [style=solid];
"minimumE" [style=solid];
"newByteStringBuilderRecv" [style=solid];
"notElem" [style=solid];
"notElemC" [style=solid];
"notElemCE" [style=solid];
"notElemE" [style=solid];
"null" [style=solid];
"nullC" [style=solid];
"nullCE" [style=solid];
"nullE" [style=solid];
"ofoldlPrime" [style=solid];
"omapCE" [style=solid];
"omapE" [style=solid];
"omapMCE" [style=solid];
"omapME" [style=solid];
"onAwait" [style=solid];
"openDirStream" [style=solid];
"openFile" [style=solid];
"or" [style=solid];
"orC" [style=solid];
"orCE" [style=solid];
"orE" [style=solid];
"passthroughSink" [style=solid];
"peek" [style=solid];
"peekC" [style=solid];
"peekCE" [style=solid];
"peekE" [style=solid];
"peekForever" [style=solid];
"peekForeverE" [style=solid];
"pipe" [style=solid];
"pipeL" [style=solid];
"print" [style=solid];
"printC" [style=solid];
"product" [style=solid];
"productC" [style=solid];
"productCE" [style=solid];
"productE" [style=solid];
"readChunk" [style=solid];
"readDirStream" [style=solid];
"readerC" [style=solid];
"repeat" [style=solid];
"repeatC" [style=solid];
"repeatMC" [style=solid];
"repeatMS" [style=solid];
"repeatWhileMC" [style=solid];
"repeatWhileMS" [style=solid];
"replicate" [style=solid];
"replicateC" [style=solid];
"replicateM" [style=solid];
"replicateMC" [style=solid];
"replicateMS" [style=solid];
"replicateS" [style=solid];
"reuseBuffer" [style=solid];
"reuseBufferStrategy" [style=solid];
"rsrc" [style=solid];
"runCatchC" [style=solid];
"runConduit" [style=solid];
"runConduitPure" [style=solid];
"runConduitRes" [style=solid];
"runExceptC" [style=solid];
"runMaybeC" [style=solid];
"runPipe" [style=solid];
"runRWSC" [style=solid];
"runRWSLC" [style=solid];
"runReaderC" [style=solid];
"runStateC" [style=solid];
"runStateLC" [style=solid];
"runStream" [style=solid];
"runWriterC" [style=solid];
"runWriterLC" [style=solid];
"rwsC" [style=solid];
"rwsLC" [style=solid];
"scan" [style=solid];
"scanM" [style=solid];
"scanl" [style=solid];
"scanlC" [style=solid];
"scanlM" [style=solid];
"scanlMC" [style=solid];
"scanlMS" [style=solid];
"scanlS" [style=solid];
"sealConduitT" [style=solid];
"sequence" [style=solid];
"sequenceConduits" [style=solid];
"sequenceSinks" [style=solid];
"sequenceSources" [style=solid];
"sinkFile" [style=solid];
"sinkFileBS" [style=solid];
"sinkFileCautious" [style=solid];
"sinkHandle" [style=solid];
"sinkHandleBuilder" [style=solid];
"sinkHandleFlush" [style=solid];
"sinkIOHandle" [style=solid];
"sinkLazyBuilderC" [style=solid];
"sinkLazyBuilderS" [style=solid];
"sinkLazyC" [style=solid];
"sinkLazyS" [style=solid];
"sinkList" [style=solid];
"sinkNull" [style=solid];
"sinkNullC" [style=solid];
"sinkNullS" [style=solid];
"sinkSystemTempFile" [style=solid];
"sinkTempFile" [style=solid];
"sinkToPipe" [style=solid];
"sinkVectorC" [style=solid];
"sinkVectorNC" [style=solid];
"sinkVectorNS" [style=solid];
"sinkVectorS" [style=solid];
"sliceSize" [style=solid];
"slidingWindowC" [style=solid];
"slidingWindowS" [style=solid];
"sourceDirectory" [style=solid];
"sourceDirectoryDeep" [style=solid];
"sourceFile" [style=solid];
"sourceFileBS" [style=solid];
"sourceHandle" [style=solid];
"sourceHandleUnsafe" [style=solid];
"sourceIOHandle" [style=solid];
"sourceLazy" [style=solid];
"sourceList" [style=solid];
"sourceListC" [style=solid];
"sourceListS" [style=solid];
"sourceNullC" [style=solid];
"sourceNullS" [style=solid];
"sourceToList" [style=solid];
"sourceToPipe" [style=solid];
"splitOnUnboundedEC" [style=solid];
"splitOnUnboundedES" [style=solid];
"src" [style=solid];
"srcMapM_" [style=solid];
"srcSinkNull" [style=solid];
"stateC" [style=solid];
"stateLC" [style=solid];
"stderr" [style=solid];
"stderrC" [style=solid];
"stdin" [style=solid];
"stdinC" [style=solid];
"stdout" [style=solid];
"stdoutC" [style=solid];
"streamConduit" [style=solid];
"streamSource" [style=solid];
"streamSourcePure" [style=solid];
"sum" [style=solid];
"sumC" [style=solid];
"sumCE" [style=solid];
"sumE" [style=solid];
"take" [style=solid];
"takeC" [style=solid];
"takeCE" [style=solid];
"takeE" [style=solid];
"takeExactly" [style=solid];
"takeExactlyC" [style=solid];
"takeExactlyCE" [style=solid];
"takeExactlyE" [style=solid];
"takeExactlyUntilE" [style=solid];
"takeS" [style=solid];
"takeWhile" [style=solid];
"takeWhileC" [style=solid];
"takeWhileCE" [style=solid];
"takeWhileE" [style=solid];
"thread" [style=solid];
"toConsumer" [style=solid];
"toProducer" [style=solid];
"transPipe" [style=solid];
"tryC" [style=solid];
"tryP" [style=solid];
"uncons" [style=solid];
"unconsEither" [style=solid];
"unconsEitherM" [style=solid];
"unconsM" [style=solid];
"unfold" [style=solid];
"unfoldC" [style=solid];
"unfoldEitherC" [style=solid];
"unfoldEitherMC" [style=solid];
"unfoldEitherMS" [style=solid];
"unfoldEitherS" [style=solid];
"unfoldMC" [style=solid];
"unfoldMS" [style=solid];
"unfoldS" [style=solid];
"unlines" [style=solid];
"unlinesAscii" [style=solid];
"unlinesAsciiC" [style=solid];
"unlinesC" [style=solid];
"unsafeBuilderToByteString" [style=solid];
"unsafeFreezeBuffer" [style=solid];
"unsafeFreezeNonEmptyBuffer" [style=solid];
"unsealConduitT" [style=solid];
"unstream" [style=solid];
"updateEndOfSlice" [style=solid];
"vectorBuilder" [style=solid];
"vectorBuilderC" [style=solid];
"withSinkFile" [style=solid];
"withSinkFileBuilder" [style=solid];
"withSinkFileCautious" [style=solid];
"withSourceFile" [style=solid];
"withUpstream" [style=solid];
"writerC" [style=solid];
"writerLC" [style=solid];
"yield" [style=solid];
"yieldM" [style=solid];
"yieldManyC" [style=solid];
"yieldManyS" [style=solid];
"yieldS" [style=solid];
"zipConduitApp" [style=solid];
"zipSinks" [style=solid];
"zipSources" [style=solid];
"zipSourcesApp" [style=solid];
"" -> "allE";
"" -> "allNewBuffersStrategy";
"" -> "and";
"" -> "andE";
"" -> "anyE";
"" -> "asum";
"" -> "await";
"" -> "awaitForever";
"" -> "awaitNonNull";
"" -> "bracketP";
"" -> "builderToByteString";
"" -> "builderToByteStringFlush";
"" -> "builderToByteStringWith";
"" -> "builderToByteStringWithFlush";
"" -> "catchC";
"" -> "chunksOfE";
"" -> "chunksOfExactlyE";
"" -> "concatMapAccum";
"" -> "concatMapAccumM";
"" -> "concatMapE";
"" -> "conduitVector";
"" -> "connect";
"" -> "decodeUtf8";
"" -> "decodeUtf8Lenient";
"" -> "drop";
"" -> "dropE";
"" -> "dropWhile";
"" -> "dropWhileE";
"" -> "elem";
"" -> "elemE";
"" -> "encodeUtf8";
"" -> "enumFromTo";
"" -> "filter";
"" -> "filterE";
"" -> "filterME";
"" -> "fold";
"" -> "foldE";
"" -> "foldM";
"" -> "foldME";
"" -> "foldMap";
"" -> "foldMapE";
"" -> "foldMapM";
"" -> "foldMapME";
"" -> "foldWhile";
"" -> "foldl";
"" -> "foldlE";
"" -> "fuse";
"" -> "fuseBoth";
"" -> "fuseBothMaybe";
"" -> "fuseLeftovers";
"" -> "fuseReturnLeftovers";
"" -> "fuseUpstream";
"" -> "handleC";
"" -> "head";
"" -> "headDef";
"" -> "headE";
"" -> "iterM";
"" -> "iterate";
"" -> "lastDef";
"" -> "leftover";
"" -> "length";
"" -> "lengthE";
"" -> "lengthIf";
"" -> "lengthIfE";
"" -> "line";
"" -> "lineAscii";
"" -> "linesUnbounded";
"" -> "linesUnboundedAscii";
"" -> "map";
"" -> "mapAccumS";
"" -> "mapE";
"" -> "mapInput";
"" -> "mapInputM";
"" -> "mapM";
"" -> "mapME";
"" -> "mapM_";
"" -> "mapM_E";
"" -> "mapOutput";
"" -> "mapOutputMaybe";
"" -> "mapWhile";
"" -> "maximum";
"" -> "maximumE";
"" -> "mergeSource";
"" -> "minimum";
"" -> "minimumE";
"" -> "notElem";
"" -> "notElemE";
"" -> "null";
"" -> "nullE";
"" -> "omapE";
"" -> "omapME";
"" -> "or";
"" -> "orE";
"" -> "passthroughSink";
"" -> "peek";
"" -> "peekE";
"" -> "peekForever";
"" -> "peekForeverE";
"" -> "print";
"" -> "product";
"" -> "productE";
"" -> "repeat";
"" -> "replicate";
"" -> "replicateM";
"" -> "reuseBufferStrategy";
"" -> "runConduit";
"" -> "runConduitPure";
"" -> "runConduitRes";
"" -> "scanl";
"" -> "scanlM";
"" -> "sealConduitT";
"" -> "sequenceConduits";
"" -> "sequenceSinks";
"" -> "sequenceSources";
"" -> "sinkFile";
"" -> "sinkFileBS";
"" -> "sinkFileCautious";
"" -> "sinkHandle";
"" -> "sinkHandleBuilder";
"" -> "sinkHandleFlush";
"" -> "sinkIOHandle";
"" -> "sinkList";
"" -> "sinkNull";
"" -> "sinkSystemTempFile";
"" -> "sinkTempFile";
"" -> "sourceDirectory";
"" -> "sourceDirectoryDeep";
"" -> "sourceFile";
"" -> "sourceFileBS";
"" -> "sourceHandle";
"" -> "sourceHandleUnsafe";
"" -> "sourceIOHandle";
"" -> "sourceLazy";
"" -> "sourceToList";
"" -> "stderr";
"" -> "stdin";
"" -> "stdout";
"" -> "sum";
"" -> "sumE";
"" -> "take";
"" -> "takeE";
"" -> "takeExactly";
"" -> "takeExactlyE";
"" -> "takeExactlyUntilE";
"" -> "takeWhile";
"" -> "takeWhileE";
"" -> "toConsumer";
"" -> "toProducer";
"" -> "transPipe";
"" -> "tryC";
"" -> "unfold";
"" -> "unlines";
"" -> "unlinesAscii";
"" -> "unsafeBuilderToByteString";
"" -> "unsealConduitT";
"" -> "vectorBuilder";
"" -> "withSinkFile";
"" -> "withSinkFileBuilder";
"" -> "withSinkFileCautious";
"" -> "withSourceFile";
"" -> "yield";
"" -> "yieldM";
"allC" -> "allC";
"allC" -> "allS";
"allNewBuffersStrategy" -> "allocBuffer";
"allS" -> "findS";
"allS" -> "fmapS";
"andE" -> "allE";
"anyC" -> "anyC";
"anyC" -> "anyS";
"anyS" -> "findS";
"anyS" -> "fmapS";
"asum" -> "foldl";
"awaitForever" -> "awaitE";
"awaitNonNull" -> "await";
"bbhelper" -> "await\'";
"bbhelper" -> "newByteStringBuilderRecv";
"builderToByteString" -> "builderToByteStringWith";
"builderToByteString" -> "defaultStrategy";
"builderToByteStringFlush" -> "builderToByteStringWithFlush";
"builderToByteStringFlush" -> "defaultStrategy";
"builderToByteStringWith" -> "await";
"builderToByteStringWith" -> "bbhelper";
"builderToByteStringWith" -> "yield";
"builderToByteStringWithFlush" -> "await";
"builderToByteStringWithFlush" -> "bbhelper";
"builderToByteStringWithFlush" -> "yield";
"catMaybesC" -> "awaitForever";
"catMaybesC" -> "catMaybesC";
"catMaybesC" -> "catMaybesS";
"catMaybesC" -> "yield";
"chunksOf" -> "await";
"chunksOf" -> "yield";
"chunksOfE" -> "await";
"chunksOfE" -> "chunksOfExactlyE";
"chunksOfE" -> "yield";
"chunksOfExactlyE" -> "await";
"chunksOfExactlyE" -> "chunksOfExactlyE";
"chunksOfExactlyE" -> "leftover";
"chunksOfExactlyE" -> "yield";
"concatC" -> "awaitForever";
"concatC" -> "concatC";
"concatC" -> "concatS";
"concatC" -> "sourceList";
"concatMapAccumC" -> "concatMapAccumC";
"concatMapAccumC" -> "concatMapAccumS";
"concatMapAccumMC" -> "awaitForever";
"concatMapAccumMC" -> "concatMapAccumMC";
"concatMapAccumMC" -> "concatMapAccumMS";
"concatMapAccumMC" -> "yield";
"concatMapC" -> "awaitForever";
"concatMapC" -> "concatMapC";
"concatMapC" -> "concatMapS";
"concatMapC" -> "sourceList";
"concatMapMC" -> "concatMapMC";
"concatMapMC" -> "concatMapMS";
"concatS" -> "concatMapS";
"conduitToPipe" -> "injectLeftovers";
"conduitVector" -> "yield";
"connectFold" -> "src";
"connectFoldM" -> "src";
"connectStream2" -> "pipe";
"consumeC" -> "await";
"consumeC" -> "consumeC";
"consumeC" -> "consumeS";
"decodeUtf8" -> "await";
"decodeUtf8" -> "leftover";
"decodeUtf8" -> "yield";
"decodeUtf8Lenient" -> "await";
"decodeUtf8Lenient" -> "yield";
"defaultStrategy" -> "allNewBuffersStrategy";
"dropC" -> "await";
"dropC" -> "dropC";
"dropC" -> "dropS";
"dropE" -> "await";
"dropE" -> "leftover";
"dropWhile" -> "await";
"dropWhile" -> "leftover";
"dropWhileE" -> "await";
"dropWhileE" -> "leftover";
"encodeUtf8" -> "map";
"enumFromToC" -> "enumFromToC";
"enumFromToC" -> "enumFromToS";
"enumFromToC" -> "yield";
"evalRWSC" -> "runRWSC";
"evalRWSLC" -> "runRWSLC";
"evalStateC" -> "runStateC";
"evalStateLC" -> "runStateLC";
"exceptC" -> "transPipe";
"execRWSC" -> "chunksOf";
"execRWSC" -> "concatMapAccum";
"execRWSC" -> "concatMapAccumM";
"execRWSC" -> "drop";
"execRWSC" -> "enumFromTo";
"execRWSC" -> "filter";
"execRWSC" -> "fold";
"execRWSC" -> "foldM";
"execRWSC" -> "foldMap";
"execRWSC" -> "foldMapM";
"execRWSC" -> "head";
"execRWSC" -> "iterM";
"execRWSC" -> "iterate";
"execRWSC" -> "map";
"execRWSC" -> "mapM";
"execRWSC" -> "mapM_";
"execRWSC" -> "peek";
"execRWSC" -> "replicate";
"execRWSC" -> "replicateM";
"execRWSC" -> "runRWSC";
"execRWSC" -> "scan";
"execRWSC" -> "scanM";
"execRWSC" -> "scanl";
"execRWSC" -> "scanlM";
"execRWSC" -> "sequence";
"execRWSC" -> "sinkNull";
"execRWSC" -> "sourceList";
"execRWSC" -> "take";
"execRWSC" -> "uncons";
"execRWSC" -> "unconsEither";
"execRWSC" -> "unconsEitherM";
"execRWSC" -> "unconsM";
"execRWSC" -> "unfold";
"execRWSLC" -> "runRWSLC";
"execStateC" -> "runStateC";
"execStateLC" -> "runStateLC";
"execWriterC" -> "runWriterC";
"execWriterLC" -> "runWriterLC";
"filterC" -> "filterC";
"filterC" -> "filterS";
"filterFuseRight" -> "awaitForever";
"filterFuseRight" -> "src";
"filterMC" -> "awaitForever";
"filterMC" -> "filterMC";
"filterMC" -> "filterMS";
"filterMC" -> "yield";
"findC" -> "await";
"findC" -> "findC";
"findC" -> "findS";
"fmapS" -> "allC";
"fmapS" -> "allCE";
"fmapS" -> "andC";
"fmapS" -> "andCE";
"fmapS" -> "anyC";
"fmapS" -> "anyCE";
"fmapS" -> "asumC";
"fmapS" -> "chunksOfCE";
"fmapS" -> "chunksOfExactlyCE";
"fmapS" -> "concatC";
"fmapS" -> "concatMapAccumC";
"fmapS" -> "concatMapAccumMC";
"fmapS" -> "concatMapC";
"fmapS" -> "concatMapCE";
"fmapS" -> "concatMapMC";
"fmapS" -> "conduitVector";
"fmapS" -> "decodeUtf8C";
"fmapS" -> "decodeUtf8LenientC";
"fmapS" -> "dropC";
"fmapS" -> "dropCE";
"fmapS" -> "dropWhileC";
"fmapS" -> "dropWhileCE";
"fmapS" -> "elemC";
"fmapS" -> "elemCE";
"fmapS" -> "encodeUtf8C";
"fmapS" -> "enumFromToC";
"fmapS" -> "filterC";
"fmapS" -> "filterCE";
"fmapS" -> "filterMC";
"fmapS" -> "filterMCE";
"fmapS" -> "findC";
"fmapS" -> "foldC";
"fmapS" -> "foldCE";
"fmapS" -> "foldMC";
"fmapS" -> "foldMCE";
"fmapS" -> "foldMapC";
"fmapS" -> "foldMapCE";
"fmapS" -> "foldMapMC";
"fmapS" -> "foldMapMCE";
"fmapS" -> "foldlC";
"fmapS" -> "foldlCE";
"fmapS" -> "headC";
"fmapS" -> "headCE";
"fmapS" -> "headDefC";
"fmapS" -> "intersperseC";
"fmapS" -> "iterMC";
"fmapS" -> "iterateC";
"fmapS" -> "lastC";
"fmapS" -> "lastCE";
"fmapS" -> "lastDefC";
"fmapS" -> "lengthC";
"fmapS" -> "lengthCE";
"fmapS" -> "lengthIfC";
"fmapS" -> "lengthIfCE";
"fmapS" -> "lineAsciiC";
"fmapS" -> "lineC";
"fmapS" -> "linesUnboundedAsciiC";
"fmapS" -> "linesUnboundedC";
"fmapS" -> "mapAccumWhileC";
"fmapS" -> "mapAccumWhileMC";
"fmapS" -> "mapC";
"fmapS" -> "mapCE";
"fmapS" -> "mapMC";
"fmapS" -> "mapMCE";
"fmapS" -> "mapM_C";
"fmapS" -> "mapM_CE";
"fmapS" -> "mapWhileC";
"fmapS" -> "maximumC";
"fmapS" -> "maximumCE";
"fmapS" -> "minimumC";
"fmapS" -> "minimumCE";
"fmapS" -> "notElemC";
"fmapS" -> "notElemCE";
"fmapS" -> "nullC";
"fmapS" -> "nullCE";
"fmapS" -> "omapCE";
"fmapS" -> "omapMCE";
"fmapS" -> "orC";
"fmapS" -> "orCE";
"fmapS" -> "peekC";
"fmapS" -> "peekCE";
"fmapS" -> "printC";
"fmapS" -> "productC";
"fmapS" -> "productCE";
"fmapS" -> "repeatC";
"fmapS" -> "repeatMC";
"fmapS" -> "repeatWhileMC";
"fmapS" -> "replicateC";
"fmapS" -> "replicateMC";
"fmapS" -> "scanlC";
"fmapS" -> "scanlMC";
"fmapS" -> "slidingWindowC";
"fmapS" -> "stderrC";
"fmapS" -> "stdinC";
"fmapS" -> "stdoutC";
"fmapS" -> "sumC";
"fmapS" -> "sumCE";
"fmapS" -> "takeC";
"fmapS" -> "takeCE";
"fmapS" -> "takeExactlyC";
"fmapS" -> "takeExactlyCE";
"fmapS" -> "takeWhileC";
"fmapS" -> "takeWhileCE";
"fmapS" -> "unfoldC";
"fmapS" -> "unlinesAsciiC";
"fmapS" -> "unlinesC";
"fmapS" -> "vectorBuilderC";
"foldC" -> "await";
"foldC" -> "foldC";
"foldC" -> "foldS";
"foldMC" -> "await";
"foldMC" -> "foldMC";
"foldMC" -> "foldMS";
"foldME" -> "foldM";
"foldMap" -> "fold";
"foldMapM" -> "awaitForever";
"foldMapM" -> "foldM";
"foldWhile" -> "await";
"foldl1C" -> "await";
"foldl1C" -> "foldl1C";
"foldl1C" -> "foldl1S";
"foldl1E" -> "foldMaybeNull";
"foldl1E" -> "foldl";
"foldlE" -> "ofoldlPrime";
"fuse" -> "fuse";
"fuseBoth" -> "generalizeUpstream";
"fuseBoth" -> "pipeL";
"fuseBoth" -> "withUpstream";
"fuseBothMaybe" -> "pipeL";
"fuseLeftovers" -> "fuseReturnLeftovers";
"fuseLeftovers" -> "leftover";
"fuseLeftovers" -> "mapM_";
"fuseUpstream" -> "fuseBoth";
"generalizeUpstream" -> "catchCatchC";
"generalizeUpstream" -> "catchExceptC";
"generalizeUpstream" -> "evalRWSC";
"generalizeUpstream" -> "evalRWSLC";
"generalizeUpstream" -> "evalStateC";
"generalizeUpstream" -> "evalStateLC";
"generalizeUpstream" -> "exceptC";
"generalizeUpstream" -> "execRWSC";
"generalizeUpstream" -> "execRWSLC";
"generalizeUpstream" -> "execStateC";
"generalizeUpstream" -> "execStateLC";
"generalizeUpstream" -> "execWriterC";
"generalizeUpstream" -> "execWriterLC";
"generalizeUpstream" -> "maybeC";
"generalizeUpstream" -> "readerC";
"generalizeUpstream" -> "runCatchC";
"generalizeUpstream" -> "runExceptC";
"generalizeUpstream" -> "runMaybeC";
"generalizeUpstream" -> "runRWSC";
"generalizeUpstream" -> "runRWSLC";
"generalizeUpstream" -> "runReaderC";
"generalizeUpstream" -> "runStateC";
"generalizeUpstream" -> "runStateLC";
"generalizeUpstream" -> "runWriterC";
"generalizeUpstream" -> "runWriterLC";
"generalizeUpstream" -> "rwsC";
"generalizeUpstream" -> "rwsLC";
"generalizeUpstream" -> "stateC";
"generalizeUpstream" -> "stateLC";
"generalizeUpstream" -> "writerC";
"generalizeUpstream" -> "writerLC";
"groupByC" -> "await";
"groupByC" -> "groupByC";
"groupByC" -> "groupByS";
"groupByC" -> "yield";
"groupByS" -> "groupBy1S";
"groupByS" -> "mapS";
"groupOn1C" -> "await";
"groupOn1C" -> "groupOn1C";
"groupOn1C" -> "groupOn1S";
"groupOn1C" -> "yield";
"groupOn1S" -> "groupBy1S";
"handleC" -> "catchC";
"handleP" -> "catchP";
"headC" -> "headC";
"headC" -> "headS";
"headDef" -> "head";
"headE" -> "await";
"headE" -> "leftover";
"idP" -> "idP";
"infixl" -> "pipe";
"infixr" -> "zipConduitApp";
"intersperseC" -> "await";
"intersperseC" -> "intersperseC";
"intersperseC" -> "intersperseS";
"intersperseC" -> "yield";
"isolateC" -> "await";
"isolateC" -> "awaitForever";
"isolateC" -> "isolateC";
"isolateC" -> "isolateS";
"isolateC" -> "yield";
"iterMC" -> "awaitForever";
"iterMC" -> "iterMC";
"iterMC" -> "iterMS";
"iterMC" -> "yield";
"iterateC" -> "iterateC";
"iterateC" -> "iterateS";
"iterateC" -> "yield";
"lastC" -> "await";
"lastC" -> "lastC";
"lastC" -> "lastS";
"lastEC" -> "awaitNonNull";
"lastEC" -> "lastEC";
"lastEC" -> "lastES";
"length" -> "foldl";
"lengthE" -> "foldl";
"lengthIf" -> "foldl";
"lengthIfE" -> "foldlE";
"line" -> "takeExactlyUntilE";
"lineAscii" -> "takeExactlyUntilE";
"mapAccumC" -> "await";
"mapAccumC" -> "mapAccumC";
"mapAccumC" -> "mapAccumS";
"mapAccumC" -> "yield";
"mapAccumMC" -> "await";
"mapAccumMC" -> "mapAccumMC";
"mapAccumMC" -> "mapAccumMS";
"mapAccumMC" -> "yield";
"mapAccumS" -> "await";
"mapAccumS" -> "sealConduitT";
"mapAccumWhileC" -> "await";
"mapAccumWhileC" -> "mapAccumWhileC";
"mapAccumWhileC" -> "mapAccumWhileS";
"mapAccumWhileC" -> "yield";
"mapAccumWhileMC" -> "await";
"mapAccumWhileMC" -> "mapAccumWhileMC";
"mapAccumWhileMC" -> "mapAccumWhileMS";
"mapAccumWhileMC" -> "yield";
"mapC" -> "mapC";
"mapC" -> "mapS";
"mapFoldableC" -> "awaitForever";
"mapFoldableC" -> "mapFoldableC";
"mapFoldableC" -> "mapFoldableS";
"mapFoldableC" -> "yield";
"mapFoldableMC" -> "mapFoldableMC";
"mapFoldableMC" -> "mapFoldableMS";
"mapFuseRight" -> "awaitForever";
"mapFuseRight" -> "src";
"mapFuseRight" -> "yield";
"mapInput" -> "mapInput";
"mapInputM" -> "connectResume";
"mapInputM" -> "sealConduitT";
"mapInputM" -> "src";
"mapMC" -> "awaitForever";
"mapMC" -> "mapMC";
"mapMC" -> "mapMS";
"mapMC" -> "yield";
"mapM_C" -> "mapM_C";
"mapM_C" -> "mapM_S";
"mapMaybeC" -> "awaitForever";
"mapMaybeC" -> "mapMaybeC";
"mapMaybeC" -> "mapMaybeS";
"mapMaybeC" -> "yield";
"mapMaybeMC" -> "awaitForever";
"mapMaybeMC" -> "mapMaybeMC";
"mapMaybeMC" -> "mapMaybeMS";
"mapMaybeMC" -> "yield";
"mapWhile" -> "await";
"mapWhile" -> "leftover";
"mapWhile" -> "yield";
"maximumE" -> "foldl1E";
"maybeC" -> "transPipe";
"mergeSource" -> "await";
"mergeSource" -> "sealConduitT";
"mergeSource" -> "yield";
"minimumE" -> "foldl1E";
"newByteStringBuilderRecv" -> "unsafeFreezeNonEmptyBuffer";
"newByteStringBuilderRecv" -> "updateEndOfSlice";
"null" -> "peek";
"nullE" -> "await";
"nullE" -> "leftover";
"omapE" -> "awaitForever";
"omapME" -> "awaitForever";
"orE" -> "anyE";
"passthroughSink" -> "awaitForever";
"passthroughSink" -> "yield";
"peek" -> "await";
"peek" -> "awaitForever";
"peek" -> "leftover";
"peek" -> "yield";
"peekE" -> "await";
"peekE" -> "leftover";
"peekForever" -> "peek";
"peekForeverE" -> "allS";
"peekForeverE" -> "anyS";
"peekForeverE" -> "concatMapMS";
"peekForeverE" -> "concatMapS";
"peekForeverE" -> "concatS";
"peekForeverE" -> "filterMS";
"peekForeverE" -> "findS";
"peekForeverE" -> "foldl1S";
"peekForeverE" -> "initRepeatS";
"peekForeverE" -> "initReplicateS";
"peekForeverE" -> "intersperseS";
"peekForeverE" -> "lastES";
"peekForeverE" -> "lastS";
"peekForeverE" -> "mapAccumWhileMS";
"peekForeverE" -> "mapAccumWhileS";
"peekForeverE" -> "peekE";
"peekForeverE" -> "repeatMS";
"peekForeverE" -> "repeatWhileMS";
"peekForeverE" -> "scanlMS";
"peekForeverE" -> "scanlS";
"peekForeverE" -> "sinkLazyBuilderS";
"peekForeverE" -> "sinkLazyS";
"peekForeverE" -> "sinkVectorNS";
"peekForeverE" -> "sinkVectorS";
"peekForeverE" -> "slidingWindowS";
"peekForeverE" -> "splitOnUnboundedES";
"peekForeverE" -> "yieldManyS";
"print" -> "mapM_";
"product" -> "foldl";
"productE" -> "foldlE";
"readChunk" -> "closeDirStream";
"readChunk" -> "getFileType";
"readChunk" -> "openDirStream";
"readChunk" -> "readDirStream";
"readDirStream" -> "readDirStream";
"readerC" -> "transPipe";
"repeat" -> "iterate";
"repeatMC" -> "repeatMC";
"repeatMC" -> "repeatMS";
"repeatWhileMC" -> "repeatWhileMC";
"repeatWhileMC" -> "repeatWhileMS";
"repeatWhileMC" -> "yield";
"replicateC" -> "replicateC";
"replicateC" -> "replicateS";
"replicateC" -> "yield";
"replicateMC" -> "replicateMC";
"replicateMC" -> "replicateMS";
"replicateMC" -> "yield";
"reuseBufferStrategy" -> "allocBuffer";
"reuseBufferStrategy" -> "bufferSize";
"reuseBufferStrategy" -> "reuseBuffer";
"rsrc" -> "connectResume";
"rsrc" -> "connectResumeConduit";
"rsrc" -> "mapOutput";
"rsrc" -> "pipeL";
"rsrc" -> "rsrc";
"rsrc" -> "src";
"rsrc" -> "yield";
"rsrc" -> "zipSourcesApp";
"runConduit" -> "injectLeftovers";
"runConduit" -> "runPipe";
"runConduitPure" -> "runConduit";
"runConduitRes" -> "runConduit";
"runConduitRes" -> "streamConduit";
"runConduitRes" -> "streamSource";
"runConduitRes" -> "streamSourcePure";
"runConduitRes" -> "unstream";
"runPipe" -> "runPipe";
"runRWSC" -> "thread";
"runRWSLC" -> "thread";
"runReaderC" -> "transPipe";
"runStateC" -> "thread";
"runStateLC" -> "thread";
"runWriterC" -> "thread";
"runWriterLC" -> "thread";
"rwsC" -> "transPipe";
"rwsLC" -> "transPipe";
"scanlC" -> "await";
"scanlC" -> "scanlC";
"scanlC" -> "scanlS";
"scanlC" -> "yield";
"scanlMC" -> "await";
"scanlMC" -> "scanlMC";
"scanlMC" -> "scanlMS";
"scanlMC" -> "yield";
"sequence" -> "awaitForever";
"sequence" -> "closeFile";
"sequence" -> "leftover";
"sequence" -> "openFile";
"sequence" -> "readChunk";
"sequence" -> "yield";
"sequenceSinks" -> "connectResumeConduit";
"sequenceSinks" -> "sealConduitT";
"sequenceSources" -> "zipSinks";
"sinkFile" -> "sinkIOHandle";
"sinkFileBS" -> "sinkFile";
"sinkFileCautious" -> "bracketP";
"sinkFileCautious" -> "cautiousAcquire";
"sinkFileCautious" -> "cautiousCleanup";
"sinkFileCautious" -> "sinkHandle";
"sinkHandle" -> "awaitForever";
"sinkHandleBuilder" -> "awaitForever";
"sinkHandleFlush" -> "awaitForever";
"sinkIOHandle" -> "bracketP";
"sinkIOHandle" -> "sinkHandle";
"sinkLazyBuilderC" -> "sinkLazyBuilderC";
"sinkLazyBuilderC" -> "sinkLazyBuilderS";
"sinkLazyBuilderS" -> "fmapS";
"sinkLazyBuilderS" -> "foldS";
"sinkLazyC" -> "sinkLazyC";
"sinkLazyC" -> "sinkLazyS";
"sinkLazyS" -> "fmapS";
"sinkLazyS" -> "foldS";
"sinkNullC" -> "sinkNullC";
"sinkNullC" -> "sinkNullS";
"sinkSystemTempFile" -> "sinkTempFile";
"sinkTempFile" -> "sinkHandle";
"sinkToPipe" -> "injectLeftovers";
"sinkVectorC" -> "await";
"sinkVectorC" -> "sinkVectorC";
"sinkVectorC" -> "sinkVectorS";
"sinkVectorNC" -> "await";
"sinkVectorNC" -> "fold";
"sinkVectorNC" -> "sinkVectorNC";
"sinkVectorNC" -> "sinkVectorNS";
"slidingWindowC" -> "await";
"slidingWindowC" -> "slidingWindowC";
"slidingWindowC" -> "slidingWindowS";
"slidingWindowC" -> "yield";
"sourceDirectory" -> "bracketP";
"sourceDirectory" -> "yield";
"sourceDirectoryDeep" -> "awaitForever";
"sourceDirectoryDeep" -> "sourceDirectory";
"sourceDirectoryDeep" -> "yield";
"sourceFile" -> "bracketP";
"sourceFile" -> "yield";
"sourceFileBS" -> "sourceFile";
"sourceHandle" -> "yield";
"sourceHandleUnsafe" -> "yield";
"sourceIOHandle" -> "bracketP";
"sourceIOHandle" -> "sourceHandle";
"sourceLazy" -> "yield";
"sourceListC" -> "sourceListC";
"sourceListC" -> "sourceListS";
"sourceNullC" -> "sourceNullC";
"sourceNullC" -> "sourceNullS";
"sourceNullS" -> "await";
"sourceNullS" -> "awaitE";
"sourceNullS" -> "awaitForever";
"sourceNullS" -> "bracketP";
"sourceNullS" -> "catchP";
"sourceNullS" -> "generalizeUpstream";
"sourceNullS" -> "handleP";
"sourceNullS" -> "idP";
"sourceNullS" -> "injectLeftovers";
"sourceNullS" -> "leftover";
"sourceNullS" -> "mapInput";
"sourceNullS" -> "mapOutput";
"sourceNullS" -> "mapOutputMaybe";
"sourceNullS" -> "pipe";
"sourceNullS" -> "pipeL";
"sourceNullS" -> "runPipe";
"sourceNullS" -> "sourceList";
"sourceNullS" -> "transPipe";
"sourceNullS" -> "tryP";
"sourceNullS" -> "unconsEitherM";
"sourceNullS" -> "unconsM";
"sourceNullS" -> "withUpstream";
"sourceNullS" -> "yield";
"sourceNullS" -> "yieldM";
"sourceToList" -> "src";
"splitOnUnboundedEC" -> "await";
"splitOnUnboundedEC" -> "splitOnUnboundedEC";
"splitOnUnboundedEC" -> "splitOnUnboundedES";
"splitOnUnboundedEC" -> "yield";
"src" -> "connectResume";
"src" -> "rsrc";
"src" -> "src";
"srcMapM_" -> "src";
"srcSinkNull" -> "src";
"stateC" -> "transPipe";
"stateLC" -> "transPipe";
"stderr" -> "sinkHandle";
"stdin" -> "sourceHandle";
"stdout" -> "sinkHandle";
"sum" -> "foldl";
"sumE" -> "foldlE";
"takeC" -> "await";
"takeC" -> "takeC";
"takeC" -> "takeS";
"takeE" -> "await";
"takeE" -> "leftover";
"takeE" -> "yield";
"takeExactly" -> "take";
"takeExactlyE" -> "awaitForever";
"takeExactlyE" -> "takeE";
"takeExactlyUntilE" -> "await";
"takeExactlyUntilE" -> "leftover";
"takeExactlyUntilE" -> "sinkNull";
"takeExactlyUntilE" -> "yield";
"takeWhile" -> "await";
"takeWhile" -> "leftover";
"takeWhile" -> "yield";
"takeWhileE" -> "await";
"takeWhileE" -> "leftover";
"takeWhileE" -> "yield";
"transPipe" -> "transPipe";
"tryC" -> "catchC";
"tryP" -> "catchP";
"uncons" -> "unconsM";
"unconsEither" -> "unconsEitherM";
"unconsEither" -> "yield";
"unfoldC" -> "unfoldC";
"unfoldC" -> "unfoldS";
"unfoldC" -> "yield";
"unfoldEitherC" -> "unfoldEitherC";
"unfoldEitherC" -> "unfoldEitherS";
"unfoldEitherC" -> "yield";
"unfoldEitherMC" -> "unfoldEitherMC";
"unfoldEitherMC" -> "unfoldEitherMS";
"unfoldEitherMC" -> "yield";
"unfoldMC" -> "unfoldMC";
"unfoldMC" -> "unfoldMS";
"unfoldMC" -> "yield";
"unsafeBuilderToByteString" -> "allocBuffer";
"unsafeBuilderToByteString" -> "builderToByteStringWith";
"unsafeBuilderToByteString" -> "reuseBufferStrategy";
"unsafeFreezeNonEmptyBuffer" -> "sliceSize";
"unsafeFreezeNonEmptyBuffer" -> "unsafeFreezeBuffer";
"vectorBuilder" -> "addE";
"vectorBuilder" -> "onAwait";
"vectorBuilder" -> "yield";
"vectorBuilder" -> "yieldS";
"vectorBuilderC" -> "await";
"vectorBuilderC" -> "awaitForever";
"vectorBuilderC" -> "bracketP";
"vectorBuilderC" -> "catchC";
"vectorBuilderC" -> "conduitToPipe";
"vectorBuilderC" -> "connect";
"vectorBuilderC" -> "connectResume";
"vectorBuilderC" -> "connectResumeConduit";
"vectorBuilderC" -> "fuse";
"vectorBuilderC" -> "fuseBoth";
"vectorBuilderC" -> "fuseBothMaybe";
"vectorBuilderC" -> "fuseLeftovers";
"vectorBuilderC" -> "fuseReturnLeftovers";
"vectorBuilderC" -> "fuseUpstream";
"vectorBuilderC" -> "handleC";
"vectorBuilderC" -> "leftover";
"vectorBuilderC" -> "mapInput";
"vectorBuilderC" -> "mapInputM";
"vectorBuilderC" -> "mapOutput";
"vectorBuilderC" -> "mapOutputMaybe";
"vectorBuilderC" -> "mergeSource";
"vectorBuilderC" -> "passthroughSink";
"vectorBuilderC" -> "runConduit";
"vectorBuilderC" -> "runConduitPure";
"vectorBuilderC" -> "runConduitRes";
"vectorBuilderC" -> "sealConduitT";
"vectorBuilderC" -> "sequenceConduits";
"vectorBuilderC" -> "sequenceSinks";
"vectorBuilderC" -> "sequenceSources";
"vectorBuilderC" -> "sinkToPipe";
"vectorBuilderC" -> "sourceToList";
"vectorBuilderC" -> "sourceToPipe";
"vectorBuilderC" -> "toConsumer";
"vectorBuilderC" -> "toProducer";
"vectorBuilderC" -> "transPipe";
"vectorBuilderC" -> "tryC";
"vectorBuilderC" -> "unconsEitherM";
"vectorBuilderC" -> "unconsM";
"vectorBuilderC" -> "unsealConduitT";
"vectorBuilderC" -> "yield";
"vectorBuilderC" -> "yieldM";
"vectorBuilderC" -> "zipConduitApp";
"vectorBuilderC" -> "zipSinks";
"vectorBuilderC" -> "zipSources";
"vectorBuilderC" -> "zipSourcesApp";
"withSinkFile" -> "sinkHandle";
"withSinkFileCautious" -> "cautiousAcquire";
"withSinkFileCautious" -> "cautiousCleanup";
"withSinkFileCautious" -> "sinkHandle";
"withSourceFile" -> "sourceHandle";
"withUpstream" -> "awaitE";
"writerC" -> "transPipe";
"writerLC" -> "transPipe";
"yieldM" -> "yield";
"yieldManyC" -> "yieldManyC";
"yieldManyC" -> "yieldManyS";
"yieldS" -> "yield";
"zipConduitApp" -> "injectLeftovers";
"zipSinks" -> "injectLeftovers";
}
