strict digraph deps {
"addOutliers" [style=solid];
"analyseMean" [style=solid];
"analyseOne" [style=solid];
"analyseSample" [style=solid];
"chPrintf" [style=solid];
"chartContents" [style=solid];
"classifyOutliers" [style=solid];
"config" [style=solid];
"countOutliers" [style=solid];
"critVersion" [style=solid];
"criterionWarning" [style=solid];
"dataFiles" [style=solid];
"defaultConfig" [style=solid];
"defaultMain" [style=solid];
"defaultMainWith" [style=solid];
"describe" [style=solid];
"describeWith" [style=solid];
"escapeJSON" [style=solid];
"for" [style=solid];
"formatReport" [style=solid];
"getGen" [style=solid];
"getTemplateDir" [style=solid];
"hGetRecords" [style=solid];
"hPutRecords" [style=solid];
"header" [style=solid];
"headerRoot" [style=solid];
"includeFile" [style=solid];
"json" [style=solid];
"junit" [style=solid];
"loadTemplate" [style=solid];
"makeMatcher" [style=solid];
"match" [style=solid];
"memoise" [style=solid];
"note" [style=solid];
"noteOutliers" [style=solid];
"outlierVariance" [style=solid];
"outputOption" [style=solid];
"parseError" [style=solid];
"parseWith" [style=solid];
"printError" [style=solid];
"prolix" [style=solid];
"range" [style=solid];
"rawReport" [style=solid];
"readAll" [style=solid];
"readFileCheckEmbedded" [style=solid];
"readJSONReports" [style=solid];
"readRecords" [style=solid];
"regress" [style=solid];
"regressParams" [style=solid];
"regressionHelp" [style=solid];
"renderNames" [style=solid];
"report" [style=solid];
"resolveAccessors" [style=solid];
"runAndAnalyse" [style=solid];
"runAndAnalyseOne" [style=solid];
"runFixedIters" [style=solid];
"runMode" [style=solid];
"runOne" [style=solid];
"scale" [style=solid];
"selectBenches" [style=solid];
"singleton" [style=solid];
"tidyTails" [style=solid];
"validateAccessors" [style=solid];
"vector" [style=solid];
"vector2" [style=solid];
"versionInfo" [style=solid];
"withConfig" [style=solid];
"writeCsv" [style=solid];
"writeJSONReports" [style=solid];
"writeRecords" [style=solid];
"" -> "analyseMean";
"" -> "analyseSample";
"" -> "classifyOutliers";
"" -> "countOutliers";
"" -> "noteOutliers";
"" -> "outlierVariance";
"" -> "regress";
"" -> "resolveAccessors";
"" -> "scale";
"" -> "validateAccessors";
"analyseMean" -> "classifyOutliers";
"analyseMean" -> "note";
"analyseMean" -> "noteOutliers";
"analyseOne" -> "analyseSample";
"analyseOne" -> "note";
"analyseOne" -> "noteOutliers";
"analyseOne" -> "printError";
"analyseOne" -> "prolix";
"analyseOne" -> "writeCsv";
"analyseSample" -> "classifyOutliers";
"analyseSample" -> "getGen";
"analyseSample" -> "outlierVariance";
"analyseSample" -> "prolix";
"analyseSample" -> "regress";
"chartContents" -> "critVersion";
"chartContents" -> "hGetRecords";
"chartContents" -> "hPutRecords";
"chartContents" -> "header";
"chartContents" -> "headerRoot";
"chartContents" -> "readJSONReports";
"chartContents" -> "readRecords";
"chartContents" -> "writeJSONReports";
"chartContents" -> "writeRecords";
"config" -> "outputOption";
"config" -> "range";
"config" -> "regressParams";
"defaultMain" -> "defaultConfig";
"defaultMain" -> "defaultMainWith";
"defaultMainWith" -> "describe";
"defaultMainWith" -> "runMode";
"describe" -> "describeWith";
"describe" -> "parseWith";
"describeWith" -> "header";
"describeWith" -> "regressionHelp";
"describeWith" -> "versionInfo";
"formatReport" -> "chartContents";
"formatReport" -> "criterionWarning";
"formatReport" -> "dataFiles";
"formatReport" -> "escapeJSON";
"formatReport" -> "getTemplateDir";
"formatReport" -> "includeFile";
"getGen" -> "memoise";
"hGetRecords" -> "header";
"hGetRecords" -> "readAll";
"hPutRecords" -> "header";
"header" -> "headerRoot";
"json" -> "writeJSONReports";
"junit" -> "defaultConfig";
"junit" -> "defaultMain";
"junit" -> "defaultMainWith";
"junit" -> "makeMatcher";
"junit" -> "runMode";
"junit" -> "versionInfo";
"loadTemplate" -> "dataFiles";
"loadTemplate" -> "readFileCheckEmbedded";
"makeMatcher" -> "match";
"memoise" -> "config";
"memoise" -> "formatReport";
"memoise" -> "getTemplateDir";
"memoise" -> "includeFile";
"memoise" -> "loadTemplate";
"memoise" -> "report";
"memoise" -> "tidyTails";
"memoise" -> "vector";
"memoise" -> "vector2";
"note" -> "chPrintf";
"noteOutliers" -> "chartContents";
"noteOutliers" -> "countOutliers";
"noteOutliers" -> "dataFiles";
"noteOutliers" -> "note";
"parseError" -> "config";
"parseError" -> "defaultConfig";
"parseError" -> "describe";
"parseError" -> "describeWith";
"parseError" -> "parseWith";
"parseError" -> "printError";
"parseError" -> "versionInfo";
"parseWith" -> "config";
"parseWith" -> "match";
"parseWith" -> "runMode";
"printError" -> "chPrintf";
"prolix" -> "chPrintf";
"rawReport" -> "header";
"readFileCheckEmbedded" -> "addOutliers";
"readFileCheckEmbedded" -> "dataFiles";
"readJSONReports" -> "critVersion";
"readJSONReports" -> "headerRoot";
"readRecords" -> "hGetRecords";
"regress" -> "renderNames";
"regress" -> "validateAccessors";
"regressParams" -> "validateAccessors";
"regressionHelp" -> "getGen";
"regressionHelp" -> "withConfig";
"report" -> "formatReport";
"report" -> "getTemplateDir";
"report" -> "loadTemplate";
"resolveAccessors" -> "renderNames";
"runAndAnalyse" -> "critVersion";
"runAndAnalyse" -> "for";
"runAndAnalyse" -> "json";
"runAndAnalyse" -> "junit";
"runAndAnalyse" -> "note";
"runAndAnalyse" -> "rawReport";
"runAndAnalyse" -> "readJSONReports";
"runAndAnalyse" -> "report";
"runAndAnalyse" -> "runAndAnalyseOne";
"runAndAnalyseOne" -> "analyseOne";
"runAndAnalyseOne" -> "runOne";
"runFixedIters" -> "for";
"runFixedIters" -> "note";
"runMode" -> "runAndAnalyse";
"runMode" -> "runFixedIters";
"runMode" -> "selectBenches";
"runMode" -> "versionInfo";
"runMode" -> "withConfig";
"runMode" -> "writeCsv";
"runOne" -> "prolix";
"selectBenches" -> "makeMatcher";
"selectBenches" -> "parseError";
"validateAccessors" -> "renderNames";
"validateAccessors" -> "resolveAccessors";
"validateAccessors" -> "singleton";
"writeCsv" -> "runAndAnalyse";
"writeCsv" -> "runAndAnalyseOne";
"writeCsv" -> "runFixedIters";
"writeCsv" -> "runOne";
"writeJSONReports" -> "critVersion";
"writeJSONReports" -> "headerRoot";
"writeJSONReports" -> "note";
"writeJSONReports" -> "printError";
"writeJSONReports" -> "prolix";
"writeJSONReports" -> "writeCsv";
"writeRecords" -> "hPutRecords";
}
