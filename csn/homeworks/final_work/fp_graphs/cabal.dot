strict digraph deps {
"_1" [style=solid];
"_2" [style=solid];
"_Arch" [style=solid];
"_Impl" [style=solid];
"_OS" [style=solid];
"_PackageFlag" [style=solid];
"_syntaxExtensions" [style=solid];
"_syntaxFieldNames" [style=solid];
"abiDepends" [style=solid];
"abiHash" [style=solid];
"abiTagString" [style=solid];
"abiTemplateEnv" [style=solid];
"absoluteComponentInstallDirs" [style=solid];
"absoluteInstallCommandDirs" [style=solid];
"absoluteInstallDirs" [style=solid];
"absoluteInstalledPackageInfo" [style=solid];
"absolutePackageDBPath" [style=solid];
"absolutePackageDBPaths" [style=solid];
"abstractUnitId" [style=solid];
"addBuildableCondition" [style=solid];
"addBuildableConditionPDTagged" [style=solid];
"addBuiltinVersions" [style=solid];
"addCommonFlags" [style=solid];
"addDepth" [style=solid];
"addErr" [style=solid];
"addErrContext" [style=solid];
"addErrContextM" [style=solid];
"addExtraAsmSources" [style=solid];
"addExtraCSources" [style=solid];
"addExtraCmmSources" [style=solid];
"addExtraCxxSources" [style=solid];
"addInternalBuildTools" [style=solid];
"addKnownProgram" [style=solid];
"addKnownPrograms" [style=solid];
"addLibraryPath" [style=solid];
"addProgressCtx" [style=solid];
"addWarning" [style=solid];
"adjustExts" [style=solid];
"adjustPos" [style=solid];
"ala" [style=solid];
"alaList" [style=solid];
"alaList\'" [style=solid];
"alaNonEmpty" [style=solid];
"alaNonEmpty\'" [style=solid];
"alaSet" [style=solid];
"alaSet\'" [style=solid];
"alaf" [style=solid];
"alexGetByte" [style=solid];
"alexIndexInt16OffAddr" [style=solid];
"alexIndexInt32OffAddr" [style=solid];
"alexInputPrevChar" [style=solid];
"alexProgram" [style=solid];
"alexScan" [style=solid];
"alexScanUser" [style=solid];
"alex_accept" [style=solid];
"alex_action_0" [style=solid];
"alex_action_1" [style=solid];
"alex_action_10" [style=solid];
"alex_action_11" [style=solid];
"alex_action_12" [style=solid];
"alex_action_13" [style=solid];
"alex_action_14" [style=solid];
"alex_action_15" [style=solid];
"alex_action_16" [style=solid];
"alex_action_18" [style=solid];
"alex_action_19" [style=solid];
"alex_action_20" [style=solid];
"alex_action_22" [style=solid];
"alex_action_23" [style=solid];
"alex_action_24" [style=solid];
"alex_action_25" [style=solid];
"alex_action_3" [style=solid];
"alex_action_4" [style=solid];
"alex_action_5" [style=solid];
"alex_action_8" [style=solid];
"alex_action_9" [style=solid];
"alex_actions" [style=solid];
"alex_base" [style=solid];
"alex_check" [style=solid];
"alex_deflt" [style=solid];
"alex_scan_tkn" [style=solid];
"alex_tab_size" [style=solid];
"alex_table" [style=solid];
"allBuildDepends" [style=solid];
"allBuildInfo" [style=solid];
"allComponentsInBuildOrder" [style=solid];
"allCondTrees" [style=solid];
"allExplicitIncludes" [style=solid];
"allExtensions" [style=solid];
"allFlags" [style=solid];
"allLanguages" [style=solid];
"allLibModules" [style=solid];
"allLibraries" [style=solid];
"allPackages" [style=solid];
"allPackagesByName" [style=solid];
"allPackagesBySourcePackageId" [style=solid];
"allPackagesBySourcePackageIdAndLibName" [style=solid];
"allSourcesBuildInfo" [style=solid];
"allSuffixHandlers" [style=solid];
"allTargetsInBuildOrder" [style=solid];
"allTargetsInBuildOrder\'" [style=solid];
"alphaNum" [style=solid];
"alterVersion" [style=solid];
"ambiguousReexportMsg" [style=solid];
"anaVersionRange" [style=solid];
"annotateCallStackIO" [style=solid];
"annotateIO" [style=solid];
"anyPkgconfigVersion" [style=solid];
"anyVersion" [style=solid];
"appendSubdirs" [style=solid];
"arProgram" [style=solid];
"arResponseFilesSupported" [style=solid];
"archAliases" [style=solid];
"asVersionIntervals" [style=solid];
"author" [style=solid];
"autoconfUserHooks" [style=solid];
"autogenComponentModulesDir" [style=solid];
"autogenPackageModulesDir" [style=solid];
"autogenPathsModuleName" [style=solid];
"aview" [style=solid];
"backpackSupported" [style=solid];
"badAutoconfCharacters" [style=solid];
"basic" [style=solid];
"basicFieldGrammar" [style=solid];
"basicLibName" [style=solid];
"basicLibVisibility" [style=solid];
"basicName" [style=solid];
"basicPkgName" [style=solid];
"basicVersion" [style=solid];
"bench" [style=solid];
"benchAction" [style=solid];
"benchFillInDefaults" [style=solid];
"benchOption" [style=solid];
"benchmarkBuildInfo" [style=solid];
"benchmarkCommand" [style=solid];
"benchmarkExeV10asExe" [style=solid];
"benchmarkFieldGrammar" [style=solid];
"benchmarkInterface" [style=solid];
"benchmarkModules" [style=solid];
"benchmarkModulesAutogen" [style=solid];
"benchmarkName" [style=solid];
"benchmarkOptions\'" [style=solid];
"benchmarkStanzaBenchmarkModule" [style=solid];
"benchmarkStanzaBenchmarkType" [style=solid];
"benchmarkStanzaBuildInfo" [style=solid];
"benchmarkStanzaMainIs" [style=solid];
"benchmarkType" [style=solid];
"benchmarks" [style=solid];
"between" [style=solid];
"biFillInDefaults" [style=solid];
"binaryGetMD5" [style=solid];
"binaryPutMD5" [style=solid];
"bol_field_braces" [style=solid];
"bol_field_layout" [style=solid];
"bol_section" [style=solid];
"boolOpt" [style=solid];
"boolOpt\'" [style=solid];
"breakMaybe" [style=solid];
"broken" [style=solid];
"brokenPackages" [style=solid];
"brokenReexportMsg" [style=solid];
"bugReports" [style=solid];
"build" [style=solid];
"buildAction" [style=solid];
"buildArch" [style=solid];
"buildCommand" [style=solid];
"buildCompilerFlavor" [style=solid];
"buildCompilerId" [style=solid];
"buildCompilerVersion" [style=solid];
"buildComponent" [style=solid];
"buildExe" [style=solid];
"buildFLib" [style=solid];
"buildInfoExt" [style=solid];
"buildInfoFieldGrammar" [style=solid];
"buildLib" [style=solid];
"buildOS" [style=solid];
"buildOptions" [style=solid];
"buildOrReplLib" [style=solid];
"buildPlatform" [style=solid];
"buildTargetComponentName" [style=solid];
"buildType" [style=solid];
"buildTypeRaw" [style=solid];
"builtinPrograms" [style=solid];
"bulkOfLicenses" [style=solid];
"c2hsProgram" [style=solid];
"cAnd" [style=solid];
"cDialectFilenameExtension" [style=solid];
"cNot" [style=solid];
"cOr" [style=solid];
"cSourceExtensions" [style=solid];
"cabalSpecFromVersionDigits" [style=solid];
"cabalSpecLatest" [style=solid];
"cabalSpecMinimumLibraryVersion" [style=solid];
"cabalSpecToVersionDigits" [style=solid];
"cabalSpecVersionToSPDXListVersion" [style=solid];
"cabalStyleFile" [style=solid];
"cabalVersion" [style=solid];
"calibrateMtimeChangeDelay" [style=solid];
"callStack" [style=solid];
"cancel" [style=solid];
"caseFold" [style=solid];
"cataVersionRange" [style=solid];
"catchAll" [style=solid];
"catchExit" [style=solid];
"catchIO" [style=solid];
"category" [style=solid];
"ccLdOptionsBuildInfo" [style=solid];
"ccOptions" [style=solid];
"cc_cid" [style=solid];
"cc_name" [style=solid];
"cc_pkgid" [style=solid];
"chainl" [style=solid];
"chainl1" [style=solid];
"chainr" [style=solid];
"chainr1" [style=solid];
"chattyTry" [style=solid];
"check" [style=solid];
"checkAllGhcOptions" [style=solid];
"checkAlternatives" [style=solid];
"checkBenchmark" [style=solid];
"checkBuildTargets" [style=solid];
"checkCCOptions" [style=solid];
"checkCLikeOptions" [style=solid];
"checkCPPOptions" [style=solid];
"checkCabalFileBOM" [style=solid];
"checkCabalFileName" [style=solid];
"checkCabalVersion" [style=solid];
"checkCompilerProblems" [style=solid];
"checkConditionals" [style=solid];
"checkConfigureExists" [style=solid];
"checkConfiguredPackage" [style=solid];
"checkCxxOptions" [style=solid];
"checkDeprecatedFlags" [style=solid];
"checkDevelopmentOnlyFlags" [style=solid];
"checkDevelopmentOnlyFlagsBuildInfo" [style=solid];
"checkDevelopmentOnlyFlagsOptions" [style=solid];
"checkExactConfiguration" [style=solid];
"checkExecutable" [style=solid];
"checkExt" [style=solid];
"checkFields" [style=solid];
"checkFlagNames" [style=solid];
"checkForUndefinedCustomSetup" [style=solid];
"checkForUndefinedFlags" [style=solid];
"checkForeignDeps" [style=solid];
"checkForeignLibSupported" [style=solid];
"checkGetSum" [style=solid];
"checkGhcOptions" [style=solid];
"checkGlobFiles" [style=solid];
"checkInvariant" [style=solid];
"checkLeadingWhitespace" [style=solid];
"checkLibrary" [style=solid];
"checkLicense" [style=solid];
"checkLicensesExist" [style=solid];
"checkLocalPathsExist" [style=solid];
"checkMissingVcsInfo" [style=solid];
"checkNeedsRecompilation" [style=solid];
"checkNewLicense" [style=solid];
"checkNotDoubleDash" [style=solid];
"checkOldLicense" [style=solid];
"checkPackage" [style=solid];
"checkPackageContent" [style=solid];
"checkPackageDbEnvVar" [style=solid];
"checkPackageDbStack" [style=solid];
"checkPackageDbStackPost76" [style=solid];
"checkPackageDbStackPre76" [style=solid];
"checkPackageFileNames" [style=solid];
"checkPackageFiles" [style=solid];
"checkPackageFilesPreDistribution" [style=solid];
"checkPackageProblems" [style=solid];
"checkPackageVersions" [style=solid];
"checkPaths" [style=solid];
"checkPathsModuleExtensions" [style=solid];
"checkPersistBuildConfigOutdated" [style=solid];
"checkPosition" [style=solid];
"checkRelocatable" [style=solid];
"checkSanity" [style=solid];
"checkSetupExists" [style=solid];
"checkSourceRepos" [style=solid];
"checkSpecVersion" [style=solid];
"checkTarPath" [style=solid];
"checkTargetExistsAsFile" [style=solid];
"checkTestSuite" [style=solid];
"checkUnicodeXFields" [style=solid];
"checkUnusedFlags" [style=solid];
"checkWhitespace" [style=solid];
"checkWindowsPath" [style=solid];
"choice" [style=solid];
"choiceOpt" [style=solid];
"choiceOptFromEnum" [style=solid];
"ci_cname" [style=solid];
"ci_id" [style=solid];
"ci_msg" [style=solid];
"ci_pkgid" [style=solid];
"cinfoKind" [style=solid];
"classify" [style=solid];
"classifyArch" [style=solid];
"classifyCompilerFlavor" [style=solid];
"classifyExtension" [style=solid];
"classifyKnownExtension" [style=solid];
"classifyLanguage" [style=solid];
"classifyOS" [style=solid];
"classifyRepoKind" [style=solid];
"classifyRepoType" [style=solid];
"clean" [style=solid];
"cleanAction" [style=solid];
"cleanCommand" [style=solid];
"clearMarkers" [style=solid];
"cloneLens" [style=solid];
"closeBrace" [style=solid];
"closure" [style=solid];
"colon" [style=solid];
"combineFlagValues" [style=solid];
"combineInstallDirs" [style=solid];
"combineLibraryName" [style=solid];
"combineObjectFiles" [style=solid];
"combinePathTemplate" [style=solid];
"combinedConstraints" [style=solid];
"commaSep" [style=solid];
"commandAddAction" [style=solid];
"commandFromSpec" [style=solid];
"commandGetOpts" [style=solid];
"commandHelp" [style=solid];
"commandListOptions" [style=solid];
"commandParseArgs" [style=solid];
"commandShowOptions" [style=solid];
"commandsRun" [style=solid];
"commonFlags" [style=solid];
"compToExe" [style=solid];
"compareInt" [style=solid];
"compareStr" [style=solid];
"compatPackageKey" [style=solid];
"compilerCompatFlavor" [style=solid];
"compilerCompatVersion" [style=solid];
"compilerFlavor" [style=solid];
"compilerInfo" [style=solid];
"compilerTemplateEnv" [style=solid];
"compilerVersion" [style=solid];
"componentAsmGhcOptions" [style=solid];
"componentBuildDir" [style=solid];
"componentBuildInfo" [style=solid];
"componentBuildable" [style=solid];
"componentCcGhcOptions" [style=solid];
"componentCmmGhcOptions" [style=solid];
"componentCxxGhcOptions" [style=solid];
"componentCycleMsg" [style=solid];
"componentDisabledReason" [style=solid];
"componentEnabled" [style=solid];
"componentGhcOptions" [style=solid];
"componentHsFiles" [style=solid];
"componentInitialBuildSteps" [style=solid];
"componentIsIndefinite" [style=solid];
"componentKind" [style=solid];
"componentModules" [style=solid];
"componentName" [style=solid];
"componentNameCLBIs" [style=solid];
"componentNameNotRequestedReason" [style=solid];
"componentNameRequested" [style=solid];
"componentNameStanza" [style=solid];
"componentNameString" [style=solid];
"componentNameTargets" [style=solid];
"componentNameTargets\'" [style=solid];
"componentStringName" [style=solid];
"components" [style=solid];
"componentsGraphToList" [style=solid];
"computeCompatPackageId" [style=solid];
"computeCompatPackageKey" [style=solid];
"computeComponentId" [style=solid];
"computeEffectiveProfiling" [style=solid];
"condBenchmarks" [style=solid];
"condExecutables" [style=solid];
"condForeignLibs" [style=solid];
"condIfThen" [style=solid];
"condIfThenElse" [style=solid];
"condLibrary" [style=solid];
"condSubLibraries" [style=solid];
"condTestSuites" [style=solid];
"confPkgDescr" [style=solid];
"configAbsolutePaths" [style=solid];
"configCompilerAuxEx" [style=solid];
"configCompilerEx" [style=solid];
"configPrograms" [style=solid];
"configure" [style=solid];
"configureAction" [style=solid];
"configureAllKnownPrograms" [style=solid];
"configureArgs" [style=solid];
"configureCCompiler" [style=solid];
"configureCommand" [style=solid];
"configureComponentLocalBuildInfos" [style=solid];
"configureCoverage" [style=solid];
"configureDependencies" [style=solid];
"configureFinalizedPackage" [style=solid];
"configureLinker" [style=solid];
"configureOptions" [style=solid];
"configurePkgconfigPackages" [style=solid];
"configureProfiling" [style=solid];
"configureProg" [style=solid];
"configureProgram" [style=solid];
"configurePrograms" [style=solid];
"configureRequiredProgram" [style=solid];
"configureRequiredPrograms" [style=solid];
"configureToolchain" [style=solid];
"configuredPrograms" [style=solid];
"constrainBy" [style=solid];
"constructUHCCmdLine" [style=solid];
"containerStructure" [style=solid];
"convertInclude" [style=solid];
"convertModule" [style=solid];
"convertModuleProvides" [style=solid];
"convertModuleProvidesU" [style=solid];
"convertModuleRequires" [style=solid];
"convertModuleRequiresU" [style=solid];
"convertModuleScopeU" [style=solid];
"convertModuleSubst" [style=solid];
"convertModuleSubstU" [style=solid];
"convertModuleU" [style=solid];
"convertModuleU\'" [style=solid];
"convertModule\'" [style=solid];
"convertUnitId" [style=solid];
"convertUnitIdU" [style=solid];
"convertUnitIdU\'" [style=solid];
"convertUnitId\'" [style=solid];
"copyAction" [style=solid];
"copyCommand" [style=solid];
"copyComponent" [style=solid];
"copyDirectoryRecursive" [style=solid];
"copyExecutableFile" [style=solid];
"copyFile" [style=solid];
"copyFileChanged" [style=solid];
"copyFileTo" [style=solid];
"copyFileVerbose" [style=solid];
"copyFiles" [style=solid];
"copyFilesWith" [style=solid];
"copyOptions" [style=solid];
"copyOrdinaryFile" [style=solid];
"copyPackage" [style=solid];
"copyright" [style=solid];
"count" [style=solid];
"countTestResults" [style=solid];
"coverageSupported" [style=solid];
"cppHeaderName" [style=solid];
"cppProgram" [style=solid];
"cpphsProgram" [style=solid];
"createArLibArchive" [style=solid];
"createArchive" [style=solid];
"createDirectoryIfMissingVerbose" [style=solid];
"createDirectoryVerbose" [style=solid];
"createInternalPackageDB" [style=solid];
"createPackageDB" [style=solid];
"createPipe" [style=solid];
"createProcess" [style=solid];
"createProcessWithEnv" [style=solid];
"createTempDirectory" [style=solid];
"csidl_PROGRAM_FILES" [style=solid];
"currentCabalId" [style=solid];
"currentCompilerId" [style=solid];
"currentDir" [style=solid];
"customFieldsPD" [style=solid];
"cxxOptions" [style=solid];
"cycles" [style=solid];
"dataDir" [style=solid];
"dataFiles" [style=solid];
"dateToSnapshotNumber" [style=solid];
"deafening" [style=solid];
"debug" [style=solid];
"debugNoWrap" [style=solid];
"decode" [style=solid];
"decodeCompatPackageName" [style=solid];
"decodeCompatPackageName\'" [style=solid];
"decodeFileOrFail\'" [style=solid];
"decodeMainIsArg" [style=solid];
"decodeOrFailIO" [style=solid];
"decodeStringUtf8" [style=solid];
"decodeVertexForest" [style=solid];
"defaultBenchHook" [style=solid];
"defaultBenchmarkFlags" [style=solid];
"defaultBuildFlags" [style=solid];
"defaultBuildHook" [style=solid];
"defaultCleanFlags" [style=solid];
"defaultCompilerFlavor" [style=solid];
"defaultComponentRequestedSpec" [style=solid];
"defaultConfigFlags" [style=solid];
"defaultCopyFlags" [style=solid];
"defaultDistPref" [style=solid];
"defaultFreeTextFieldDefST" [style=solid];
"defaultGlobalFlags" [style=solid];
"defaultHaddockFlags" [style=solid];
"defaultHscolourFlags" [style=solid];
"defaultIncludeRenaming" [style=solid];
"defaultInstallDirs" [style=solid];
"defaultInstallDirs\'" [style=solid];
"defaultInstallFlags" [style=solid];
"defaultInstallHook" [style=solid];
"defaultLibName" [style=solid];
"defaultMain" [style=solid];
"defaultMainArgs" [style=solid];
"defaultMainHelper" [style=solid];
"defaultMainNoRead" [style=solid];
"defaultMainWithHooks" [style=solid];
"defaultMainWithHooksArgs" [style=solid];
"defaultMainWithHooksNoRead" [style=solid];
"defaultMainWithHooksNoReadArgs" [style=solid];
"defaultPackageDesc" [style=solid];
"defaultProgramDb" [style=solid];
"defaultProgramSearchPath" [style=solid];
"defaultRegHook" [style=solid];
"defaultRegisterFlags" [style=solid];
"defaultRegisterOptions" [style=solid];
"defaultRenaming" [style=solid];
"defaultReplFlags" [style=solid];
"defaultReplHook" [style=solid];
"defaultSDistFlags" [style=solid];
"defaultSetupDepends" [style=solid];
"defaultShowBuildFlags" [style=solid];
"defaultStyle" [style=solid];
"defaultTempFileOptions" [style=solid];
"defaultTestFlags" [style=solid];
"defaultTestHook" [style=solid];
"delete" [style=solid];
"deleteKey" [style=solid];
"deleteLookup" [style=solid];
"deletePackageDB" [style=solid];
"deletePackageName" [style=solid];
"deleteSourcePackageId" [style=solid];
"deleteUnitId" [style=solid];
"depLibraries" [style=solid];
"depLibraryPaths" [style=solid];
"depPkgName" [style=solid];
"depVerRange" [style=solid];
"dependencyClosure" [style=solid];
"dependencyCycles" [style=solid];
"dependencyGraph" [style=solid];
"dependencyInconsistencies" [style=solid];
"dependencySatisfiable" [style=solid];
"depends" [style=solid];
"deprecatedExtensions" [style=solid];
"describe" [style=solid];
"describeInvocation" [style=solid];
"describeToken" [style=solid];
"description" [style=solid];
"desugarBuildTool" [style=solid];
"dieNoVerbosity" [style=solid];
"dieNoWrap" [style=solid];
"dieProgress" [style=solid];
"dieWithLocation\'" [style=solid];
"die\'" [style=solid];
"diffFlagAssignment" [style=solid];
"digit" [style=solid];
"disambiguateBuildTargets" [style=solid];
"dispComponent" [style=solid];
"dispComponentsWithDeps" [style=solid];
"dispConfigStateFileError" [style=solid];
"dispConfiguredComponent" [style=solid];
"dispFlagAssignment" [style=solid];
"dispLinkedComponent" [style=solid];
"dispModSubstEntry" [style=solid];
"dispModuleSource" [style=solid];
"dispOpenModuleSubst" [style=solid];
"dispOpenModuleSubstEntry" [style=solid];
"dispOptVersion" [style=solid];
"dispReadyComponent" [style=solid];
"dispVersion" [style=solid];
"display" [style=solid];
"displayException" [style=solid];
"displaySomeException" [style=solid];
"dllExtension" [style=solid];
"doctestProgram" [style=solid];
"doesExecutableExist" [style=solid];
"doesNotIntersect" [style=solid];
"doesNotTouch" [style=solid];
"doesPackageDBExist" [style=solid];
"doesPathExist" [style=solid];
"dropExeExtension" [style=solid];
"dropNonAlnum8" [style=solid];
"dropWhileEndLE" [style=solid];
"dump" [style=solid];
"dumpInvocation" [style=solid];
"dups" [style=solid];
"eRROR_ENVVAR_NOT_FOUND" [style=solid];
"earlierVersion" [style=solid];
"eitherParsec" [style=solid];
"element" [style=solid];
"elementInLayoutContext" [style=solid];
"elementInNonLayoutContext" [style=solid];
"elements" [style=solid];
"embedVersionRange" [style=solid];
"empty" [style=solid];
"emptyBenchmark" [style=solid];
"emptyBenchmarkFlags" [style=solid];
"emptyBuildFlags" [style=solid];
"emptyBuildInfo" [style=solid];
"emptyCleanFlags" [style=solid];
"emptyConfigFlags" [style=solid];
"emptyCopyFlags" [style=solid];
"emptyExecutable" [style=solid];
"emptyFlag" [style=solid];
"emptyForeignLib" [style=solid];
"emptyGenericPackageDescription" [style=solid];
"emptyGlobalFlags" [style=solid];
"emptyHaddockFlags" [style=solid];
"emptyHookedBuildInfo" [style=solid];
"emptyHscolourFlags" [style=solid];
"emptyInstallFlags" [style=solid];
"emptyInstalledPackageInfo" [style=solid];
"emptyLibrary" [style=solid];
"emptyModuleScope" [style=solid];
"emptyModuleScopeU" [style=solid];
"emptyModuleShape" [style=solid];
"emptyMooEnv" [style=solid];
"emptyMuEnv" [style=solid];
"emptyPRState" [style=solid];
"emptyPackageDescription" [style=solid];
"emptyProgramDb" [style=solid];
"emptyProgramInvocation" [style=solid];
"emptyRegisterFlags" [style=solid];
"emptySDistFlags" [style=solid];
"emptySourceRepo" [style=solid];
"emptyTestFlags" [style=solid];
"emptyTestSuite" [style=solid];
"emptyToCurDir" [style=solid];
"emptyUserHooks" [style=solid];
"enableProcessJobs" [style=solid];
"enabledBenchLBIs" [style=solid];
"enabledBuildDepends" [style=solid];
"enabledBuildInfos" [style=solid];
"enabledComponents" [style=solid];
"enabledTestLBIs" [style=solid];
"encode" [style=solid];
"encodeCompatPackageName" [style=solid];
"encodeCompatPackageName\'" [style=solid];
"encodeFile" [style=solid];
"encodeStringUtf8" [style=solid];
"encodeToIOData" [style=solid];
"endBy" [style=solid];
"endByNonEmpty" [style=solid];
"eof" [style=solid];
"equating" [style=solid];
"equivalent" [style=solid];
"errAmbig" [style=solid];
"errNoArg" [style=solid];
"errReq" [style=solid];
"errUnrec" [style=solid];
"escapeCode" [style=solid];
"escapeResponseFileArg" [style=solid];
"exactMatches" [style=solid];
"exeBuildDir" [style=solid];
"exeBuildInfo" [style=solid];
"exeExtension" [style=solid];
"exeExtensions" [style=solid];
"exeFillInDefaults" [style=solid];
"exeMainModuleName" [style=solid];
"exeModules" [style=solid];
"exeModulesAutogen" [style=solid];
"exeName" [style=solid];
"exeScope" [style=solid];
"exeTargetName" [style=solid];
"execLexer" [style=solid];
"execWriter" [style=solid];
"executableFieldGrammar" [style=solid];
"executables" [style=solid];
"existsAndIsMoreRecentThan" [style=solid];
"expandDots" [style=solid];
"expandOpenUnitId" [style=solid];
"expandResponse" [style=solid];
"expandUnitId" [style=solid];
"expecting" [style=solid];
"explainGlobSyntaxError" [style=solid];
"explicitEitherParsec" [style=solid];
"explicitEitherParsec\'" [style=solid];
"explicitLibModules" [style=solid];
"expose" [style=solid];
"exposeInvocation" [style=solid];
"exposed" [style=solid];
"exposedModules" [style=solid];
"extendConfiguredComponentMap" [style=solid];
"extendLinkedComponentMap" [style=solid];
"extendMooEnv" [style=solid];
"extendMuEnv" [style=solid];
"extensionToFlag" [style=solid];
"extensionToFlag\'" [style=solid];
"extensionsToFlags" [style=solid];
"extraDocFiles" [style=solid];
"extraGHCiLibraries" [style=solid];
"extraLibraries" [style=solid];
"extraSrcFiles" [style=solid];
"extraTmpFiles" [style=solid];
"extractCondition" [style=solid];
"extractConditions" [style=solid];
"extractFileTime" [style=solid];
"extractRtsInfo" [style=solid];
"f" [style=solid];
"failIfErrs" [style=solid];
"failM" [style=solid];
"failProgress" [style=solid];
"failReadE" [style=solid];
"failWith" [style=solid];
"fakePackageId" [style=solid];
"fakePackageName" [style=solid];
"falseArg" [style=solid];
"fieldAnn" [style=solid];
"fieldContent" [style=solid];
"fieldDescrParse" [style=solid];
"fieldDescrPretty" [style=solid];
"fieldDescrsToList" [style=solid];
"fieldGrammarKnownFieldList" [style=solid];
"fieldInlineOrBraces" [style=solid];
"fieldLayoutOrBraces" [style=solid];
"fieldLineAnn" [style=solid];
"fieldLineBS" [style=solid];
"fieldLineStreamEnd" [style=solid];
"fieldLineStreamFromBS" [style=solid];
"fieldLineStreamFromString" [style=solid];
"fieldLinesToStream" [style=solid];
"fieldLinesToString" [style=solid];
"fieldName" [style=solid];
"fieldSecName" [style=solid];
"fieldUniverse" [style=solid];
"fieldlinesToBS" [style=solid];
"fieldlinesToFreeText" [style=solid];
"fieldlinesToFreeText3" [style=solid];
"fileExtensionSupportedLanguage" [style=solid];
"fileGlobMatches" [style=solid];
"fileGlobMatchesSegments" [style=solid];
"filenameCDialect" [style=solid];
"filesEqual" [style=solid];
"filterAutogenModules" [style=solid];
"filterGhciFlags" [style=solid];
"finalizePD" [style=solid];
"find" [style=solid];
"findAllFiles" [style=solid];
"findAllFilesCwdWithExtension" [style=solid];
"findAllFilesWithExtension" [style=solid];
"findDistPref" [style=solid];
"findDistPrefOrDefault" [style=solid];
"findDuplicateFlagAssignments" [style=solid];
"findExecutable" [style=solid];
"findFile" [style=solid];
"findFileCwd" [style=solid];
"findFileCwdWithExtension" [style=solid];
"findFileEx" [style=solid];
"findFileWithExtension" [style=solid];
"findFileWithExtension\'" [style=solid];
"findFirstFile" [style=solid];
"findGhcjsGhcVersion" [style=solid];
"findGhcjsPkgGhcjsVersion" [style=solid];
"findHookedPackageDesc" [style=solid];
"findIncludeFile" [style=solid];
"findMainExeFile" [style=solid];
"findMatch" [style=solid];
"findModDefFile" [style=solid];
"findModuleFile" [style=solid];
"findModuleFileEx" [style=solid];
"findModuleFiles" [style=solid];
"findModuleFilesEx" [style=solid];
"findPackageDesc" [style=solid];
"findPackageDescCwd" [style=solid];
"findProgramOnSearchPath" [style=solid];
"findProgramVersion" [style=solid];
"findSetupFile" [style=solid];
"fixchar" [style=solid];
"flagDefault" [style=solid];
"flagDescription" [style=solid];
"flagElim" [style=solid];
"flagFieldGrammar" [style=solid];
"flagManual" [style=solid];
"flagName" [style=solid];
"flagToDebugInfoLevel" [style=solid];
"flagToList" [style=solid];
"flagToMaybe" [style=solid];
"flagToOptimisationLevel" [style=solid];
"flagToProfDetailLevel" [style=solid];
"flagToVerbosity" [style=solid];
"flatStyle" [style=solid];
"flattenBlocks" [style=solid];
"flattenForest" [style=solid];
"flattenPackageDescription" [style=solid];
"flattenTaggedTargets" [style=solid];
"flibBuildDir" [style=solid];
"flibBuildName" [style=solid];
"flibFillInDefaults" [style=solid];
"flibTargetName" [style=solid];
"fmtLong" [style=solid];
"fmtShort" [style=solid];
"foldComponent" [style=solid];
"foldProgress" [style=solid];
"foldVersionRange" [style=solid];
"foldl1" [style=solid];
"foldr1" [style=solid];
"forceInexact" [style=solid];
"foreign" [style=solid];
"foreignLibBuildInfo" [style=solid];
"foreignLibFieldGrammar" [style=solid];
"foreignLibIsShared" [style=solid];
"foreignLibModDefFile" [style=solid];
"foreignLibModules" [style=solid];
"foreignLibName" [style=solid];
"foreignLibOptions" [style=solid];
"foreignLibType" [style=solid];
"foreignLibTypeIsShared" [style=solid];
"foreignLibVersion" [style=solid];
"foreignLibVersionInfo" [style=solid];
"foreignLibVersionLinux" [style=solid];
"foreignLibs" [style=solid];
"formatDependencyList" [style=solid];
"formatError" [style=solid];
"formatExposedModules" [style=solid];
"formatExtraSourceFiles" [style=solid];
"formatHsSourceDirs" [style=solid];
"formatMixinList" [style=solid];
"formatMsg" [style=solid];
"formatOtherExtensions" [style=solid];
"formatOtherModules" [style=solid];
"frameworkDirs" [style=solid];
"frameworks" [style=solid];
"freeVars" [style=solid];
"freezeByteArray" [style=solid];
"fresh" [style=solid];
"fromComponents" [style=solid];
"fromDepMap" [style=solid];
"fromDepMapUnion" [style=solid];
"fromDistinctList" [style=solid];
"fromExecutable" [style=solid];
"fromFlag" [style=solid];
"fromFlagOrDefault" [style=solid];
"fromFlags" [style=solid];
"fromForeignLib" [style=solid];
"fromLibrary" [style=solid];
"fromList" [style=solid];
"fromMap" [style=solid];
"fromNonEmpty" [style=solid];
"fromPackageDescription" [style=solid];
"fromParsecFields" [style=solid];
"fromPathTemplate" [style=solid];
"fromShortText" [style=solid];
"fromUTF8BS" [style=solid];
"fromUTF8LBS" [style=solid];
"fromVersionIntervals" [style=solid];
"fstOf3" [style=solid];
"gbuild" [style=solid];
"gbuildInfo" [style=solid];
"gbuildIsRepl" [style=solid];
"gbuildModDefFiles" [style=solid];
"gbuildName" [style=solid];
"gbuildNeedDynamic" [style=solid];
"gbuildSources" [style=solid];
"gbuildTargetName" [style=solid];
"gccProgram" [style=solid];
"genPackageFlags" [style=solid];
"generalInstalledPackageInfo" [style=solid];
"generateCabalMacrosHeader" [style=solid];
"generateOne" [style=solid];
"generatePackageVersionMacros" [style=solid];
"generatePathsModule" [style=solid];
"generateRegistrationInfo" [style=solid];
"genericFromParsecFields" [style=solid];
"genericRnf" [style=solid];
"genericStructure" [style=solid];
"getAllInternalToolDependencies" [style=solid];
"getAllToolDependencies" [style=solid];
"getBuildConfig" [style=solid];
"getCabalSpecVersion" [style=solid];
"getCompilerArgs" [style=solid];
"getCompilerVersion" [style=solid];
"getComponent" [style=solid];
"getConfigStateFile" [style=solid];
"getCppOptions" [style=solid];
"getCurTime" [style=solid];
"getCurrentChoice" [style=solid];
"getDbProgramOutput" [style=solid];
"getDirectoryContentsRecursive" [style=solid];
"getEffectiveEnvironment" [style=solid];
"getEnvironment" [style=solid];
"getExeSourceFiles" [style=solid];
"getExtensions" [style=solid];
"getExtraPathEnv" [style=solid];
"getFLibSourceFiles" [style=solid];
"getFileAge" [style=solid];
"getFileAttributesEx" [style=solid];
"getFileExInfoStandard" [style=solid];
"getGhcAppDir" [style=solid];
"getGhcCppOpts" [style=solid];
"getGhcInfo" [style=solid];
"getGhcLibDir" [style=solid];
"getGlobalPackageDB" [style=solid];
"getGlobalPackageDir" [style=solid];
"getHSLibraryName" [style=solid];
"getHaskellObjects" [style=solid];
"getHookedBuildInfo" [style=solid];
"getImplInfo" [style=solid];
"getInput" [style=solid];
"getInstalledPackages" [style=solid];
"getInstalledPackagesMonitorFiles" [style=solid];
"getInstalledPackages\'" [style=solid];
"getInterfaces" [style=solid];
"getInternalLibraries" [style=solid];
"getLanguages" [style=solid];
"getLexerWarnings" [style=solid];
"getLibDir" [style=solid];
"getLibDir\'" [style=solid];
"getLibSourceFiles" [style=solid];
"getMany" [style=solid];
"getModTime" [style=solid];
"getName" [style=solid];
"getNext" [style=solid];
"getNormalCommandDescriptions" [style=solid];
"getObjectFileName" [style=solid];
"getOpt" [style=solid];
"getOpt\'" [style=solid];
"getPackageDBContents" [style=solid];
"getPersistBuildConfig" [style=solid];
"getPos" [style=solid];
"getProgramInvocationIODataAndErrors" [style=solid];
"getProgramInvocationLBS" [style=solid];
"getProgramInvocationOutput" [style=solid];
"getProgramInvocationOutputAndErrors" [style=solid];
"getProgramOutput" [style=solid];
"getProgramSearchPath" [style=solid];
"getRPaths" [style=solid];
"getReexports" [style=solid];
"getShortPathName" [style=solid];
"getSource" [style=solid];
"getSourceFiles" [style=solid];
"getStartCode" [style=solid];
"getSymbolicPath" [style=solid];
"getSystemSearchPath" [style=solid];
"getToken" [style=solid];
"getTokenWithPos" [style=solid];
"getUnifEnv" [style=solid];
"getUserPackageDB" [style=solid];
"getUserPackageDir" [style=solid];
"getWindowsProgramFilesDir" [style=solid];
"getting" [style=solid];
"ghcArchString" [style=solid];
"ghcEnvironmentFileName" [style=solid];
"ghcInvocation" [style=solid];
"ghcLookupProperty" [style=solid];
"ghcOsString" [style=solid];
"ghcPkgProgram" [style=solid];
"ghcPlatformAndVersionString" [style=solid];
"ghcProgram" [style=solid];
"ghcSupported" [style=solid];
"ghcVersionImplInfo" [style=solid];
"ghcjsPkgProgram" [style=solid];
"ghcjsProgram" [style=solid];
"ghcjsVersionImplInfo" [style=solid];
"globMatches" [style=solid];
"globalCommand" [style=solid];
"gmappend" [style=solid];
"gmempty" [style=solid];
"goSections" [style=solid];
"gpdScannedVersion" [style=solid];
"greencardProgram" [style=solid];
"guardComponentName" [style=solid];
"guardModuleName" [style=solid];
"guessGhcPkgFromGhcPath" [style=solid];
"guessGhcjsPkgFromGhcjsPath" [style=solid];
"guessHaddockFromGhcPath" [style=solid];
"guessHaddockFromGhcjsPath" [style=solid];
"guessHpcFromGhcPath" [style=solid];
"guessHpcFromGhcjsPath" [style=solid];
"guessHsc2hsFromGhcPath" [style=solid];
"guessHsc2hsFromGhcjsPath" [style=solid];
"guessRunghcFromGhcPath" [style=solid];
"guessToolFromGhcPath" [style=solid];
"guessToolFromGhcjsPath" [style=solid];
"guessWay" [style=solid];
"hPutContents" [style=solid];
"hackageUrl" [style=solid];
"haddock" [style=solid];
"haddockAction" [style=solid];
"haddockCommand" [style=solid];
"haddockDirName" [style=solid];
"haddockHTMLs" [style=solid];
"haddockInterfaces" [style=solid];
"haddockName" [style=solid];
"haddockOptions" [style=solid];
"haddockPackageFlags" [style=solid];
"haddockPackagePaths" [style=solid];
"haddockPref" [style=solid];
"haddockProgram" [style=solid];
"haddockTemplateEnv" [style=solid];
"haddockToHscolour" [style=solid];
"handleDoesNotExist" [style=solid];
"happyProgram" [style=solid];
"hasBenchmarks" [style=solid];
"hasExes" [style=solid];
"hasForeignLibs" [style=solid];
"hasLibs" [style=solid];
"hasLowerBound" [style=solid];
"hasPublicLib" [style=solid];
"hasTests" [style=solid];
"hasUpperBound" [style=solid];
"hashModuleSubst" [style=solid];
"hashStructure" [style=solid];
"hashToBase62" [style=solid];
"haskellSuitePkgProgram" [style=solid];
"haskellSuiteProgram" [style=solid];
"hcOptions" [style=solid];
"hcPkgInfo" [style=solid];
"hcProfOptions" [style=solid];
"hcSharedOptions" [style=solid];
"hcStaticOptions" [style=solid];
"helpCommandUI" [style=solid];
"hexDigit" [style=solid];
"hiddenCommand" [style=solid];
"hiddenModules" [style=solid];
"hide" [style=solid];
"hideInvocation" [style=solid];
"hmakeProgram" [style=solid];
"homepage" [style=solid];
"hookedAction" [style=solid];
"hookedActionWithArgs" [style=solid];
"hpcDir" [style=solid];
"hpcProgram" [style=solid];
"hsLibraries" [style=solid];
"hsSourceDirsGrammar" [style=solid];
"hsc2hsProgram" [style=solid];
"hscolour" [style=solid];
"hscolourAction" [style=solid];
"hscolourCommand" [style=solid];
"hscolourPref" [style=solid];
"hscolourProgram" [style=solid];
"hscolour\'" [style=solid];
"hstoolVersion" [style=solid];
"htmlDir" [style=solid];
"hyloVersionRange" [style=solid];
"idstring" [style=solid];
"ifNeedsRPathWorkaround" [style=solid];
"ignoreBOM" [style=solid];
"ignoreConditions" [style=solid];
"importDirs" [style=solid];
"inLexerMode" [style=solid];
"inWord16" [style=solid];
"in_field_braces" [style=solid];
"in_field_layout" [style=solid];
"in_section" [style=solid];
"incIndentLevel" [style=solid];
"incPos" [style=solid];
"includeDirs" [style=solid];
"includes" [style=solid];
"increaseConfidence" [style=solid];
"increaseConfidenceFor" [style=solid];
"indefinite" [style=solid];
"indentOfAtLeast" [style=solid];
"index_WIN32_FILE_ATTRIBUTE_DATA_ftLastWriteTime_dwHighDateTime" [style=solid];
"index_WIN32_FILE_ATTRIBUTE_DATA_ftLastWriteTime_dwLowDateTime" [style=solid];
"inexactMatches" [style=solid];
"infixl" [style=solid];
"infixr" [style=solid];
"info" [style=solid];
"infoNoWrap" [style=solid];
"infoProgress" [style=solid];
"init" [style=solid];
"initInvocation" [style=solid];
"initPackageDB" [style=solid];
"initialBuildSteps" [style=solid];
"initialPathTemplateEnv" [style=solid];
"inlines" [style=solid];
"inplaceInstalledPackageInfo" [style=solid];
"inplacePackageDbPath" [style=solid];
"insert" [style=solid];
"insertFlagAssignment" [style=solid];
"insertInterval" [style=solid];
"install" [style=solid];
"installAction" [style=solid];
"installCommand" [style=solid];
"installDataFiles" [style=solid];
"installDirectoryContents" [style=solid];
"installDirsOptions" [style=solid];
"installDirsTemplateEnv" [style=solid];
"installExe" [style=solid];
"installExecutableFile" [style=solid];
"installExecutableFiles" [style=solid];
"installFLib" [style=solid];
"installIncludeFiles" [style=solid];
"installLib" [style=solid];
"installMaybeExecutableFile" [style=solid];
"installMaybeExecutableFiles" [style=solid];
"installOptions" [style=solid];
"installOrdinaryFile" [style=solid];
"installOrdinaryFiles" [style=solid];
"installedComponentId" [style=solid];
"installedComponentId_" [style=solid];
"installedOpenUnitId" [style=solid];
"installedPkgConfig" [style=solid];
"installedUnitId" [style=solid];
"instantiatedWith" [style=solid];
"intToVerbosity" [style=solid];
"integral" [style=solid];
"intercalate" [style=solid];
"internalError" [style=solid];
"internalPackageDBPath" [style=solid];
"interpModuleRenaming" [style=solid];
"interpretPackageDbFlags" [style=solid];
"intersectBound" [style=solid];
"intersectInterval" [style=solid];
"intersectLower" [style=solid];
"intersectUpper" [style=solid];
"intersectVersionIntervals" [style=solid];
"intersectVersionRanges" [style=solid];
"intersectVersionRangesAndJoinComponents" [style=solid];
"intervalToVersionRange" [style=solid];
"invariant" [style=solid];
"invariantVersionIntervals" [style=solid];
"invertVersionIntervals" [style=solid];
"invocationAsBatchFile" [style=solid];
"invocationAsShellScript" [style=solid];
"invocationAsSystemScript" [style=solid];
"invoke" [style=solid];
"invokeHcPkg" [style=solid];
"iodataToText" [style=solid];
"ioeGetVerbatim" [style=solid];
"ioeSetVerbatim" [style=solid];
"ipiFieldGrammar" [style=solid];
"ipiToPreExistingComponent" [style=solid];
"isAbsoluteOnAnyPlatform" [style=solid];
"isAlpha8" [style=solid];
"isAnyPkgconfigVersion" [style=solid];
"isAnyVersion" [style=solid];
"isAnyVersionLight" [style=solid];
"isAscii" [style=solid];
"isAsciiAlpha" [style=solid];
"isAsciiAlphaNum" [style=solid];
"isDefaultIncludeRenaming" [style=solid];
"isDefaultRenaming" [style=solid];
"isDigit8" [style=solid];
"isDynamic" [style=solid];
"isExtensionOf" [style=solid];
"isGoodRelativeDirectoryPath" [style=solid];
"isGoodRelativeFilePath" [style=solid];
"isGoodRelativeGlob" [style=solid];
"isIdent" [style=solid];
"isInSearchPath" [style=solid];
"isInternal" [style=solid];
"isNoVersion" [style=solid];
"isPkgDir" [style=solid];
"isPrefixOfMaybe" [style=solid];
"isRelativeOnAnyPlatform" [style=solid];
"isSpecificVersion" [style=solid];
"isVerboseCallSite" [style=solid];
"isVerboseCallStack" [style=solid];
"isVerboseFlag" [style=solid];
"isVerboseMarkOutput" [style=solid];
"isVerboseNoWrap" [style=solid];
"isVerboseQuiet" [style=solid];
"isVerboseStderr" [style=solid];
"isVerboseTimestamp" [style=solid];
"isVersion0" [style=solid];
"isWildcardRange" [style=solid];
"jhcProgram" [style=solid];
"keys" [style=solid];
"keysSet" [style=solid];
"knownArches" [style=solid];
"knownBenchmarkTypes" [style=solid];
"knownBuildTypes" [style=solid];
"knownCompilerFlavors" [style=solid];
"knownExtensionTable" [style=solid];
"knownExtrasHandlers" [style=solid];
"knownForeignLibTypes" [style=solid];
"knownLanguages" [style=solid];
"knownLicenses" [style=solid];
"knownOSs" [style=solid];
"knownProfDetailLevels" [style=solid];
"knownPrograms" [style=solid];
"knownRepoTypeMap" [style=solid];
"knownRepoTypes" [style=solid];
"knownSuffixHandlers" [style=solid];
"knownTestShowDetails" [style=solid];
"knownTestTypes" [style=solid];
"l" [style=solid];
"languageToFlag" [style=solid];
"languageToFlags" [style=solid];
"laterVersion" [style=solid];
"lbsStripPrefix" [style=solid];
"lc_cid" [style=solid];
"lc_insts" [style=solid];
"lc_pkgid" [style=solid];
"lc_uid" [style=solid];
"ldOptions" [style=solid];
"ldProgram" [style=solid];
"legacyParsecFlagAssignment" [style=solid];
"legacyShowFlagAssignment" [style=solid];
"legacyShowFlagAssignment\'" [style=solid];
"legacyShowFlagValue" [style=solid];
"length" [style=solid];
"lessVerbose" [style=solid];
"letter" [style=solid];
"lexAll" [style=solid];
"lexToken" [style=solid];
"lexemeParsec" [style=solid];
"lexicalError" [style=solid];
"libAbiHash" [style=solid];
"libBuildInfo" [style=solid];
"libExposed" [style=solid];
"libFieldNames" [style=solid];
"libFillInDefaults" [style=solid];
"libModulesAutogen" [style=solid];
"libName" [style=solid];
"libVersionInfoCRA" [style=solid];
"libVersionMajor" [style=solid];
"libVersionNumber" [style=solid];
"libVersionNumberShow" [style=solid];
"libVisibility" [style=solid];
"library" [style=solid];
"libraryDirs" [style=solid];
"libraryDynDirSupported" [style=solid];
"libraryDynDirs" [style=solid];
"libraryFieldGrammar" [style=solid];
"libraryFromBuildInfo" [style=solid];
"libraryNameStanza" [style=solid];
"libraryNameString" [style=solid];
"libraryVisibilitySupported" [style=solid];
"license" [style=solid];
"licenseDocumentRef" [style=solid];
"licenseExceptionId" [style=solid];
"licenseExceptionIdList" [style=solid];
"licenseExceptionName" [style=solid];
"licenseFiles" [style=solid];
"licenseFromSPDX" [style=solid];
"licenseId" [style=solid];
"licenseIdList" [style=solid];
"licenseIdMigrationMessage" [style=solid];
"licenseIsFsfLibre" [style=solid];
"licenseIsOsiApproved" [style=solid];
"licenseName" [style=solid];
"licenseRaw" [style=solid];
"licenseRef" [style=solid];
"licenseToSPDX" [style=solid];
"license\'" [style=solid];
"liftOptDescr" [style=solid];
"liftOption" [style=solid];
"liftOptionL" [style=solid];
"liftParsec" [style=solid];
"liftST" [style=solid];
"liftSet" [style=solid];
"lines\'" [style=solid];
"lines_" [style=solid];
"linkProvision" [style=solid];
"list" [style=solid];
"listDirectory" [style=solid];
"listInvocation" [style=solid];
"listPackageSources" [style=solid];
"listPackageSourcesWithDie" [style=solid];
"listPackageSources\'" [style=solid];
"listUnion" [style=solid];
"listUnionRight" [style=solid];
"localBuildInfoFile" [style=solid];
"localCompatPackageKey" [style=solid];
"localComponentId" [style=solid];
"localPackage" [style=solid];
"localPackageLog" [style=solid];
"localUnitId" [style=solid];
"longOpt" [style=solid];
"lookup" [style=solid];
"lookupComponent" [style=solid];
"lookupComponentId" [style=solid];
"lookupDependency" [style=solid];
"lookupFlagAssignment" [style=solid];
"lookupHcOptions" [style=solid];
"lookupInternalDependency" [style=solid];
"lookupKnownProgram" [style=solid];
"lookupLens" [style=solid];
"lookupMooEnv" [style=solid];
"lookupMuEnv" [style=solid];
"lookupPackageId" [style=solid];
"lookupPackageName" [style=solid];
"lookupProgram" [style=solid];
"lookupProgramVersion" [style=solid];
"lookupSourcePackageId" [style=solid];
"lookupUnitId" [style=solid];
"lower" [style=solid];
"lowerboundCmp" [style=solid];
"lowercase" [style=solid];
"ltest" [style=solid];
"main" [style=solid];
"mainLibSet" [style=solid];
"maintainer" [style=solid];
"majorBoundVersion" [style=solid];
"majorMinor" [style=solid];
"majorUpperBound" [style=solid];
"makeAbsolute" [style=solid];
"manyTill" [style=solid];
"map" [style=solid];
"mapAccumM" [style=solid];
"mapAllBuildInfo" [style=solid];
"mapCondTree" [style=solid];
"mapTreeConds" [style=solid];
"mapTreeConstrs" [style=solid];
"mapTreeData" [style=solid];
"markup" [style=solid];
"markupInvocation" [style=solid];
"markupPackage" [style=solid];
"markupTest" [style=solid];
"matchBuildTarget" [style=solid];
"matchBuildTarget1" [style=solid];
"matchBuildTarget2" [style=solid];
"matchBuildTarget3" [style=solid];
"matchComponent1" [style=solid];
"matchComponent2" [style=solid];
"matchComponentFile" [style=solid];
"matchComponentKind" [style=solid];
"matchComponentKindAndName" [style=solid];
"matchComponentName" [style=solid];
"matchDirFileGlob" [style=solid];
"matchDirFileGlobWithDie" [style=solid];
"matchDirectoryPrefix" [style=solid];
"matchErrorExpected" [style=solid];
"matchErrorNoSuch" [style=solid];
"matchFile" [style=solid];
"matchFile1" [style=solid];
"matchFile2" [style=solid];
"matchFile3" [style=solid];
"matchFileExists" [style=solid];
"matchInexactly" [style=solid];
"matchModule1" [style=solid];
"matchModule2" [style=solid];
"matchModule3" [style=solid];
"matchModuleFileRooted" [style=solid];
"matchModuleFileStem" [style=solid];
"matchModuleFileUnrooted" [style=solid];
"matchModuleName" [style=solid];
"matchOtherFileRooted" [style=solid];
"matchOtherFileUnrooted" [style=solid];
"matchPlus" [style=solid];
"matchPlusShadowing" [style=solid];
"matchZero" [style=solid];
"maxCommandLineSize" [style=solid];
"maybeComponentInstantiatedWith" [style=solid];
"maybeCreateDefaultSetupScript" [style=solid];
"maybeExit" [style=solid];
"maybeGetPersistBuildConfig" [style=solid];
"maybePackageName" [style=solid];
"maybeToFlag" [style=solid];
"maybeToLibraryName" [style=solid];
"md5" [style=solid];
"md5FromInteger" [style=solid];
"mealy" [style=solid];
"member" [style=solid];
"merge" [style=solid];
"mergeCommonStanza" [style=solid];
"minLowerBound" [style=solid];
"mixDir" [style=solid];
"mixLink" [style=solid];
"mixLinkPreModuleShape" [style=solid];
"mkAbiHash" [style=solid];
"mkBuildInfo" [style=solid];
"mkCommandUI" [style=solid];
"mkComponentId" [style=solid];
"mkComponentsGraph" [style=solid];
"mkConfiguredComponent" [style=solid];
"mkDefUnitId" [style=solid];
"mkDependency" [style=solid];
"mkFlagAssignment" [style=solid];
"mkFlagName" [style=solid];
"mkGHCiLibName" [style=solid];
"mkGHCiProfLibName" [style=solid];
"mkGenericSharedBundledLibName" [style=solid];
"mkGenericSharedLibName" [style=solid];
"mkGenericStaticLibName" [style=solid];
"mkGhcOptPackages" [style=solid];
"mkHaddockArgs" [style=solid];
"mkInstalledPackageInfo" [style=solid];
"mkLegacyUnitId" [style=solid];
"mkLexState" [style=solid];
"mkLexState\'" [style=solid];
"mkLibName" [style=solid];
"mkLibVersionInfo" [style=solid];
"mkLicenseExceptionId" [style=solid];
"mkLicenseId" [style=solid];
"mkLicenseRef" [style=solid];
"mkLicenseRef\'" [style=solid];
"mkLinkedComponentsLocalBuildInfo" [style=solid];
"mkMixin" [style=solid];
"mkName" [style=solid];
"mkOpenUnitId" [style=solid];
"mkPackageIndex" [style=solid];
"mkPackageName" [style=solid];
"mkPackageNameST" [style=solid];
"mkPkgconfigName" [style=solid];
"mkPrivateDir" [style=solid];
"mkProfLibName" [style=solid];
"mkProgramDb" [style=solid];
"mkSharedLibName" [style=solid];
"mkSimplePreProcessor" [style=solid];
"mkStaticLibName" [style=solid];
"mkTargetInfo" [style=solid];
"mkUnitId" [style=solid];
"mkUnqualComponentName" [style=solid];
"mkVerbosity" [style=solid];
"mkVersion" [style=solid];
"mkVersionIntervals" [style=solid];
"mkVersion\'" [style=solid];
"mkWord64VerRep" [style=solid];
"mkZPackage" [style=solid];
"modifyProgramSearchPath" [style=solid];
"modifyVerbosity" [style=solid];
"moduleNameIndex" [style=solid];
"modulePath" [style=solid];
"moduleRenamingParsec" [style=solid];
"monoidalField" [style=solid];
"moreRecentFile" [style=solid];
"moreVerbose" [style=solid];
"multiOption" [style=solid];
"multiStageProgramInvocation" [style=solid];
"munch" [style=solid];
"munch1" [style=solid];
"mungePackagePaths" [style=solid];
"mungedName\'" [style=solid];
"mungedPackageId" [style=solid];
"mungedPackageName" [style=solid];
"mungedVersion\'" [style=solid];
"nameAnn" [style=solid];
"namelessFieldAnn" [style=solid];
"needProgram" [style=solid];
"neededTargetsInBuildOrder" [style=solid];
"neededTargetsInBuildOrder\'" [style=solid];
"neighbors" [style=solid];
"newByteArray" [style=solid];
"newPackageDepsBehaviour" [style=solid];
"newPackageDepsBehaviourMinVersion" [style=solid];
"newSimpleUnitId" [style=solid];
"newline" [style=solid];
"noArg" [style=solid];
"noExtraFlags" [style=solid];
"noVersion" [style=solid];
"nodeValue" [style=solid];
"nominalStructure" [style=solid];
"nonEmptyInterval" [style=solid];
"nonEmptyVI" [style=solid];
"nonExistentPackageThisIsCabalBug" [style=solid];
"noneOf" [style=solid];
"normal" [style=solid];
"normaliseGhcArgs" [style=solid];
"normaliseLineEndings" [style=solid];
"normaliseMixin" [style=solid];
"normalisePathSeps" [style=solid];
"normaliseTrailingSep" [style=solid];
"normaliseVersionRange" [style=solid];
"normaliseVersionRange2" [style=solid];
"notThisVersion" [style=solid];
"notice" [style=solid];
"noticeDoc" [style=solid];
"noticeNoWrap" [style=solid];
"nubMatchErrors" [style=solid];
"nubMatches" [style=solid];
"null" [style=solid];
"nullFlagAssignment" [style=solid];
"nullVersion" [style=solid];
"numericVersion" [style=solid];
"objExtension" [style=solid];
"octDigit" [style=solid];
"onAllBranches" [style=solid];
"oneOf" [style=solid];
"openBrace" [style=solid];
"openModuleFreeHoles" [style=solid];
"openModuleSubstFreeHoles" [style=solid];
"openNewBinaryFile" [style=solid];
"openUnitIdFreeHoles" [style=solid];
"optArg" [style=solid];
"optArg\'" [style=solid];
"option" [style=solid];
"optionDistPref" [style=solid];
"optionNumJobs" [style=solid];
"optionVerbosity" [style=solid];
"optionalField" [style=solid];
"optionalFieldDef" [style=solid];
"optionsFieldGrammar" [style=solid];
"orEarlierVersion" [style=solid];
"orLaterVersion" [style=solid];
"orNoSuchThing" [style=solid];
"ordNub" [style=solid];
"ordNubBy" [style=solid];
"ordNubRight" [style=solid];
"osAliases" [style=solid];
"output_flags" [style=solid];
"over" [style=solid];
"overNubList" [style=solid];
"overNubListR" [style=solid];
"overallDependencies" [style=solid];
"overwriteSnapshotPackageDesc" [style=solid];
"pack\'" [style=solid];
"package" [style=solid];
"packageDbArgs" [style=solid];
"packageDbArgsConf" [style=solid];
"packageDbArgsDb" [style=solid];
"packageDbFlag" [style=solid];
"packageDbOpt" [style=solid];
"packageDbOpts" [style=solid];
"packageDbPaths" [style=solid];
"packageDbStackOpts" [style=solid];
"packageDescription" [style=solid];
"packageDescriptionFieldGrammar" [style=solid];
"packageKeySupported" [style=solid];
"packageLogPath" [style=solid];
"packageName" [style=solid];
"packageNameToUnqualComponentName" [style=solid];
"packageTemplateEnv" [style=solid];
"packageVersion" [style=solid];
"panic" [style=solid];
"parentSrcLocPrefix" [style=solid];
"parmakeSupported" [style=solid];
"parseBS" [style=solid];
"parseBuildFlagsForShowBuildInfoFlags" [style=solid];
"parseCommonName" [style=solid];
"parseCondTree" [style=solid];
"parseCondTreeWithCommonStanzas" [style=solid];
"parseCondition" [style=solid];
"parseConditionConfVar" [style=solid];
"parseEnvironmentFileLine" [style=solid];
"parseFailure" [style=solid];
"parseFatalFailure" [style=solid];
"parseFatalFailure\'" [style=solid];
"parseFieldGrammar" [style=solid];
"parseFields" [style=solid];
"parseFile" [style=solid];
"parseFileGlob" [style=solid];
"parseGenericPackageDescription" [style=solid];
"parseGenericPackageDescriptionMaybe" [style=solid];
"parseGenericPackageDescription\'" [style=solid];
"parseGhcEnvironmentFile" [style=solid];
"parseHeader" [style=solid];
"parseHookedBuildInfo" [style=solid];
"parseHookedBuildInfo\'" [style=solid];
"parseInstalledPackageInfo" [style=solid];
"parseName" [style=solid];
"parseNameBS" [style=solid];
"parsePackage" [style=solid];
"parsePackages" [style=solid];
"parseStr" [style=solid];
"parseString" [style=solid];
"parseTest\'" [style=solid];
"parseUnqualComponentName" [style=solid];
"parseWarning" [style=solid];
"parseWarnings" [style=solid];
"parseZDashCode" [style=solid];
"parsecCommaList" [style=solid];
"parsecCommaNonEmpty" [style=solid];
"parsecFilePath" [style=solid];
"parsecFlagAssignment" [style=solid];
"parsecFlagAssignmentNonEmpty" [style=solid];
"parsecFreeText" [style=solid];
"parsecGivenComponent" [style=solid];
"parsecIdent" [style=solid];
"parsecLeadingCommaList" [style=solid];
"parsecLeadingCommaNonEmpty" [style=solid];
"parsecLeadingOptCommaList" [style=solid];
"parsecLibraryNameComponent" [style=solid];
"parsecMaybeQuoted" [style=solid];
"parsecModSubstEntry" [style=solid];
"parsecModuleName" [style=solid];
"parsecOpenModuleSubst" [style=solid];
"parsecOpenModuleSubstEntry" [style=solid];
"parsecOptCommaList" [style=solid];
"parsecQuoted" [style=solid];
"parsecStandard" [style=solid];
"parsecTestedWith" [style=solid];
"parsecToReadE" [style=solid];
"parsecToken" [style=solid];
"parsecToken\'" [style=solid];
"parsecUnqualComponentName" [style=solid];
"parsecVerbosity" [style=solid];
"parser" [style=solid];
"partitionComponents" [style=solid];
"partitionFields" [style=solid];
"patchQuirks" [style=solid];
"patches" [style=solid];
"pathSeparator" [style=solid];
"pdToGpd" [style=solid];
"perCompilerFlavorToList" [style=solid];
"pkgBuildableComponents" [style=solid];
"pkgComponentInfo" [style=solid];
"pkgComponents" [style=solid];
"pkgConfigProgram" [style=solid];
"pkgName" [style=solid];
"pkgPathEnvVar" [style=solid];
"pkgRoot" [style=solid];
"pkgUrl" [style=solid];
"pkgVersion" [style=solid];
"pkgconfigParser" [style=solid];
"plain" [style=solid];
"platformDefines" [style=solid];
"platformFromTriple" [style=solid];
"platformTemplateEnv" [style=solid];
"popThreadedFlag" [style=solid];
"positionCol" [style=solid];
"positionRow" [style=solid];
"posixSecondsToModTime" [style=solid];
"posixTimeToModTime" [style=solid];
"postProcessInternalDeps" [style=solid];
"postprocess" [style=solid];
"ppAlex" [style=solid];
"ppC2hs" [style=solid];
"ppC2hsExtras" [style=solid];
"ppCondBenchmarks" [style=solid];
"ppCondExecutables" [style=solid];
"ppCondForeignLibs" [style=solid];
"ppCondLibrary" [style=solid];
"ppCondSubLibraries" [style=solid];
"ppCondTestSuites" [style=solid];
"ppCondTree2" [style=solid];
"ppCondition" [style=solid];
"ppConfVar" [style=solid];
"ppCpp" [style=solid];
"ppCpp\'" [style=solid];
"ppCpphs" [style=solid];
"ppField" [style=solid];
"ppFlag" [style=solid];
"ppFlagName" [style=solid];
"ppGenPackageFlags" [style=solid];
"ppGenericPackageDescription" [style=solid];
"ppGhcCpp" [style=solid];
"ppGreenCard" [style=solid];
"ppHappy" [style=solid];
"ppHsc2hs" [style=solid];
"ppHsc2hsExtras" [style=solid];
"ppIfCondition" [style=solid];
"ppPackageDescription" [style=solid];
"ppSetupBInfo" [style=solid];
"ppSourceRepo" [style=solid];
"ppSourceRepos" [style=solid];
"ppSuffixes" [style=solid];
"ppUnlit" [style=solid];
"preProcessInternalDeps" [style=solid];
"prefixRelativeComponentInstallDirs" [style=solid];
"prefixRelativeInstallDirs" [style=solid];
"prepareSnapshotTree" [style=solid];
"prepareTree" [style=solid];
"preprocessComponent" [style=solid];
"preprocessExtras" [style=solid];
"preprocessFile" [style=solid];
"pretextPeek" [style=solid];
"pretextPeeks" [style=solid];
"pretextPos" [style=solid];
"pretextSell" [style=solid];
"prettyCallStack" [style=solid];
"prettyFieldGrammar" [style=solid];
"prettyFieldLines" [style=solid];
"prettyLibraryNameComponent" [style=solid];
"prettySectionArgs" [style=solid];
"prettyShow" [style=solid];
"prettyVersionRange" [style=solid];
"prettyVersionRange16" [style=solid];
"printPackageProblems" [style=solid];
"printRawCommandAndArgs" [style=solid];
"printRawCommandAndArgsAndEnv" [style=solid];
"processImports" [style=solid];
"profDetailLevelFlag" [style=solid];
"profOptionsFieldGrammar" [style=solid];
"profilingSupported" [style=solid];
"programDbOption" [style=solid];
"programDbOptions" [style=solid];
"programDbPaths" [style=solid];
"programDbPaths\'" [style=solid];
"programFlagsDescription" [style=solid];
"programInvocation" [style=solid];
"programPath" [style=solid];
"programSearchPathAsPATHVar" [style=solid];
"projectVersionRange" [style=solid];
"qualifiedExeName" [style=solid];
"quickIndex" [style=solid];
"quote" [style=solid];
"rawSystem" [style=solid];
"rawSystemExit" [style=solid];
"rawSystemExitCode" [style=solid];
"rawSystemExitWithEnv" [style=solid];
"rawSystemIOWithEnv" [style=solid];
"rawSystemIOWithEnvAndAction" [style=solid];
"rawSystemStdInOut" [style=solid];
"rawSystemStdout" [style=solid];
"rc_depends" [style=solid];
"rc_munged_id" [style=solid];
"rc_pkgid" [style=solid];
"rc_uid" [style=solid];
"readAndParseFile" [style=solid];
"readBuildTargets" [style=solid];
"readEOrFail" [style=solid];
"readFields" [style=solid];
"readFields\'" [style=solid];
"readGenericPackageDescription" [style=solid];
"readGhcEnvironmentFile" [style=solid];
"readHookedBuildInfo" [style=solid];
"readNubList" [style=solid];
"readPackageDbList" [style=solid];
"readPoint" [style=solid];
"readTargetInfos" [style=solid];
"readUTF8File" [style=solid];
"readUnifRef" [style=solid];
"readUserBuildTarget" [style=solid];
"readUserBuildTargets" [style=solid];
"recache" [style=solid];
"recacheInvocation" [style=solid];
"reclassify" [style=solid];
"reconfigurePrograms" [style=solid];
"reconstructGlob" [style=solid];
"recoverWith" [style=solid];
"reexportedModules" [style=solid];
"reexportedModulesSupported" [style=solid];
"regScriptFileName" [style=solid];
"register" [style=solid];
"registerAction" [style=solid];
"registerAll" [style=solid];
"registerCommand" [style=solid];
"registerInvocation" [style=solid];
"registerPackage" [style=solid];
"registrationPackageDB" [style=solid];
"relaxHeadInterval" [style=solid];
"relaxLastInterval" [style=solid];
"relocRegistrationInfo" [style=solid];
"relocatableInstalledPackageInfo" [style=solid];
"removeLowerBound" [style=solid];
"removeMingwIncludeDir" [style=solid];
"removeUpperBound" [style=solid];
"renamePreModuleShape" [style=solid];
"renamingPackageFlagsSupported" [style=solid];
"render" [style=solid];
"renderArgs" [style=solid];
"renderBuildTarget" [style=solid];
"renderErrMsg" [style=solid];
"renderField" [style=solid];
"renderFields" [style=solid];
"renderGhcEnvironmentFile" [style=solid];
"renderGhcEnvironmentFileEntry" [style=solid];
"renderGhcOptions" [style=solid];
"renderJson" [style=solid];
"renderPureArgs" [style=solid];
"repl" [style=solid];
"replAction" [style=solid];
"replCommand" [style=solid];
"replComponent" [style=solid];
"replExe" [style=solid];
"replFLib" [style=solid];
"replLib" [style=solid];
"replOptions" [style=solid];
"replacementChar" [style=solid];
"repoBranch" [style=solid];
"repoKind" [style=solid];
"repoLocation" [style=solid];
"repoModule" [style=solid];
"repoSubdir" [style=solid];
"repoTag" [style=solid];
"repoType" [style=solid];
"repoTypeAliases" [style=solid];
"repoTypeDirname" [style=solid];
"reportBuildTargetProblems" [style=solid];
"reportFailedDependencies" [style=solid];
"reportProgram" [style=solid];
"reportSelectedDependencies" [style=solid];
"reportUserBuildTargetProblems" [style=solid];
"repr" [style=solid];
"reqArg" [style=solid];
"reqArgFlag" [style=solid];
"reqArg\'" [style=solid];
"requireProgram" [style=solid];
"requireProgramVersion" [style=solid];
"requiredSignatures" [style=solid];
"resolveBuildTarget" [style=solid];
"resolveBuildTargets" [style=solid];
"resolveWithFlags" [style=solid];
"restoreProgramDb" [style=solid];
"resultString" [style=solid];
"retPos" [style=solid];
"returnLex" [style=solid];
"revClosure" [style=solid];
"revNeighbors" [style=solid];
"revTopSort" [style=solid];
"reverseDependencyClosure" [style=solid];
"reverseTopologicalOrder" [style=solid];
"rewriteFileEx" [style=solid];
"rewriteFileLBS" [style=solid];
"roll" [style=solid];
"rpmvercmp" [style=solid];
"runCmd" [style=solid];
"runConfigureScript" [style=solid];
"runDList" [style=solid];
"runDbProgram" [style=solid];
"runDirFileGlob" [style=solid];
"runFieldParser" [style=solid];
"runFieldParser\'" [style=solid];
"runGHC" [style=solid];
"runHaddock" [style=solid];
"runInteractiveProcess" [style=solid];
"runLogProgress" [style=solid];
"runParseResult" [style=solid];
"runParsecParser" [style=solid];
"runParsecParser\'" [style=solid];
"runProgram" [style=solid];
"runProgramInvocation" [style=solid];
"runSimplePreProcessor" [style=solid];
"runSnocList" [style=solid];
"runStrip" [style=solid];
"runTest" [style=solid];
"runUnifyM" [style=solid];
"runghcProgram" [style=solid];
"rw_flags" [style=solid];
"s" [style=solid];
"safeHead" [style=solid];
"safeInit" [style=solid];
"safeLast" [style=solid];
"safeTail" [style=solid];
"sameDirectory" [style=solid];
"sanityCheckHookedBuildInfo" [style=solid];
"satisfyRange" [style=solid];
"scanSpecVersion" [style=solid];
"sdist" [style=solid];
"sdistAction" [style=solid];
"sdistCommand" [style=solid];
"searchByName" [style=solid];
"searchByNameSubstring" [style=solid];
"searchWithPredicate" [style=solid];
"secToUnixEpoch" [style=solid];
"sectionArg" [style=solid];
"sectionArgAnn" [style=solid];
"sectionArgsToString" [style=solid];
"sectionLayoutOrBraces" [style=solid];
"sectionizeFields" [style=solid];
"selectDependency" [style=solid];
"sepBy" [style=solid];
"sepByNonEmpty" [style=solid];
"sepEndBy" [style=solid];
"sepEndByNonEmpty" [style=solid];
"set" [style=solid];
"setCabalSpecVersion" [style=solid];
"setDirOrdinary" [style=solid];
"setEnv" [style=solid];
"setEnv_" [style=solid];
"setFileExecutable" [style=solid];
"setFileMode" [style=solid];
"setFileOrdinary" [style=solid];
"setInput" [style=solid];
"setLexerMode" [style=solid];
"setMaybePackageName" [style=solid];
"setMungedPackageName" [style=solid];
"setPos" [style=solid];
"setProgramSearchPath" [style=solid];
"setStartCode" [style=solid];
"setUnitId" [style=solid];
"setupBInfoFieldGrammar" [style=solid];
"setupBuildInfo" [style=solid];
"setupDepends" [style=solid];
"setupMessage" [style=solid];
"setupMessage\'" [style=solid];
"shGetFolderPath" [style=solid];
"shapeInstalledPackage" [style=solid];
"sharedOptionsFieldGrammar" [style=solid];
"shortOpt" [style=solid];
"shortRelativePath" [style=solid];
"showBuildInfo" [style=solid];
"showBuildInfoAction" [style=solid];
"showBuildInfoCommand" [style=solid];
"showBuildTarget" [style=solid];
"showBuildTarget\'" [style=solid];
"showCabalSpecVersion" [style=solid];
"showCompilerId" [style=solid];
"showCompilerIdWithAbi" [style=solid];
"showComponentKind" [style=solid];
"showComponentKindShort" [style=solid];
"showComponentName" [style=solid];
"showExposedModules" [style=solid];
"showFields" [style=solid];
"showFields\'" [style=solid];
"showFilePath" [style=solid];
"showFlagAssignment" [style=solid];
"showFlagValue" [style=solid];
"showForCabal" [style=solid];
"showForGHC" [style=solid];
"showFreeText" [style=solid];
"showFreeTextV3" [style=solid];
"showFullInstalledPackageInfo" [style=solid];
"showGenericPackageDescription" [style=solid];
"showHeader" [style=solid];
"showHookedBuildInfo" [style=solid];
"showInstalledPackageInfo" [style=solid];
"showInstalledPackageInfoField" [style=solid];
"showLibraryName" [style=solid];
"showMD5" [style=solid];
"showPError" [style=solid];
"showPWarning" [style=solid];
"showPackageDbList" [style=solid];
"showPackageDescription" [style=solid];
"showPkgName" [style=solid];
"showPos" [style=solid];
"showProfDetailLevel" [style=solid];
"showProfDetailLevelFlag" [style=solid];
"showSimpleInstalledPackageInfoField" [style=solid];
"showString\'" [style=solid];
"showToken" [style=solid];
"showTokenStr" [style=solid];
"showUserBuildTarget" [style=solid];
"signatures" [style=solid];
"signedIntegral" [style=solid];
"silent" [style=solid];
"simpleConfiguredProgram" [style=solid];
"simpleGhcEnvironmentFile" [style=solid];
"simpleLicenseExpression" [style=solid];
"simpleParse" [style=solid];
"simpleParsec" [style=solid];
"simpleParsecBS" [style=solid];
"simpleParsecW\'" [style=solid];
"simpleParsec\'" [style=solid];
"simpleProgram" [style=solid];
"simpleProgramInvocation" [style=solid];
"simpleTestStub" [style=solid];
"simpleUserHooks" [style=solid];
"simplifyCondTree" [style=solid];
"simplifyCondition" [style=solid];
"simplifyDependency" [style=solid];
"simplifyPackageVersionConstraint" [style=solid];
"simplifyVersionRange" [style=solid];
"simplifyWindows" [style=solid];
"simplifyWithSysParams" [style=solid];
"singleton" [style=solid];
"singletonF" [style=solid];
"size" [style=solid];
"sizeError" [style=solid];
"size_WIN32_FILE_ATTRIBUTE_DATA" [style=solid];
"skipOptional" [style=solid];
"skipSpaces1" [style=solid];
"snapshotPackage" [style=solid];
"snapshotVersion" [style=solid];
"sndOf3" [style=solid];
"snoc" [style=solid];
"sourceComponentName" [style=solid];
"sourceLibName" [style=solid];
"sourcePackageId" [style=solid];
"sourceRepoFieldGrammar" [style=solid];
"sourceRepos" [style=solid];
"space" [style=solid];
"spaces" [style=solid];
"spanMaybe" [style=solid];
"specHasCommonStanzas" [style=solid];
"specHasElif" [style=solid];
"specVersion" [style=solid];
"splitArgs" [style=solid];
"splitConstantPrefix" [style=solid];
"srcPref" [style=solid];
"stability" [style=solid];
"stage1" [style=solid];
"stage2" [style=solid];
"stage2and3" [style=solid];
"stage3" [style=solid];
"stage3go" [style=solid];
"standardPP" [style=solid];
"startInterpreter" [style=solid];
"stateCommonStanzas" [style=solid];
"stateGpd" [style=solid];
"staticLibExtension" [style=solid];
"std_flags" [style=solid];
"stepProgress" [style=solid];
"stringLiteral" [style=solid];
"stringLookup_3_0" [style=solid];
"stringLookup_3_10" [style=solid];
"stringLookup_3_2" [style=solid];
"stringLookup_3_6" [style=solid];
"stringLookup_3_9" [style=solid];
"stripExe" [style=solid];
"stripExtension" [style=solid];
"stripExtractVersion" [style=solid];
"stripLib" [style=solid];
"stripParensVersionRange" [style=solid];
"stripProgram" [style=solid];
"stronglyConnComp" [style=solid];
"structureBuilder" [style=solid];
"structureHash" [style=solid];
"structuredDecode" [style=solid];
"structuredDecodeFileOrFail" [style=solid];
"structuredDecodeOrFailIO" [style=solid];
"structuredEncode" [style=solid];
"structuredEncodeFile" [style=solid];
"stubFilePath" [style=solid];
"stubMain" [style=solid];
"stubName" [style=solid];
"stubRunTests" [style=solid];
"stubWriteLog" [style=solid];
"subLibraries" [style=solid];
"substPathTemplate" [style=solid];
"substTopDir" [style=solid];
"substituteInstallDirTemplates" [style=solid];
"succeedReadE" [style=solid];
"suiteError" [style=solid];
"suiteFailed" [style=solid];
"suitePassed" [style=solid];
"summarizePackage" [style=solid];
"summarizeSuiteFinish" [style=solid];
"summarizeSuiteStart" [style=solid];
"summarizeTest" [style=solid];
"supportsDynamicToo" [style=solid];
"suppressOverrideArgs" [style=solid];
"surround" [style=solid];
"synopsis" [style=solid];
"tab" [style=solid];
"takeFields" [style=solid];
"takeWhileEndLE" [style=solid];
"tarBallName" [style=solid];
"tarProgram" [style=solid];
"targetPlatform" [style=solid];
"tell" [style=solid];
"test" [style=solid];
"testAction" [style=solid];
"testBuildInfo" [style=solid];
"testCommand" [style=solid];
"testCoverage" [style=solid];
"testFillInDefaults" [style=solid];
"testGroup" [style=solid];
"testInterface" [style=solid];
"testModules" [style=solid];
"testModulesAutogen" [style=solid];
"testName" [style=solid];
"testOption" [style=solid];
"testOptions\'" [style=solid];
"testStanzaBuildInfo" [style=solid];
"testStanzaMainIs" [style=solid];
"testStanzaTestModule" [style=solid];
"testStanzaTestType" [style=solid];
"testSuiteExeV10AsExe" [style=solid];
"testSuiteFieldGrammar" [style=solid];
"testSuiteLibV09AsLibAndExe" [style=solid];
"testSuiteLogPath" [style=solid];
"testSuites" [style=solid];
"testType" [style=solid];
"testedWith" [style=solid];
"thenLex" [style=solid];
"thisPackageVersionConstraint" [style=solid];
"thisVersion" [style=solid];
"tixDir" [style=solid];
"tixFilePath" [style=solid];
"toComponentLocalBuildInfos" [style=solid];
"toConfiguredComponent" [style=solid];
"toConfiguredComponent\'" [style=solid];
"toConfiguredComponents" [style=solid];
"toDListOf" [style=solid];
"toDepMap" [style=solid];
"toDepMapUnion" [style=solid];
"toExtendedLengthPath" [style=solid];
"toFilePath" [style=solid];
"toFlag" [style=solid];
"toGhcOptimisation" [style=solid];
"toGraph" [style=solid];
"toJSLibName" [style=solid];
"toLinkedComponent" [style=solid];
"toLinkedComponents" [style=solid];
"toList" [style=solid];
"toListOf" [style=solid];
"toMap" [style=solid];
"toNonEmpty" [style=solid];
"toNubList" [style=solid];
"toNubListR" [style=solid];
"toPWarnings" [style=solid];
"toPackageIndex" [style=solid];
"toPathTemplate" [style=solid];
"toPreModuleShape" [style=solid];
"toReadyComponents" [style=solid];
"toSet" [style=solid];
"toSetOf" [style=solid];
"toShortText" [style=solid];
"toUTF8BS" [style=solid];
"toUTF8LBS" [style=solid];
"toVersionIntervals" [style=solid];
"tok" [style=solid];
"tokCloseBrace" [style=solid];
"tokColon" [style=solid];
"tokFieldLine" [style=solid];
"tokIndent" [style=solid];
"tokOpenBrace" [style=solid];
"tokOther" [style=solid];
"tokStr" [style=solid];
"tokSym" [style=solid];
"tokSym\'" [style=solid];
"tokenizeQuotedWords" [style=solid];
"toki" [style=solid];
"topHandler" [style=solid];
"topHandlerWith" [style=solid];
"topSort" [style=solid];
"topologicalOrder" [style=solid];
"trace" [style=solid];
"traceShow" [style=solid];
"traceShowId" [style=solid];
"traceWhen" [style=solid];
"transformAllBuildDepends" [style=solid];
"transformAllBuildDependsN" [style=solid];
"transformAllBuildInfos" [style=solid];
"transformCaret" [style=solid];
"transformCaretLower" [style=solid];
"transformCaretUpper" [style=solid];
"traverseCondBranchC" [style=solid];
"traverseCondBranchV" [style=solid];
"traverseCondTreeBuildInfo" [style=solid];
"traverseCondTreeC" [style=solid];
"traverseCondTreeV" [style=solid];
"trdOf3" [style=solid];
"trueArg" [style=solid];
"trusted" [style=solid];
"tryEach" [style=solid];
"tryFindPackageDesc" [style=solid];
"tryFindPackageDescCwd" [style=solid];
"tryGetBuildConfig" [style=solid];
"tryGetConfigStateFile" [style=solid];
"tryGetPersistBuildConfig" [style=solid];
"tryIO" [style=solid];
"tryM" [style=solid];
"typeName" [style=solid];
"typeRep" [style=solid];
"typeVersion" [style=solid];
"uhcLanguageExtensions" [style=solid];
"uhcLanguages" [style=solid];
"uhcPackageDbOptions" [style=solid];
"uhcPackageDir" [style=solid];
"uhcPackageSubDir" [style=solid];
"uhcProgram" [style=solid];
"uhcTarget" [style=solid];
"uhcTargetVariant" [style=solid];
"unAbiHash" [style=solid];
"unComponentId" [style=solid];
"unDir" [style=solid];
"unFlagAssignment" [style=solid];
"unFlagName" [style=solid];
"unModuleName" [style=solid];
"unPackageName" [style=solid];
"unPackageNameST" [style=solid];
"unPkgconfigName" [style=solid];
"unUnitId" [style=solid];
"unUnqualComponentName" [style=solid];
"unUnqualComponentNameST" [style=solid];
"unVersionIntervals" [style=solid];
"unWithSource" [style=solid];
"unclassify" [style=solid];
"unconfigureProgram" [style=solid];
"unconsChar" [style=solid];
"unescape" [style=solid];
"unescapeArgs" [style=solid];
"unfoldrM" [style=solid];
"unfoldr\'" [style=solid];
"unifiedIPIDRequired" [style=solid];
"unifyInner" [style=solid];
"unifyModule" [style=solid];
"unifyThunkWith" [style=solid];
"unifyUnitId" [style=solid];
"uninterruptibleCancel" [style=solid];
"unintersperse" [style=solid];
"union" [style=solid];
"unionBound" [style=solid];
"unionInterval" [style=solid];
"unionInvocation" [style=solid];
"unionLeft" [style=solid];
"unionRight" [style=solid];
"unionUpper" [style=solid];
"unionVersionIntervals" [style=solid];
"unionVersionRanges" [style=solid];
"unionVersionRanges\'" [style=solid];
"uniqueField" [style=solid];
"unitIdSupported" [style=solid];
"unitIdTarget" [style=solid];
"unitIdTarget\'" [style=solid];
"unitedList" [style=solid];
"unknownCompilerInfo" [style=solid];
"unlit" [style=solid];
"unpack\'" [style=solid];
"unqualComponentNameToPackageName" [style=solid];
"unregScriptFileName" [style=solid];
"unregister" [style=solid];
"unregisterAction" [style=solid];
"unregisterCommand" [style=solid];
"unregisterInvocation" [style=solid];
"unroll" [style=solid];
"unsafeFromUTF8BS" [style=solid];
"unsafeMakeSymbolicPath" [style=solid];
"unsafeMkDefUnitId" [style=solid];
"unsetEnv" [style=solid];
"unsnoc" [style=solid];
"unsnocNE" [style=solid];
"unsupportedExtensions" [style=solid];
"unsupportedForeignLibs" [style=solid];
"unsupportedLanguages" [style=solid];
"unvalidateBenchmark" [style=solid];
"unvalidateTestSuite" [style=solid];
"updateConfiguredProgs" [style=solid];
"updatePackageDescription" [style=solid];
"updateProgram" [style=solid];
"updateUnconfiguredProgs" [style=solid];
"upper" [style=solid];
"usageAlternatives" [style=solid];
"usageDefault" [style=solid];
"usageInfo" [style=solid];
"use" [style=solid];
"usedExtensions" [style=solid];
"userMaybeSpecifyPath" [style=solid];
"userSpecifiedArgs" [style=solid];
"userSpecifiedPath" [style=solid];
"userSpecifyArgs" [style=solid];
"userSpecifyArgss" [style=solid];
"userSpecifyPath" [style=solid];
"userSpecifyPaths" [style=solid];
"usesTemplateHaskellOrQQ" [style=solid];
"validInterval" [style=solid];
"validModuleChar" [style=solid];
"validModuleComponent" [style=solid];
"validVersion" [style=solid];
"validateBenchmark" [style=solid];
"validateTestSuite" [style=solid];
"validateUTF8" [style=solid];
"verbatimUserError" [style=solid];
"verbose" [style=solid];
"verboseCallSite" [style=solid];
"verboseCallStack" [style=solid];
"verboseFlag" [style=solid];
"verboseHasFlags" [style=solid];
"verboseMarkOutput" [style=solid];
"verboseNoFlag" [style=solid];
"verboseNoFlags" [style=solid];
"verboseNoStderr" [style=solid];
"verboseNoTimestamp" [style=solid];
"verboseNoWrap" [style=solid];
"verboseQuiet" [style=solid];
"verboseStderr" [style=solid];
"verboseTimestamp" [style=solid];
"verboseUnmarkOutput" [style=solid];
"verbosityHandle" [style=solid];
"verbosityOpts" [style=solid];
"version0" [style=solid];
"versionDigitParser" [style=solid];
"versionGuardMultilibs" [style=solid];
"versionIntervals" [style=solid];
"versionNumbers" [style=solid];
"versionRangeParser" [style=solid];
"versionRangeToPkgconfigVersionRange" [style=solid];
"versionToPkgconfigVersion" [style=solid];
"view" [style=solid];
"viewAsGetOpt" [style=solid];
"wait" [style=solid];
"waitCatch" [style=solid];
"warn" [style=solid];
"warnImport" [style=solid];
"warnInvalidSubsection" [style=solid];
"warnMultipleSingularFields" [style=solid];
"warnProgress" [style=solid];
"wildcardUpperBound" [style=solid];
"windowsTick" [style=solid];
"wipeMetadata" [style=solid];
"withAllComponentsInBuildOrder" [style=solid];
"withAllTargetsInBuildOrder" [style=solid];
"withAllTargetsInBuildOrder\'" [style=solid];
"withAsync" [style=solid];
"withAsyncNF" [style=solid];
"withAsyncUsing" [style=solid];
"withBenchLBI" [style=solid];
"withBenchmark" [style=solid];
"withCallStackPrefix" [style=solid];
"withExe" [style=solid];
"withExeLBI" [style=solid];
"withExt" [style=solid];
"withFileContents" [style=solid];
"withForeignLib" [style=solid];
"withFrozenCallStack" [style=solid];
"withHcPkg" [style=solid];
"withIOData" [style=solid];
"withLexicalCallStack" [style=solid];
"withLib" [style=solid];
"withLibLBI" [style=solid];
"withMetadata" [style=solid];
"withNeededTargetsInBuildOrder" [style=solid];
"withNeededTargetsInBuildOrder\'" [style=solid];
"withOutputMarker" [style=solid];
"withResponseFile" [style=solid];
"withTempDirectory" [style=solid];
"withTempDirectoryEx" [style=solid];
"withTempFile" [style=solid];
"withTempFileEx" [style=solid];
"withTest" [style=solid];
"withTestLBI" [style=solid];
"withTimestamp" [style=solid];
"withTrailingNewline" [style=solid];
"withUTF8FileContents" [style=solid];
"withinIntervals" [style=solid];
"withinPkgconfigVersionRange" [style=solid];
"withinRange" [style=solid];
"withinVersion" [style=solid];
"withoutWarnings" [style=solid];
"wrapLine" [style=solid];
"wrapText" [style=solid];
"wrapTextVerbosity" [style=solid];
"writeAutogenFiles" [style=solid];
"writeFileAtomic" [style=solid];
"writeGenericPackageDescription" [style=solid];
"writeGhcEnvironmentFile" [style=solid];
"writeHcPkgRegisterScript" [style=solid];
"writeHookedBuildInfo" [style=solid];
"writePackageDescription" [style=solid];
"writePersistBuildConfig" [style=solid];
"writePoint" [style=solid];
"writeRegistrationFileDirectly" [style=solid];
"writeSimpleTestStub" [style=solid];
"writeUTF8File" [style=solid];
"writeUnifRef" [style=solid];
"x" [style=solid];
"xargs" [style=solid];
"zdashcode" [style=solid];
"zeroIndentLevel" [style=solid];
"zeroLowerBound" [style=solid];
"zeroPos" [style=solid];
"zipDefault" [style=solid];
"" -> "abstractUnitId";
"" -> "dispOpenModuleSubst";
"" -> "dispOpenModuleSubstEntry";
"" -> "hashModuleSubst";
"" -> "mkDefUnitId";
"" -> "mkOpenUnitId";
"" -> "openModuleFreeHoles";
"" -> "openModuleSubstFreeHoles";
"" -> "openUnitIdFreeHoles";
"" -> "parsecOpenModuleSubst";
"" -> "parsecOpenModuleSubstEntry";
"_1" -> "f";
"_2" -> "f";
"_Arch" -> "f";
"_Arch" -> "x";
"_Impl" -> "emptyHookedBuildInfo";
"_Impl" -> "f";
"_Impl" -> "x";
"_OS" -> "f";
"_OS" -> "x";
"_PackageFlag" -> "f";
"_PackageFlag" -> "x";
"_syntaxExtensions" -> "map";
"_syntaxExtensions" -> "parseGenericPackageDescription";
"_syntaxExtensions" -> "parseGenericPackageDescriptionMaybe";
"_syntaxExtensions" -> "parseHookedBuildInfo";
"_syntaxExtensions" -> "prettyShow";
"_syntaxExtensions" -> "readGenericPackageDescription";
"_syntaxExtensions" -> "readHookedBuildInfo";
"_syntaxExtensions" -> "runParseResult";
"_syntaxExtensions" -> "scanSpecVersion";
"_syntaxFieldNames" -> "benchmarkFieldGrammar";
"_syntaxFieldNames" -> "executableFieldGrammar";
"_syntaxFieldNames" -> "fieldGrammarKnownFieldList";
"_syntaxFieldNames" -> "flagFieldGrammar";
"_syntaxFieldNames" -> "foreignLibFieldGrammar";
"_syntaxFieldNames" -> "libraryFieldGrammar";
"_syntaxFieldNames" -> "packageDescriptionFieldGrammar";
"_syntaxFieldNames" -> "setupBInfoFieldGrammar";
"_syntaxFieldNames" -> "sourceRepoFieldGrammar";
"_syntaxFieldNames" -> "testSuiteFieldGrammar";
"abiDepends" -> "f";
"abiDepends" -> "s";
"abiDepends" -> "x";
"abiHash" -> "compilerFlavor";
"abiHash" -> "f";
"abiHash" -> "internalPackageDBPath";
"abiHash" -> "mkAbiHash";
"abiHash" -> "s";
"abiHash" -> "x";
"abiTemplateEnv" -> "abiTagString";
"abiTemplateEnv" -> "prettyShow";
"absoluteComponentInstallDirs" -> "compilerInfo";
"absoluteInstallCommandDirs" -> "absoluteComponentInstallDirs";
"absoluteInstallCommandDirs" -> "absoluteInstallDirs";
"absoluteInstallDirs" -> "absoluteComponentInstallDirs";
"absoluteInstallDirs" -> "appendSubdirs";
"absoluteInstallDirs" -> "fromPathTemplate";
"absoluteInstallDirs" -> "initialPathTemplateEnv";
"absoluteInstallDirs" -> "length";
"absoluteInstallDirs" -> "localUnitId";
"absoluteInstallDirs" -> "substituteInstallDirTemplates";
"absoluteInstalledPackageInfo" -> "absoluteComponentInstallDirs";
"absoluteInstalledPackageInfo" -> "generalInstalledPackageInfo";
"absoluteInstalledPackageInfo" -> "libBuildInfo";
"absoluteInstalledPackageInfo" -> "null";
"absolutePackageDBPaths" -> "absolutePackageDBPath";
"abstractUnitId" -> "newSimpleUnitId";
"addBuildableCondition" -> "condIfThen";
"addBuildableCondition" -> "extractCondition";
"addBuildableConditionPDTagged" -> "componentBuildInfo";
"addBuildableConditionPDTagged" -> "condIfThenElse";
"addBuildableConditionPDTagged" -> "extractCondition";
"addBuildableConditionPDTagged" -> "l";
"addBuildableConditionPDTagged" -> "libBuildInfo";
"addBuildableConditionPDTagged" -> "mapTreeConstrs";
"addCommonFlags" -> "commonFlags";
"addCommonFlags" -> "f";
"addCommonFlags" -> "l";
"addCommonFlags" -> "map";
"addCommonFlags" -> "s";
"addErr" -> "getUnifEnv";
"addErr" -> "liftST";
"addErr" -> "s";
"addErrContext" -> "addErrContextM";
"addErrContext" -> "s";
"addErrContextM" -> "s";
"addInternalBuildTools" -> "exeExtension";
"addInternalBuildTools" -> "getAllInternalToolDependencies";
"addInternalBuildTools" -> "simpleConfiguredProgram";
"addInternalBuildTools" -> "unUnqualComponentName";
"addInternalBuildTools" -> "updateProgram";
"addKnownProgram" -> "updateUnconfiguredProgs";
"addKnownPrograms" -> "addKnownProgram";
"addLibraryPath" -> "intercalate";
"addLibraryPath" -> "null";
"addProgressCtx" -> "binaryGetMD5";
"addProgressCtx" -> "binaryPutMD5";
"addProgressCtx" -> "md5";
"addProgressCtx" -> "md5FromInteger";
"addProgressCtx" -> "s";
"addProgressCtx" -> "showMD5";
"addWarning" -> "getCabalSpecVersion";
"addWarning" -> "parseFailure";
"addWarning" -> "parseFatalFailure";
"addWarning" -> "parseFatalFailure\'";
"addWarning" -> "parseString";
"addWarning" -> "parseWarning";
"addWarning" -> "parseWarnings";
"addWarning" -> "readAndParseFile";
"addWarning" -> "recoverWith";
"addWarning" -> "runParseResult";
"addWarning" -> "s";
"addWarning" -> "setCabalSpecVersion";
"addWarning" -> "withoutWarnings";
"adjustExts" -> "toFlag";
"adjustPos" -> "f";
"adjustPos" -> "s";
"ala" -> "alaf";
"alaList\'" -> "map";
"alaNonEmpty\'" -> "asVersionIntervals";
"alaNonEmpty\'" -> "cabalSpecFromVersionDigits";
"alaNonEmpty\'" -> "cataVersionRange";
"alaNonEmpty\'" -> "map";
"alaNonEmpty\'" -> "mkVersion";
"alaNonEmpty\'" -> "null";
"alaNonEmpty\'" -> "parsecMaybeQuoted";
"alaNonEmpty\'" -> "parsecTestedWith";
"alaNonEmpty\'" -> "parsecToken";
"alaNonEmpty\'" -> "parsecToken\'";
"alaNonEmpty\'" -> "prettyShow";
"alaNonEmpty\'" -> "showCabalSpecVersion";
"alaNonEmpty\'" -> "showFilePath";
"alaNonEmpty\'" -> "showToken";
"alaNonEmpty\'" -> "version0";
"alaNonEmpty\'" -> "versionNumbers";
"alaNonEmpty\'" -> "x";
"alaSet\'" -> "map";
"alaf" -> "f";
"alexProgram" -> "findProgramVersion";
"alexProgram" -> "simpleProgram";
"alexProgram" -> "x";
"alexScan" -> "alexScanUser";
"alexScanUser" -> "alexGetByte";
"alexScanUser" -> "alex_actions";
"alexScanUser" -> "alex_scan_tkn";
"alexScanUser" -> "s";
"alex_action_0" -> "addWarning";
"alex_action_0" -> "adjustPos";
"alex_action_0" -> "bol_section";
"alex_action_0" -> "checkWhitespace";
"alex_action_0" -> "lexToken";
"alex_action_0" -> "retPos";
"alex_action_0" -> "setStartCode";
"alex_action_1" -> "checkLeadingWhitespace";
"alex_action_10" -> "toki";
"alex_action_11" -> "tok";
"alex_action_12" -> "tok";
"alex_action_13" -> "tok";
"alex_action_14" -> "adjustPos";
"alex_action_14" -> "bol_section";
"alex_action_14" -> "lexToken";
"alex_action_14" -> "retPos";
"alex_action_14" -> "setStartCode";
"alex_action_15" -> "checkLeadingWhitespace";
"alex_action_16" -> "in_field_layout";
"alex_action_16" -> "setStartCode";
"alex_action_16" -> "toki";
"alex_action_18" -> "adjustPos";
"alex_action_18" -> "bol_field_layout";
"alex_action_18" -> "lexToken";
"alex_action_18" -> "retPos";
"alex_action_18" -> "setStartCode";
"alex_action_19" -> "in_field_braces";
"alex_action_19" -> "lexToken";
"alex_action_19" -> "setStartCode";
"alex_action_20" -> "toki";
"alex_action_22" -> "tok";
"alex_action_23" -> "tok";
"alex_action_24" -> "adjustPos";
"alex_action_24" -> "bol_field_braces";
"alex_action_24" -> "lexToken";
"alex_action_24" -> "retPos";
"alex_action_24" -> "setStartCode";
"alex_action_3" -> "in_section";
"alex_action_3" -> "setStartCode";
"alex_action_3" -> "tok";
"alex_action_4" -> "tok";
"alex_action_5" -> "toki";
"alex_action_9" -> "toki";
"alex_scan_tkn" -> "addWarning";
"alex_scan_tkn" -> "adjustPos";
"alex_scan_tkn" -> "alexGetByte";
"alex_scan_tkn" -> "alexIndexInt16OffAddr";
"alex_scan_tkn" -> "alexIndexInt32OffAddr";
"alex_scan_tkn" -> "alex_accept";
"alex_scan_tkn" -> "alex_base";
"alex_scan_tkn" -> "alex_check";
"alex_scan_tkn" -> "alex_deflt";
"alex_scan_tkn" -> "alex_scan_tkn";
"alex_scan_tkn" -> "alex_table";
"alex_scan_tkn" -> "check";
"alex_scan_tkn" -> "execLexer";
"alex_scan_tkn" -> "getInput";
"alex_scan_tkn" -> "getPos";
"alex_scan_tkn" -> "getStartCode";
"alex_scan_tkn" -> "quickIndex";
"alex_scan_tkn" -> "returnLex";
"alex_scan_tkn" -> "s";
"alex_scan_tkn" -> "setInput";
"alex_scan_tkn" -> "setPos";
"alex_scan_tkn" -> "setStartCode";
"alex_scan_tkn" -> "thenLex";
"alex_scan_tkn" -> "toPWarnings";
"allBuildDepends" -> "allBuildInfo";
"allBuildInfo" -> "allLibraries";
"allBuildInfo" -> "benchmarkBuildInfo";
"allBuildInfo" -> "benchmarks";
"allBuildInfo" -> "executables";
"allBuildInfo" -> "foreignLibBuildInfo";
"allBuildInfo" -> "foreignLibs";
"allBuildInfo" -> "libBuildInfo";
"allBuildInfo" -> "testBuildInfo";
"allBuildInfo" -> "testSuites";
"allCondTrees" -> "_2";
"allCondTrees" -> "f";
"allExplicitIncludes" -> "view";
"allExplicitIncludes" -> "x";
"allExtensions" -> "usedExtensions";
"allFlags" -> "f";
"allFlags" -> "fromFlagOrDefault";
"allLibModules" -> "explicitLibModules";
"allLibModules" -> "map";
"allLibModules" -> "ordNub";
"allLibraries" -> "f";
"allLibraries" -> "l";
"allLibraries" -> "library";
"allLibraries" -> "subLibraries";
"allSourcesBuildInfo" -> "f";
"allSourcesBuildInfo" -> "findAllFilesCwdWithExtension";
"allSourcesBuildInfo" -> "findFileCwdWithExtension";
"allSourcesBuildInfo" -> "getSymbolicPath";
"allSourcesBuildInfo" -> "map";
"allSourcesBuildInfo" -> "ppSuffixes";
"allSourcesBuildInfo" -> "prettyShow";
"allSourcesBuildInfo" -> "x";
"allSuffixHandlers" -> "knownSuffixHandlers";
"allSuffixHandlers" -> "x";
"allTargetsInBuildOrder" -> "allTargetsInBuildOrder\'";
"allTargetsInBuildOrder\'" -> "map";
"allTargetsInBuildOrder\'" -> "mkTargetInfo";
"alterVersion" -> "f";
"alterVersion" -> "mkVersion";
"alterVersion" -> "versionNumbers";
"ambiguousReexportMsg" -> "dispModuleSource";
"ambiguousReexportMsg" -> "getSource";
"ambiguousReexportMsg" -> "mixLink";
"ambiguousReexportMsg" -> "s";
"ambiguousReexportMsg" -> "unWithSource";
"anaVersionRange" -> "embedVersionRange";
"annotateCallStackIO" -> "calibrateMtimeChangeDelay";
"annotateCallStackIO" -> "callStack";
"annotateCallStackIO" -> "f";
"annotateCallStackIO" -> "getCurTime";
"annotateCallStackIO" -> "getFileAge";
"annotateCallStackIO" -> "getModTime";
"annotateCallStackIO" -> "map";
"annotateCallStackIO" -> "posixSecondsToModTime";
"annotateCallStackIO" -> "prettyCallStack";
"annotateCallStackIO" -> "s";
"annotateCallStackIO" -> "x";
"annotateIO" -> "f";
"annotateIO" -> "withMetadata";
"anyVersion" -> "mkVersion";
"arProgram" -> "simpleProgram";
"arResponseFilesSupported" -> "ghcSupported";
"archAliases" -> "classifyArch";
"archAliases" -> "lowercase";
"archAliases" -> "parsecIdent";
"asVersionIntervals" -> "toVersionIntervals";
"asVersionIntervals" -> "unVersionIntervals";
"asVersionIntervals" -> "versionIntervals";
"author" -> "f";
"author" -> "s";
"author" -> "x";
"autoconfUserHooks" -> "die\'";
"autoconfUserHooks" -> "findDistPrefOrDefault";
"autoconfUserHooks" -> "fromFlag";
"autoconfUserHooks" -> "getHookedBuildInfo";
"autoconfUserHooks" -> "noExtraFlags";
"autoconfUserHooks" -> "runConfigureScript";
"autoconfUserHooks" -> "sanityCheckHookedBuildInfo";
"autoconfUserHooks" -> "simpleUserHooks";
"autoconfUserHooks" -> "updatePackageDescription";
"autogenComponentModulesDir" -> "componentBuildDir";
"autogenPathsModuleName" -> "fixchar";
"autogenPathsModuleName" -> "map";
"autogenPathsModuleName" -> "packageName";
"autogenPathsModuleName" -> "prettyShow";
"aview" -> "l";
"aview" -> "pretextPos";
"aview" -> "pretextSell";
"backpackSupported" -> "ghcSupported";
"badAutoconfCharacters" -> "quote";
"basic" -> "f";
"basic" -> "libVisibility";
"basic" -> "maybePackageName";
"basic" -> "mungedPackageName";
"basic" -> "packageVersion";
"basic" -> "setMaybePackageName";
"basic" -> "setMungedPackageName";
"basic" -> "sourceLibName";
"basicFieldGrammar" -> "basicLibName";
"basicFieldGrammar" -> "basicLibVisibility";
"basicFieldGrammar" -> "basicName";
"basicFieldGrammar" -> "basicPkgName";
"basicFieldGrammar" -> "basicVersion";
"basicFieldGrammar" -> "emptyInstalledPackageInfo";
"basicFieldGrammar" -> "mungedPackageName";
"basicFieldGrammar" -> "nullVersion";
"basicFieldGrammar" -> "optionalField";
"basicFieldGrammar" -> "optionalFieldDef";
"basicLibName" -> "f";
"basicLibName" -> "libraryNameString";
"basicLibName" -> "maybeToLibraryName";
"basicLibName" -> "x";
"basicLibVisibility" -> "f";
"basicLibVisibility" -> "x";
"basicName" -> "f";
"basicName" -> "x";
"basicPkgName" -> "f";
"basicPkgName" -> "x";
"basicVersion" -> "f";
"basicVersion" -> "x";
"bench" -> "benchOption";
"bench" -> "build";
"bench" -> "die\'";
"bench" -> "exeExtension";
"bench" -> "fromFlag";
"bench" -> "length";
"bench" -> "lookup";
"bench" -> "map";
"bench" -> "mkUnqualComponentName";
"bench" -> "notice";
"bench" -> "null";
"bench" -> "package";
"bench" -> "prettyShow";
"bench" -> "rawSystemExitCode";
"bench" -> "unUnqualComponentName";
"benchAction" -> "findDistPrefOrDefault";
"benchAction" -> "fromFlag";
"benchAction" -> "getBuildConfig";
"benchAction" -> "hookedActionWithArgs";
"benchAction" -> "toFlag";
"benchFillInDefaults" -> "benchmarkBuildInfo";
"benchFillInDefaults" -> "biFillInDefaults";
"benchOption" -> "build";
"benchOption" -> "compilerInfo";
"benchOption" -> "componentInitialBuildSteps";
"benchOption" -> "createInternalPackageDB";
"benchOption" -> "fromPathTemplate";
"benchOption" -> "initialBuildSteps";
"benchOption" -> "initialPathTemplateEnv";
"benchOption" -> "repl";
"benchOption" -> "showBuildInfo";
"benchOption" -> "startInterpreter";
"benchOption" -> "substPathTemplate";
"benchOption" -> "toPathTemplate";
"benchOption" -> "unUnqualComponentName";
"benchOption" -> "writeAutogenFiles";
"benchmarkBuildInfo" -> "f";
"benchmarkBuildInfo" -> "knownBenchmarkTypes";
"benchmarkBuildInfo" -> "nullVersion";
"benchmarkBuildInfo" -> "s";
"benchmarkBuildInfo" -> "x";
"benchmarkCommand" -> "benchmarkOptions\'";
"benchmarkCommand" -> "defaultBenchmarkFlags";
"benchmarkCommand" -> "usageAlternatives";
"benchmarkCommand" -> "wrapText";
"benchmarkExeV10asExe" -> "benchmarkBuildInfo";
"benchmarkExeV10asExe" -> "benchmarkInterface";
"benchmarkExeV10asExe" -> "benchmarkName";
"benchmarkExeV10asExe" -> "exeName";
"benchmarkExeV10asExe" -> "exeScope";
"benchmarkExeV10asExe" -> "modulePath";
"benchmarkFieldGrammar" -> "benchmarkStanzaBenchmarkModule";
"benchmarkFieldGrammar" -> "benchmarkStanzaBenchmarkType";
"benchmarkFieldGrammar" -> "benchmarkStanzaBuildInfo";
"benchmarkFieldGrammar" -> "benchmarkStanzaMainIs";
"benchmarkFieldGrammar" -> "buildInfoFieldGrammar";
"benchmarkFieldGrammar" -> "optionalField";
"benchmarkInterface" -> "f";
"benchmarkInterface" -> "s";
"benchmarkInterface" -> "x";
"benchmarkModules" -> "benchmarkBuildInfo";
"benchmarkModulesAutogen" -> "benchmarkBuildInfo";
"benchmarkName" -> "f";
"benchmarkName" -> "s";
"benchmarkName" -> "x";
"benchmarkOptions\'" -> "fromPathTemplate";
"benchmarkOptions\'" -> "map";
"benchmarkOptions\'" -> "option";
"benchmarkOptions\'" -> "optionDistPref";
"benchmarkOptions\'" -> "optionVerbosity";
"benchmarkOptions\'" -> "reqArg\'";
"benchmarkOptions\'" -> "splitArgs";
"benchmarkOptions\'" -> "toPathTemplate";
"benchmarkOptions\'" -> "x";
"benchmarkStanzaBenchmarkModule" -> "f";
"benchmarkStanzaBenchmarkModule" -> "s";
"benchmarkStanzaBenchmarkModule" -> "x";
"benchmarkStanzaBenchmarkType" -> "f";
"benchmarkStanzaBenchmarkType" -> "s";
"benchmarkStanzaBenchmarkType" -> "x";
"benchmarkStanzaBuildInfo" -> "f";
"benchmarkStanzaBuildInfo" -> "s";
"benchmarkStanzaBuildInfo" -> "x";
"benchmarkStanzaMainIs" -> "f";
"benchmarkStanzaMainIs" -> "s";
"benchmarkStanzaMainIs" -> "x";
"benchmarkType" -> "benchmarkInterface";
"benchmarks" -> "f";
"benchmarks" -> "s";
"benchmarks" -> "x";
"biFillInDefaults" -> "null";
"biFillInDefaults" -> "sameDirectory";
"boolOpt" -> "flagToMaybe";
"boolOpt" -> "s";
"boolOpt" -> "set";
"boolOpt\'" -> "boolOpt\'";
"boolOpt\'" -> "flagToMaybe";
"boolOpt\'" -> "s";
"boolOpt\'" -> "set";
"breakMaybe" -> "f";
"breakMaybe" -> "x";
"brokenPackages" -> "allPackages";
"brokenPackages" -> "lookupUnitId";
"brokenPackages" -> "null";
"bugReports" -> "f";
"bugReports" -> "s";
"bugReports" -> "x";
"build" -> "addInternalBuildTools";
"build" -> "buildComponent";
"build" -> "componentBuildInfo";
"build" -> "componentInitialBuildSteps";
"build" -> "createInternalPackageDB";
"build" -> "f";
"build" -> "fromFlag";
"build" -> "info";
"build" -> "intercalate";
"build" -> "map";
"build" -> "neededTargetsInBuildOrder\'";
"build" -> "null";
"build" -> "readTargetInfos";
"build" -> "setupMessage";
"build" -> "showComponentName";
"buildAction" -> "findDistPrefOrDefault";
"buildAction" -> "fromFlag";
"buildAction" -> "getBuildConfig";
"buildAction" -> "hookedAction";
"buildAction" -> "maybeToFlag";
"buildAction" -> "noExtraFlags";
"buildAction" -> "rawSystemExit";
"buildAction" -> "reconfigurePrograms";
"buildAction" -> "toFlag";
"buildArch" -> "classifyArch";
"buildCommand" -> "buildOptions";
"buildCommand" -> "defaultBuildFlags";
"buildCommand" -> "optionDistPref";
"buildCommand" -> "optionVerbosity";
"buildCommand" -> "programFlagsDescription";
"buildCommand" -> "usageAlternatives";
"buildCommand" -> "wrapText";
"buildCompilerFlavor" -> "classifyCompilerFlavor";
"buildCompilerId" -> "buildCompilerFlavor";
"buildCompilerId" -> "buildCompilerVersion";
"buildCompilerVersion" -> "mkVersion\'";
"buildComponent" -> "addExtraAsmSources";
"buildComponent" -> "addExtraCSources";
"buildComponent" -> "addExtraCmmSources";
"buildComponent" -> "addExtraCxxSources";
"buildComponent" -> "benchmarkExeV10asExe";
"buildComponent" -> "benchmarkInterface";
"buildComponent" -> "buildExe";
"buildComponent" -> "buildFLib";
"buildComponent" -> "buildLib";
"buildComponent" -> "debug";
"buildComponent" -> "die\'";
"buildComponent" -> "inplaceInstalledPackageInfo";
"buildComponent" -> "libBuildInfo";
"buildComponent" -> "maybeComponentInstantiatedWith";
"buildComponent" -> "mkAbiHash";
"buildComponent" -> "preprocessComponent";
"buildComponent" -> "preprocessExtras";
"buildComponent" -> "prettyShow";
"buildComponent" -> "registerPackage";
"buildComponent" -> "setupMessage\'";
"buildComponent" -> "test";
"buildComponent" -> "testInterface";
"buildComponent" -> "testSuiteExeV10AsExe";
"buildComponent" -> "testSuiteLibV09AsLibAndExe";
"buildExe" -> "compilerFlavor";
"buildExe" -> "constructUHCCmdLine";
"buildExe" -> "die\'";
"buildExe" -> "exeName";
"buildExe" -> "gbuild";
"buildExe" -> "getGlobalPackageDir";
"buildExe" -> "getUserPackageDir";
"buildExe" -> "modulePath";
"buildExe" -> "prettyShow";
"buildExe" -> "runDbProgram";
"buildExe" -> "uhcProgram";
"buildFLib" -> "compilerFlavor";
"buildFLib" -> "die\'";
"buildFLib" -> "gbuild";
"buildInfoExt" -> "renderJson";
"buildInfoFieldGrammar" -> "alaList";
"buildInfoFieldGrammar" -> "alaList\'";
"buildInfoFieldGrammar" -> "formatDependencyList";
"buildInfoFieldGrammar" -> "formatMixinList";
"buildInfoFieldGrammar" -> "formatOtherExtensions";
"buildInfoFieldGrammar" -> "formatOtherModules";
"buildInfoFieldGrammar" -> "hsSourceDirsGrammar";
"buildInfoFieldGrammar" -> "optionsFieldGrammar";
"buildInfoFieldGrammar" -> "profOptionsFieldGrammar";
"buildInfoFieldGrammar" -> "sharedOptionsFieldGrammar";
"buildLib" -> "allLibModules";
"buildLib" -> "autogenComponentModulesDir";
"buildLib" -> "autogenPackageModulesDir";
"buildLib" -> "buildOrReplLib";
"buildLib" -> "compilerFlavor";
"buildLib" -> "constructUHCCmdLine";
"buildLib" -> "die\'";
"buildLib" -> "getGlobalPackageDir";
"buildLib" -> "getSymbolicPath";
"buildLib" -> "getUserPackageDir";
"buildLib" -> "haskellSuiteProgram";
"buildLib" -> "includeDirs";
"buildLib" -> "libBuildInfo";
"buildLib" -> "map";
"buildLib" -> "packageDbOpt";
"buildLib" -> "pathSeparator";
"buildLib" -> "prettyShow";
"buildLib" -> "runDbProgram";
"buildLib" -> "uhcProgram";
"buildLib" -> "usedExtensions";
"buildOS" -> "classifyOS";
"buildOptions" -> "optionNumJobs";
"buildOptions" -> "programDbOption";
"buildOptions" -> "programDbOptions";
"buildOptions" -> "programDbPaths";
"buildOrReplLib" -> "absoluteComponentInstallDirs";
"buildOrReplLib" -> "adjustExts";
"buildOrReplLib" -> "allLibModules";
"buildOrReplLib" -> "checkNeedsRecompilation";
"buildOrReplLib" -> "compilerVersion";
"buildOrReplLib" -> "componentBuildDir";
"buildOrReplLib" -> "componentGhcOptions";
"buildOrReplLib" -> "componentIsIndefinite";
"buildOrReplLib" -> "copyDirectoryRecursive";
"buildOrReplLib" -> "createDirectoryIfMissingVerbose";
"buildOrReplLib" -> "findFileWithExtension";
"buildOrReplLib" -> "fromFlag";
"buildOrReplLib" -> "getHSLibraryName";
"buildOrReplLib" -> "getImplInfo";
"buildOrReplLib" -> "getRPaths";
"buildOrReplLib" -> "ghcProgram";
"buildOrReplLib" -> "ghcjsProgram";
"buildOrReplLib" -> "hcProfOptions";
"buildOrReplLib" -> "hcSharedOptions";
"buildOrReplLib" -> "hcStaticOptions";
"buildOrReplLib" -> "info";
"buildOrReplLib" -> "isDynamic";
"buildOrReplLib" -> "ldProgram";
"buildOrReplLib" -> "libBuildInfo";
"buildOrReplLib" -> "lookupProgram";
"buildOrReplLib" -> "map";
"buildOrReplLib" -> "mkLibName";
"buildOrReplLib" -> "mkProfLibName";
"buildOrReplLib" -> "mkSharedLibName";
"buildOrReplLib" -> "mkStaticLibName";
"buildOrReplLib" -> "mkVersion";
"buildOrReplLib" -> "null";
"buildOrReplLib" -> "objExtension";
"buildOrReplLib" -> "prettyShow";
"buildOrReplLib" -> "requireProgram";
"buildOrReplLib" -> "runGHC";
"buildOrReplLib" -> "supportsDynamicToo";
"buildOrReplLib" -> "toFlag";
"buildOrReplLib" -> "toNubListR";
"buildOrReplLib" -> "usesTemplateHaskellOrQQ";
"buildOrReplLib" -> "warn";
"buildOrReplLib" -> "x";
"buildPlatform" -> "buildArch";
"buildPlatform" -> "buildOS";
"buildType" -> "buildTypeRaw";
"buildType" -> "setupBuildInfo";
"buildType" -> "specVersion";
"buildTypeRaw" -> "f";
"buildTypeRaw" -> "s";
"buildTypeRaw" -> "x";
"builtinPrograms" -> "alexProgram";
"builtinPrograms" -> "arProgram";
"builtinPrograms" -> "c2hsProgram";
"builtinPrograms" -> "cpphsProgram";
"builtinPrograms" -> "doctestProgram";
"builtinPrograms" -> "gccProgram";
"builtinPrograms" -> "ghcPkgProgram";
"builtinPrograms" -> "ghcProgram";
"builtinPrograms" -> "ghcjsPkgProgram";
"builtinPrograms" -> "ghcjsProgram";
"builtinPrograms" -> "greencardProgram";
"builtinPrograms" -> "haddockProgram";
"builtinPrograms" -> "happyProgram";
"builtinPrograms" -> "haskellSuitePkgProgram";
"builtinPrograms" -> "haskellSuiteProgram";
"builtinPrograms" -> "hmakeProgram";
"builtinPrograms" -> "hpcProgram";
"builtinPrograms" -> "hsc2hsProgram";
"builtinPrograms" -> "hscolourProgram";
"builtinPrograms" -> "jhcProgram";
"builtinPrograms" -> "ldProgram";
"builtinPrograms" -> "pkgConfigProgram";
"builtinPrograms" -> "runghcProgram";
"builtinPrograms" -> "stripProgram";
"builtinPrograms" -> "tarProgram";
"builtinPrograms" -> "uhcProgram";
"bulkOfLicenses" -> "cabalSpecVersionToSPDXListVersion";
"bulkOfLicenses" -> "simpleLicenseExpression";
"c2hsProgram" -> "findProgramVersion";
"c2hsProgram" -> "simpleProgram";
"cAnd" -> "x";
"cOr" -> "empty";
"cOr" -> "f";
"cOr" -> "x";
"cabalSpecMinimumLibraryVersion" -> "cabalSpecToVersionDigits";
"cabalSpecMinimumLibraryVersion" -> "x";
"cabalSpecVersionToSPDXListVersion" -> "licenseDocumentRef";
"cabalSpecVersionToSPDXListVersion" -> "licenseRef";
"cabalSpecVersionToSPDXListVersion" -> "mkLicenseRef";
"cabalSpecVersionToSPDXListVersion" -> "mkLicenseRef\'";
"cabalStyleFile" -> "elements";
"cabalStyleFile" -> "eof";
"cabalStyleFile" -> "zeroIndentLevel";
"cabalVersion" -> "mkVersion";
"cabalVersion" -> "mkVersion\'";
"calibrateMtimeChangeDelay" -> "getModTime";
"calibrateMtimeChangeDelay" -> "silent";
"calibrateMtimeChangeDelay" -> "typeRep";
"calibrateMtimeChangeDelay" -> "withTempDirectory";
"callStack" -> "callStack";
"cancel" -> "waitCatch";
"caseFold" -> "lowercase";
"cataVersionRange" -> "f";
"cataVersionRange" -> "projectVersionRange";
"category" -> "f";
"category" -> "s";
"category" -> "x";
"ccLdOptionsBuildInfo" -> "ccOptions";
"ccLdOptionsBuildInfo" -> "includeDirs";
"ccLdOptionsBuildInfo" -> "ldOptions";
"ccLdOptionsBuildInfo" -> "map";
"ccOptions" -> "f";
"ccOptions" -> "s";
"ccOptions" -> "x";
"chainl" -> "chainl1";
"chainl" -> "x";
"chainl1" -> "f";
"chainl1" -> "x";
"chainr" -> "chainr1";
"chainr" -> "x";
"chattyTry" -> "catchIO";
"checkAllGhcOptions" -> "checkGhcOptions";
"checkAllGhcOptions" -> "hcOptions";
"checkAllGhcOptions" -> "hcProfOptions";
"checkAllGhcOptions" -> "hcSharedOptions";
"checkAlternatives" -> "check";
"checkAlternatives" -> "null";
"checkAlternatives" -> "quote";
"checkBenchmark" -> "benchmarkInterface";
"checkBenchmark" -> "benchmarkModules";
"checkBenchmark" -> "benchmarkModulesAutogen";
"checkBenchmark" -> "benchmarkName";
"checkBenchmark" -> "check";
"checkBenchmark" -> "commaSep";
"checkBenchmark" -> "dups";
"checkBenchmark" -> "f";
"checkBenchmark" -> "knownBenchmarkTypes";
"checkBenchmark" -> "map";
"checkBenchmark" -> "null";
"checkBenchmark" -> "prettyShow";
"checkBenchmark" -> "quote";
"checkBenchmark" -> "view";
"checkBuildTargets" -> "allTargetsInBuildOrder\'";
"checkBuildTargets" -> "componentDisabledReason";
"checkBuildTargets" -> "componentNameTargets\'";
"checkBuildTargets" -> "die\'";
"checkBuildTargets" -> "f";
"checkBuildTargets" -> "getComponent";
"checkBuildTargets" -> "prettyShow";
"checkBuildTargets" -> "showComponentName";
"checkBuildTargets" -> "warn";
"checkCCOptions" -> "ccOptions";
"checkCCOptions" -> "checkCLikeOptions";
"checkCLikeOptions" -> "allBuildInfo";
"checkCLikeOptions" -> "check";
"checkCLikeOptions" -> "checkAlternatives";
"checkCLikeOptions" -> "ldOptions";
"checkCPPOptions" -> "allBuildInfo";
"checkCPPOptions" -> "checkAlternatives";
"checkCabalFileBOM" -> "check";
"checkCabalFileBOM" -> "findPackageDesc";
"checkCabalFileName" -> "findPackageDesc";
"checkCabalFileName" -> "packageName";
"checkCabalFileName" -> "unPackageName";
"checkCabalVersion" -> "allBuildInfo";
"checkCabalVersion" -> "allExtensions";
"checkCabalVersion" -> "allLibraries";
"checkCabalVersion" -> "autogenPathsModuleName";
"checkCabalVersion" -> "buildType";
"checkCabalVersion" -> "check";
"checkCabalVersion" -> "commaSep";
"checkCabalVersion" -> "explicitLibModules";
"checkCabalVersion" -> "extraDocFiles";
"checkCabalVersion" -> "library";
"checkCabalVersion" -> "map";
"checkCabalVersion" -> "null";
"checkCabalVersion" -> "prettyShow";
"checkCabalVersion" -> "quote";
"checkCabalVersion" -> "setupBuildInfo";
"checkCabalVersion" -> "sourceRepos";
"checkCabalVersion" -> "specVersion";
"checkCabalVersion" -> "subLibraries";
"checkCabalVersion" -> "testSuites";
"checkCompilerProblems" -> "allLibraries";
"checkCompilerProblems" -> "backpackSupported";
"checkCompilerProblems" -> "die\'";
"checkCompilerProblems" -> "enabledBuildInfos";
"checkCompilerProblems" -> "isDefaultIncludeRenaming";
"checkCompilerProblems" -> "reexportedModulesSupported";
"checkCompilerProblems" -> "renamingPackageFlagsSupported";
"checkConditionals" -> "check";
"checkConditionals" -> "commaSep";
"checkConditionals" -> "condBenchmarks";
"checkConditionals" -> "condExecutables";
"checkConditionals" -> "condForeignLibs";
"checkConditionals" -> "condLibrary";
"checkConditionals" -> "condSubLibraries";
"checkConditionals" -> "condTestSuites";
"checkConditionals" -> "map";
"checkConditionals" -> "null";
"checkConditionals" -> "quote";
"checkConfigureExists" -> "buildType";
"checkConfigureExists" -> "check";
"checkConfiguredPackage" -> "checkAllGhcOptions";
"checkConfiguredPackage" -> "checkCCOptions";
"checkConfiguredPackage" -> "checkCPPOptions";
"checkConfiguredPackage" -> "checkCabalVersion";
"checkConfiguredPackage" -> "checkCxxOptions";
"checkConfiguredPackage" -> "checkFields";
"checkConfiguredPackage" -> "checkLicense";
"checkConfiguredPackage" -> "checkPaths";
"checkConfiguredPackage" -> "checkSanity";
"checkConfiguredPackage" -> "checkSourceRepos";
"checkCxxOptions" -> "checkCLikeOptions";
"checkCxxOptions" -> "cxxOptions";
"checkDeprecatedFlags" -> "fromFlag";
"checkDeprecatedFlags" -> "warn";
"checkDevelopmentOnlyFlags" -> "benchmarkBuildInfo";
"checkDevelopmentOnlyFlags" -> "checkDevelopmentOnlyFlagsBuildInfo";
"checkDevelopmentOnlyFlags" -> "condBenchmarks";
"checkDevelopmentOnlyFlags" -> "condExecutables";
"checkDevelopmentOnlyFlags" -> "condLibrary";
"checkDevelopmentOnlyFlags" -> "condSubLibraries";
"checkDevelopmentOnlyFlags" -> "condTestSuites";
"checkDevelopmentOnlyFlags" -> "flagDefault";
"checkDevelopmentOnlyFlags" -> "flagManual";
"checkDevelopmentOnlyFlags" -> "flagName";
"checkDevelopmentOnlyFlags" -> "genPackageFlags";
"checkDevelopmentOnlyFlags" -> "libBuildInfo";
"checkDevelopmentOnlyFlags" -> "testBuildInfo";
"checkDevelopmentOnlyFlagsBuildInfo" -> "checkDevelopmentOnlyFlagsOptions";
"checkDevelopmentOnlyFlagsBuildInfo" -> "hcOptions";
"checkDevelopmentOnlyFlagsBuildInfo" -> "hcProfOptions";
"checkDevelopmentOnlyFlagsBuildInfo" -> "hcSharedOptions";
"checkDevelopmentOnlyFlagsOptions" -> "check";
"checkDevelopmentOnlyFlagsOptions" -> "fieldName";
"checkExactConfiguration" -> "allFlags";
"checkExactConfiguration" -> "die\'";
"checkExactConfiguration" -> "flagName";
"checkExactConfiguration" -> "fromFlagOrDefault";
"checkExactConfiguration" -> "genPackageFlags";
"checkExactConfiguration" -> "intercalate";
"checkExactConfiguration" -> "map";
"checkExactConfiguration" -> "null";
"checkExactConfiguration" -> "unFlagAssignment";
"checkExecutable" -> "check";
"checkExecutable" -> "checkSpecVersion";
"checkExecutable" -> "commaSep";
"checkExecutable" -> "dups";
"checkExecutable" -> "exeModules";
"checkExecutable" -> "exeModulesAutogen";
"checkExecutable" -> "exeName";
"checkExecutable" -> "fileExtensionSupportedLanguage";
"checkExecutable" -> "map";
"checkExecutable" -> "modulePath";
"checkExecutable" -> "null";
"checkExecutable" -> "prettyShow";
"checkExecutable" -> "view";
"checkFields" -> "allBuildInfo";
"checkFields" -> "allExtensions";
"checkFields" -> "allLanguages";
"checkFields" -> "allLibraries";
"checkFields" -> "buildType";
"checkFields" -> "buildTypeRaw";
"checkFields" -> "category";
"checkFields" -> "check";
"checkFields" -> "commaSep";
"checkFields" -> "deprecatedExtensions";
"checkFields" -> "description";
"checkFields" -> "exeName";
"checkFields" -> "executables";
"checkFields" -> "find";
"checkFields" -> "getAllToolDependencies";
"checkFields" -> "isAnyVersion";
"checkFields" -> "isInternal";
"checkFields" -> "isNoVersion";
"checkFields" -> "knownLanguages";
"checkFields" -> "libName";
"checkFields" -> "libraryNameString";
"checkFields" -> "mainLibSet";
"checkFields" -> "maintainer";
"checkFields" -> "map";
"checkFields" -> "mkPackageName";
"checkFields" -> "null";
"checkFields" -> "packageName";
"checkFields" -> "packageVersion";
"checkFields" -> "prettyShow";
"checkFields" -> "quote";
"checkFields" -> "setupBuildInfo";
"checkFields" -> "specVersion";
"checkFields" -> "synopsis";
"checkFields" -> "testedWith";
"checkFields" -> "unqualComponentNameToPackageName";
"checkFields" -> "withinRange";
"checkFlagNames" -> "flagName";
"checkFlagNames" -> "genPackageFlags";
"checkFlagNames" -> "isAscii";
"checkFlagNames" -> "null";
"checkFlagNames" -> "unFlagName";
"checkForUndefinedCustomSetup" -> "buildType";
"checkForUndefinedCustomSetup" -> "packageDescription";
"checkForUndefinedCustomSetup" -> "parseFailure";
"checkForUndefinedCustomSetup" -> "setupBuildInfo";
"checkForUndefinedCustomSetup" -> "specVersion";
"checkForUndefinedCustomSetup" -> "zeroPos";
"checkForUndefinedFlags" -> "f";
"checkForUndefinedFlags" -> "flagName";
"checkForUndefinedFlags" -> "freeVars";
"checkForUndefinedFlags" -> "getting";
"checkForUndefinedFlags" -> "intercalate";
"checkForUndefinedFlags" -> "parseFailure";
"checkForUndefinedFlags" -> "toSetOf";
"checkForUndefinedFlags" -> "unFlagName";
"checkForUndefinedFlags" -> "zeroPos";
"checkForeignDeps" -> "catchExit";
"checkForeignDeps" -> "catchIO";
"checkForeignDeps" -> "ccOptions";
"checkForeignDeps" -> "die\'";
"checkForeignDeps" -> "enabledBuildInfos";
"checkForeignDeps" -> "f";
"checkForeignDeps" -> "gccProgram";
"checkForeignDeps" -> "getDbProgramOutput";
"checkForeignDeps" -> "includeDirs";
"checkForeignDeps" -> "includes";
"checkForeignDeps" -> "intercalate";
"checkForeignDeps" -> "ldOptions";
"checkForeignDeps" -> "length";
"checkForeignDeps" -> "library";
"checkForeignDeps" -> "listDirectory";
"checkForeignDeps" -> "lookupProgram";
"checkForeignDeps" -> "null";
"checkForeignDeps" -> "ordNub";
"checkForeignDeps" -> "platformDefines";
"checkForeignDeps" -> "safeLast";
"checkForeignDeps" -> "warn";
"checkForeignDeps" -> "withTempFile";
"checkForeignLibSupported" -> "allFlags";
"checkForeignLibSupported" -> "compilerFlavor";
"checkForeignLibSupported" -> "compilerVersion";
"checkForeignLibSupported" -> "f";
"checkForeignLibSupported" -> "flagElim";
"checkForeignLibSupported" -> "flagToList";
"checkForeignLibSupported" -> "flagToMaybe";
"checkForeignLibSupported" -> "foreignLibModDefFile";
"checkForeignLibSupported" -> "foreignLibOptions";
"checkForeignLibSupported" -> "foreignLibType";
"checkForeignLibSupported" -> "foreignLibVersionInfo";
"checkForeignLibSupported" -> "foreignLibVersionLinux";
"checkForeignLibSupported" -> "fromFlag";
"checkForeignLibSupported" -> "fromFlagOrDefault";
"checkForeignLibSupported" -> "map";
"checkForeignLibSupported" -> "maybeToFlag";
"checkForeignLibSupported" -> "mkVersion";
"checkForeignLibSupported" -> "null";
"checkForeignLibSupported" -> "toFlag";
"checkForeignLibSupported" -> "x";
"checkGetSum" -> "alphaNum";
"checkGetSum" -> "digit";
"checkGetSum" -> "f";
"checkGetSum" -> "hexDigit";
"checkGetSum" -> "integral";
"checkGetSum" -> "letter";
"checkGetSum" -> "lower";
"checkGetSum" -> "munch";
"checkGetSum" -> "munch1";
"checkGetSum" -> "newline";
"checkGetSum" -> "noneOf";
"checkGetSum" -> "octDigit";
"checkGetSum" -> "oneOf";
"checkGetSum" -> "s";
"checkGetSum" -> "satisfyRange";
"checkGetSum" -> "signedIntegral";
"checkGetSum" -> "size";
"checkGetSum" -> "skipSpaces1";
"checkGetSum" -> "space";
"checkGetSum" -> "spaces";
"checkGetSum" -> "tab";
"checkGetSum" -> "upper";
"checkGetSum" -> "x";
"checkGhcOptions" -> "allBuildInfo";
"checkGhcOptions" -> "allLibraries";
"checkGhcOptions" -> "benchmarkBuildInfo";
"checkGhcOptions" -> "benchmarks";
"checkGhcOptions" -> "check";
"checkGhcOptions" -> "checkAlternatives";
"checkGhcOptions" -> "fieldName";
"checkGhcOptions" -> "libBuildInfo";
"checkGhcOptions" -> "prettyShow";
"checkGhcOptions" -> "safeTail";
"checkGhcOptions" -> "testBuildInfo";
"checkGhcOptions" -> "testSuites";
"checkGlobFiles" -> "dataDir";
"checkGlobFiles" -> "dataFiles";
"checkGlobFiles" -> "extraDocFiles";
"checkGlobFiles" -> "extraSrcFiles";
"checkGlobFiles" -> "null";
"checkGlobFiles" -> "parseFileGlob";
"checkGlobFiles" -> "runDirFileGlob";
"checkGlobFiles" -> "specVersion";
"checkInvariant" -> "invariant";
"checkInvariant" -> "invariantVersionIntervals";
"checkLeadingWhitespace" -> "addWarning";
"checkLeadingWhitespace" -> "checkWhitespace";
"checkLibrary" -> "allExplicitIncludes";
"checkLibrary" -> "check";
"checkLibrary" -> "commaSep";
"checkLibrary" -> "dups";
"checkLibrary" -> "explicitLibModules";
"checkLibrary" -> "libModulesAutogen";
"checkLibrary" -> "libName";
"checkLibrary" -> "map";
"checkLibrary" -> "null";
"checkLibrary" -> "prettyShow";
"checkLibrary" -> "reexportedModules";
"checkLibrary" -> "showLibraryName";
"checkLibrary" -> "signatures";
"checkLibrary" -> "specVersion";
"checkLibrary" -> "view";
"checkLicense" -> "checkNewLicense";
"checkLicense" -> "checkOldLicense";
"checkLicense" -> "l";
"checkLicense" -> "licenseRaw";
"checkLicensesExist" -> "getSymbolicPath";
"checkLicensesExist" -> "length";
"checkLicensesExist" -> "licenseFiles";
"checkLicensesExist" -> "quote";
"checkLocalPathsExist" -> "allBuildInfo";
"checkLocalPathsExist" -> "getSymbolicPath";
"checkLocalPathsExist" -> "includeDirs";
"checkLocalPathsExist" -> "isRelativeOnAnyPlatform";
"checkLocalPathsExist" -> "quote";
"checkMissingVcsInfo" -> "knownRepoTypes";
"checkMissingVcsInfo" -> "null";
"checkMissingVcsInfo" -> "repoTypeDirname";
"checkMissingVcsInfo" -> "sourceRepos";
"checkNeedsRecompilation" -> "getObjectFileName";
"checkNeedsRecompilation" -> "moreRecentFile";
"checkNewLicense" -> "check";
"checkNotDoubleDash" -> "s";
"checkOldLicense" -> "check";
"checkOldLicense" -> "commaSep";
"checkOldLicense" -> "knownLicenses";
"checkOldLicense" -> "l";
"checkOldLicense" -> "license";
"checkOldLicense" -> "licenseFiles";
"checkOldLicense" -> "map";
"checkOldLicense" -> "null";
"checkOldLicense" -> "prettyShow";
"checkOldLicense" -> "quote";
"checkOldLicense" -> "specVersion";
"checkPackage" -> "checkConditionals";
"checkPackage" -> "checkConfiguredPackage";
"checkPackage" -> "checkDevelopmentOnlyFlags";
"checkPackage" -> "checkFlagNames";
"checkPackage" -> "checkPackageVersions";
"checkPackage" -> "checkPathsModuleExtensions";
"checkPackage" -> "checkUnicodeXFields";
"checkPackage" -> "checkUnusedFlags";
"checkPackage" -> "flattenPackageDescription";
"checkPackageContent" -> "checkCabalFileBOM";
"checkPackageContent" -> "checkCabalFileName";
"checkPackageContent" -> "checkConfigureExists";
"checkPackageContent" -> "checkLicensesExist";
"checkPackageContent" -> "checkLocalPathsExist";
"checkPackageContent" -> "checkMissingVcsInfo";
"checkPackageContent" -> "checkSetupExists";
"checkPackageDbEnvVar" -> "callStack";
"checkPackageDbEnvVar" -> "catchIO";
"checkPackageDbEnvVar" -> "die\'";
"checkPackageDbStack" -> "checkPackageDbStackPost76";
"checkPackageDbStack" -> "checkPackageDbStackPre76";
"checkPackageDbStack" -> "compilerVersion";
"checkPackageDbStack" -> "die\'";
"checkPackageDbStack" -> "ghcVersionImplInfo";
"checkPackageDbStackPost76" -> "die\'";
"checkPackageDbStackPre76" -> "die\'";
"checkPackageFileNames" -> "checkTarPath";
"checkPackageFileNames" -> "checkWindowsPath";
"checkPackageFiles" -> "checkPackageContent";
"checkPackageFiles" -> "checkPackageFilesPreDistribution";
"checkPackageFilesPreDistribution" -> "checkGlobFiles";
"checkPackageProblems" -> "checkPackage";
"checkPackageProblems" -> "checkPackageFiles";
"checkPackageProblems" -> "die\'";
"checkPackageProblems" -> "intercalate";
"checkPackageProblems" -> "null";
"checkPackageProblems" -> "warn";
"checkPackageVersions" -> "allBuildDepends";
"checkPackageVersions" -> "anyVersion";
"checkPackageVersions" -> "asVersionIntervals";
"checkPackageVersions" -> "buildCompilerFlavor";
"checkPackageVersions" -> "buildPlatform";
"checkPackageVersions" -> "check";
"checkPackageVersions" -> "defaultComponentRequestedSpec";
"checkPackageVersions" -> "finalizePD";
"checkPackageVersions" -> "intersectVersionRanges";
"checkPackageVersions" -> "mkPackageName";
"checkPackageVersions" -> "noVersion";
"checkPackageVersions" -> "null";
"checkPackageVersions" -> "nullVersion";
"checkPackageVersions" -> "unknownCompilerInfo";
"checkPaths" -> "allBuildInfo";
"checkPaths" -> "dataDir";
"checkPaths" -> "dataFiles";
"checkPaths" -> "explainGlobSyntaxError";
"checkPaths" -> "extraDocFiles";
"checkPaths" -> "extraSrcFiles";
"checkPaths" -> "extraTmpFiles";
"checkPaths" -> "getSymbolicPath";
"checkPaths" -> "includeDirs";
"checkPaths" -> "includes";
"checkPaths" -> "isAbsoluteOnAnyPlatform";
"checkPaths" -> "isGoodRelativeDirectoryPath";
"checkPaths" -> "isGoodRelativeFilePath";
"checkPaths" -> "isGoodRelativeGlob";
"checkPaths" -> "licenseFiles";
"checkPaths" -> "lowercase";
"checkPaths" -> "map";
"checkPaths" -> "parseFileGlob";
"checkPaths" -> "perCompilerFlavorToList";
"checkPaths" -> "quote";
"checkPaths" -> "specVersion";
"checkPathsModuleExtensions" -> "allBuildInfo";
"checkPathsModuleExtensions" -> "allLibraries";
"checkPathsModuleExtensions" -> "autogenPathsModuleName";
"checkPathsModuleExtensions" -> "exposedModules";
"checkPathsModuleExtensions" -> "l";
"checkPathsModuleExtensions" -> "specVersion";
"checkPersistBuildConfigOutdated" -> "localBuildInfoFile";
"checkPersistBuildConfigOutdated" -> "moreRecentFile";
"checkPosition" -> "s";
"checkPosition" -> "traceShow";
"checkRelocatable" -> "absoluteInstallDirs";
"checkRelocatable" -> "compilerFlavor";
"checkRelocatable" -> "die\'";
"checkRelocatable" -> "l";
"checkRelocatable" -> "prettyShow";
"checkRelocatable" -> "registrationPackageDB";
"checkSanity" -> "allLibraries";
"checkSanity" -> "benchmarkName";
"checkSanity" -> "benchmarks";
"checkSanity" -> "check";
"checkSanity" -> "checkBenchmark";
"checkSanity" -> "checkExecutable";
"checkSanity" -> "checkLibrary";
"checkSanity" -> "checkTestSuite";
"checkSanity" -> "commaSep";
"checkSanity" -> "dups";
"checkSanity" -> "exeName";
"checkSanity" -> "executables";
"checkSanity" -> "foreignLibs";
"checkSanity" -> "libName";
"checkSanity" -> "libraryNameString";
"checkSanity" -> "map";
"checkSanity" -> "null";
"checkSanity" -> "nullVersion";
"checkSanity" -> "packageName";
"checkSanity" -> "packageVersion";
"checkSanity" -> "prettyShow";
"checkSanity" -> "subLibraries";
"checkSanity" -> "testName";
"checkSanity" -> "testSuites";
"checkSanity" -> "unPackageName";
"checkSanity" -> "unUnqualComponentName";
"checkSetupExists" -> "buildType";
"checkSetupExists" -> "check";
"checkSourceRepos" -> "check";
"checkSourceRepos" -> "isAbsoluteOnAnyPlatform";
"checkSourceRepos" -> "isGoodRelativeDirectoryPath";
"checkSourceRepos" -> "quote";
"checkSourceRepos" -> "repoKind";
"checkSourceRepos" -> "repoLocation";
"checkSourceRepos" -> "repoModule";
"checkSourceRepos" -> "repoSubdir";
"checkSourceRepos" -> "repoTag";
"checkSourceRepos" -> "repoType";
"checkSourceRepos" -> "sourceRepos";
"checkSpecVersion" -> "check";
"checkSpecVersion" -> "specVersion";
"checkTarPath" -> "length";
"checkTarPath" -> "pack\'";
"checkTarPath" -> "safeInit";
"checkTargetExistsAsFile" -> "f";
"checkTestSuite" -> "check";
"checkTestSuite" -> "checkSpecVersion";
"checkTestSuite" -> "commaSep";
"checkTestSuite" -> "dups";
"checkTestSuite" -> "f";
"checkTestSuite" -> "fileExtensionSupportedLanguage";
"checkTestSuite" -> "knownTestTypes";
"checkTestSuite" -> "map";
"checkTestSuite" -> "null";
"checkTestSuite" -> "prettyShow";
"checkTestSuite" -> "quote";
"checkTestSuite" -> "test";
"checkTestSuite" -> "testInterface";
"checkTestSuite" -> "testModules";
"checkTestSuite" -> "testModulesAutogen";
"checkTestSuite" -> "testName";
"checkTestSuite" -> "view";
"checkUnicodeXFields" -> "isAscii";
"checkUnicodeXFields" -> "null";
"checkUnicodeXFields" -> "toDListOf";
"checkUnusedFlags" -> "_2";
"checkUnusedFlags" -> "commaSep";
"checkUnusedFlags" -> "map";
"checkUnusedFlags" -> "s";
"checkUnusedFlags" -> "toSetOf";
"checkUnusedFlags" -> "traverseCondTreeV";
"checkUnusedFlags" -> "unFlagName";
"checkWhitespace" -> "addWarning";
"checkWindowsPath" -> "check";
"checkWindowsPath" -> "quote";
"choiceOpt" -> "set";
"choiceOptFromEnum" -> "choiceOpt";
"choiceOptFromEnum" -> "f";
"choiceOptFromEnum" -> "map";
"choiceOptFromEnum" -> "x";
"ci_cname" -> "componentIsIndefinite";
"ci_cname" -> "maybeComponentInstantiatedWith";
"ci_msg" -> "ci_cname";
"ci_msg" -> "ci_pkgid";
"ci_msg" -> "colon";
"ci_msg" -> "pkgName";
"cinfoKind" -> "componentKind";
"classify" -> "s";
"classify" -> "safeInit";
"classify" -> "safeLast";
"classify" -> "safeTail";
"classifyArch" -> "archAliases";
"classifyArch" -> "knownArches";
"classifyArch" -> "lookup";
"classifyArch" -> "lowercase";
"classifyArch" -> "prettyShow";
"classifyArch" -> "s";
"classifyCompilerFlavor" -> "knownCompilerFlavors";
"classifyCompilerFlavor" -> "lookup";
"classifyCompilerFlavor" -> "lowercase";
"classifyCompilerFlavor" -> "prettyShow";
"classifyCompilerFlavor" -> "s";
"classifyExtension" -> "classifyKnownExtension";
"classifyKnownExtension" -> "knownExtensionTable";
"classifyKnownExtension" -> "lookup";
"classifyLanguage" -> "knownLanguages";
"classifyLanguage" -> "lookup";
"classifyOS" -> "knownOSs";
"classifyOS" -> "lookup";
"classifyOS" -> "lowercase";
"classifyOS" -> "osAliases";
"classifyOS" -> "prettyShow";
"classifyOS" -> "s";
"classifyRepoKind" -> "classifyRepoType";
"classifyRepoKind" -> "isIdent";
"classifyRepoKind" -> "lowercase";
"classifyRepoType" -> "knownRepoTypeMap";
"classifyRepoType" -> "lowercase";
"classifyRepoType" -> "s";
"clean" -> "chattyTry";
"clean" -> "defaultDistPref";
"clean" -> "extraTmpFiles";
"clean" -> "fromFlag";
"clean" -> "fromFlagOrDefault";
"clean" -> "maybeGetPersistBuildConfig";
"clean" -> "notice";
"clean" -> "writePersistBuildConfig";
"cleanAction" -> "confPkgDescr";
"cleanAction" -> "findDistPrefOrDefault";
"cleanAction" -> "flattenPackageDescription";
"cleanAction" -> "fromFlag";
"cleanAction" -> "maybeToFlag";
"cleanAction" -> "noExtraFlags";
"cleanAction" -> "rawSystemExit";
"cleanAction" -> "toFlag";
"cleanAction" -> "tryGetBuildConfig";
"cleanAction" -> "updatePackageDescription";
"cleanCommand" -> "defaultCleanFlags";
"cleanCommand" -> "option";
"cleanCommand" -> "optionDistPref";
"cleanCommand" -> "optionVerbosity";
"cleanCommand" -> "trueArg";
"clearMarkers" -> "s";
"cloneLens" -> "ala";
"cloneLens" -> "alaf";
"cloneLens" -> "f";
"cloneLens" -> "l";
"cloneLens" -> "pack\'";
"cloneLens" -> "pretextSell";
"cloneLens" -> "s";
"cloneLens" -> "unpack\'";
"closure" -> "decodeVertexForest";
"colon" -> "tokOpenBrace";
"combineFlagValues" -> "combineFlagValues";
"combineLibraryName" -> "l";
"combineObjectFiles" -> "arResponseFilesSupported";
"combineObjectFiles" -> "defaultTempFileOptions";
"combineObjectFiles" -> "fromFlagOrDefault";
"combineObjectFiles" -> "multiStageProgramInvocation";
"combineObjectFiles" -> "programInvocation";
"combineObjectFiles" -> "runProgramInvocation";
"combineObjectFiles" -> "withResponseFile";
"combinePathTemplate" -> "pathSeparator";
"combinedConstraints" -> "null";
"combinedConstraints" -> "render";
"combinedConstraints" -> "thisPackageVersionConstraint";
"commaSep" -> "intercalate";
"commandAddAction" -> "commandParseArgs";
"commandFromSpec" -> "absolutePackageDBPath";
"commandFromSpec" -> "absolutePackageDBPaths";
"commandFromSpec" -> "arResponseFilesSupported";
"commandFromSpec" -> "backpackSupported";
"commandFromSpec" -> "compilerCompatFlavor";
"commandFromSpec" -> "compilerCompatVersion";
"commandFromSpec" -> "compilerFlavor";
"commandFromSpec" -> "compilerInfo";
"commandFromSpec" -> "compilerVersion";
"commandFromSpec" -> "coverageSupported";
"commandFromSpec" -> "extensionsToFlags";
"commandFromSpec" -> "flagToDebugInfoLevel";
"commandFromSpec" -> "flagToOptimisationLevel";
"commandFromSpec" -> "flagToProfDetailLevel";
"commandFromSpec" -> "knownProfDetailLevels";
"commandFromSpec" -> "languageToFlags";
"commandFromSpec" -> "libraryDynDirSupported";
"commandFromSpec" -> "libraryVisibilitySupported";
"commandFromSpec" -> "packageKeySupported";
"commandFromSpec" -> "parmakeSupported";
"commandFromSpec" -> "profilingSupported";
"commandFromSpec" -> "reexportedModulesSupported";
"commandFromSpec" -> "registrationPackageDB";
"commandFromSpec" -> "renamingPackageFlagsSupported";
"commandFromSpec" -> "showCompilerId";
"commandFromSpec" -> "showCompilerIdWithAbi";
"commandFromSpec" -> "showProfDetailLevel";
"commandFromSpec" -> "unifiedIPIDRequired";
"commandFromSpec" -> "unitIdSupported";
"commandFromSpec" -> "unsupportedExtensions";
"commandFromSpec" -> "unsupportedLanguages";
"commandGetOpts" -> "viewAsGetOpt";
"commandHelp" -> "addCommonFlags";
"commandHelp" -> "commandGetOpts";
"commandListOptions" -> "addCommonFlags";
"commandListOptions" -> "commandGetOpts";
"commandParseArgs" -> "addCommonFlags";
"commandParseArgs" -> "commandGetOpts";
"commandParseArgs" -> "commandHelp";
"commandParseArgs" -> "commandListOptions";
"commandParseArgs" -> "f";
"commandParseArgs" -> "null";
"commandShowOptions" -> "getCurrentChoice";
"commandShowOptions" -> "s";
"commandShowOptions" -> "x";
"commandsRun" -> "commandAddAction";
"commandsRun" -> "commandHelp";
"commandsRun" -> "commandParseArgs";
"commandsRun" -> "globalCommand";
"commandsRun" -> "helpCommandUI";
"commandsRun" -> "list";
"commonFlags" -> "list";
"compToExe" -> "bench";
"compToExe" -> "benchmarkBuildInfo";
"compToExe" -> "benchmarkInterface";
"compToExe" -> "benchmarkName";
"compToExe" -> "exeName";
"compToExe" -> "exeScope";
"compToExe" -> "f";
"compToExe" -> "modulePath";
"compToExe" -> "test";
"compToExe" -> "testBuildInfo";
"compToExe" -> "testInterface";
"compToExe" -> "testName";
"compareInt" -> "length";
"compatPackageKey" -> "f";
"compatPackageKey" -> "s";
"compatPackageKey" -> "x";
"compilerCompatFlavor" -> "compilerFlavor";
"compilerCompatVersion" -> "compilerFlavor";
"compilerCompatVersion" -> "compilerVersion";
"compilerFlavor" -> "f";
"compilerInfo" -> "map";
"compilerTemplateEnv" -> "prettyShow";
"componentAsmGhcOptions" -> "autogenComponentModulesDir";
"componentAsmGhcOptions" -> "autogenPackageModulesDir";
"componentAsmGhcOptions" -> "includeDirs";
"componentAsmGhcOptions" -> "mkGhcOptPackages";
"componentAsmGhcOptions" -> "normal";
"componentAsmGhcOptions" -> "toFlag";
"componentAsmGhcOptions" -> "toNubListR";
"componentBuildDir" -> "prettyShow";
"componentBuildDir" -> "s";
"componentBuildDir" -> "unUnqualComponentName";
"componentBuildInfo" -> "allLibraries";
"componentBuildInfo" -> "benchmarkBuildInfo";
"componentBuildInfo" -> "benchmarkName";
"componentBuildInfo" -> "benchmarks";
"componentBuildInfo" -> "exeBuildInfo";
"componentBuildInfo" -> "exeName";
"componentBuildInfo" -> "executables";
"componentBuildInfo" -> "f";
"componentBuildInfo" -> "foldComponent";
"componentBuildInfo" -> "foreignLibBuildInfo";
"componentBuildInfo" -> "foreignLibName";
"componentBuildInfo" -> "foreignLibs";
"componentBuildInfo" -> "intercalate";
"componentBuildInfo" -> "libBuildInfo";
"componentBuildInfo" -> "libName";
"componentBuildInfo" -> "mkPackageName";
"componentBuildInfo" -> "null";
"componentBuildInfo" -> "nullVersion";
"componentBuildInfo" -> "pkgName";
"componentBuildInfo" -> "pkgVersion";
"componentBuildInfo" -> "s";
"componentBuildInfo" -> "simpleParsec";
"componentBuildInfo" -> "testBuildInfo";
"componentBuildInfo" -> "testName";
"componentBuildInfo" -> "testSuites";
"componentBuildInfo" -> "toList";
"componentBuildInfo" -> "view";
"componentBuildable" -> "componentBuildInfo";
"componentCcGhcOptions" -> "autogenComponentModulesDir";
"componentCcGhcOptions" -> "autogenPackageModulesDir";
"componentCcGhcOptions" -> "ccOptions";
"componentCcGhcOptions" -> "getImplInfo";
"componentCcGhcOptions" -> "includeDirs";
"componentCcGhcOptions" -> "mkGhcOptPackages";
"componentCcGhcOptions" -> "normal";
"componentCcGhcOptions" -> "toFlag";
"componentCcGhcOptions" -> "toNubListR";
"componentCmmGhcOptions" -> "autogenComponentModulesDir";
"componentCmmGhcOptions" -> "autogenPackageModulesDir";
"componentCmmGhcOptions" -> "cppHeaderName";
"componentCmmGhcOptions" -> "includeDirs";
"componentCmmGhcOptions" -> "mkGhcOptPackages";
"componentCmmGhcOptions" -> "normal";
"componentCmmGhcOptions" -> "toFlag";
"componentCmmGhcOptions" -> "toGhcOptimisation";
"componentCmmGhcOptions" -> "toNubListR";
"componentCxxGhcOptions" -> "autogenComponentModulesDir";
"componentCxxGhcOptions" -> "autogenPackageModulesDir";
"componentCxxGhcOptions" -> "cxxOptions";
"componentCxxGhcOptions" -> "includeDirs";
"componentCxxGhcOptions" -> "mkGhcOptPackages";
"componentCxxGhcOptions" -> "normal";
"componentCxxGhcOptions" -> "toFlag";
"componentCxxGhcOptions" -> "toNubListR";
"componentCycleMsg" -> "configureComponentLocalBuildInfos";
"componentCycleMsg" -> "emptyInstalledPackageInfo";
"componentCycleMsg" -> "intercalate";
"componentCycleMsg" -> "safeHead";
"componentCycleMsg" -> "showComponentName";
"componentDisabledReason" -> "componentBuildable";
"componentDisabledReason" -> "componentName";
"componentDisabledReason" -> "componentNameNotRequestedReason";
"componentEnabled" -> "componentDisabledReason";
"componentGhcOptions" -> "autogenComponentModulesDir";
"componentGhcOptions" -> "autogenPackageModulesDir";
"componentGhcOptions" -> "compilerFlavor";
"componentGhcOptions" -> "componentBuildDir";
"componentGhcOptions" -> "componentIsIndefinite";
"componentGhcOptions" -> "cppHeaderName";
"componentGhcOptions" -> "f";
"componentGhcOptions" -> "getImplInfo";
"componentGhcOptions" -> "getSymbolicPath";
"componentGhcOptions" -> "hcOptions";
"componentGhcOptions" -> "includeDirs";
"componentGhcOptions" -> "includes";
"componentGhcOptions" -> "map";
"componentGhcOptions" -> "mkGhcOptPackages";
"componentGhcOptions" -> "normal";
"componentGhcOptions" -> "null";
"componentGhcOptions" -> "toFlag";
"componentGhcOptions" -> "toGhcOptimisation";
"componentGhcOptions" -> "toNubListR";
"componentGhcOptions" -> "unitIdTarget\'";
"componentGhcOptions" -> "usedExtensions";
"componentHsFiles" -> "benchmarkInterface";
"componentHsFiles" -> "modulePath";
"componentHsFiles" -> "testInterface";
"componentInitialBuildSteps" -> "componentBuildDir";
"componentInitialBuildSteps" -> "createDirectoryIfMissingVerbose";
"componentInitialBuildSteps" -> "writeAutogenFiles";
"componentModules" -> "allLibraries";
"componentModules" -> "bench";
"componentModules" -> "benchmarkModules";
"componentModules" -> "benchmarkName";
"componentModules" -> "benchmarks";
"componentModules" -> "exeModules";
"componentModules" -> "exeName";
"componentModules" -> "executables";
"componentModules" -> "explicitLibModules";
"componentModules" -> "f";
"componentModules" -> "foreignLibModules";
"componentModules" -> "foreignLibName";
"componentModules" -> "foreignLibs";
"componentModules" -> "getting";
"componentModules" -> "libName";
"componentModules" -> "s";
"componentModules" -> "test";
"componentModules" -> "testModules";
"componentModules" -> "testName";
"componentModules" -> "testSuites";
"componentModules" -> "view";
"componentName" -> "benchmarkName";
"componentName" -> "exeName";
"componentName" -> "foldComponent";
"componentName" -> "foreignLibName";
"componentName" -> "libName";
"componentName" -> "testName";
"componentNameNotRequestedReason" -> "condIfThen";
"componentNameNotRequestedReason" -> "condIfThenElse";
"componentNameNotRequestedReason" -> "extractCondition";
"componentNameNotRequestedReason" -> "f";
"componentNameNotRequestedReason" -> "ignoreConditions";
"componentNameNotRequestedReason" -> "mapCondTree";
"componentNameNotRequestedReason" -> "mapTreeConds";
"componentNameNotRequestedReason" -> "mapTreeConstrs";
"componentNameNotRequestedReason" -> "mapTreeData";
"componentNameNotRequestedReason" -> "prettyShow";
"componentNameNotRequestedReason" -> "simplifyCondTree";
"componentNameNotRequestedReason" -> "traverseCondBranchC";
"componentNameNotRequestedReason" -> "traverseCondBranchV";
"componentNameNotRequestedReason" -> "traverseCondTreeC";
"componentNameNotRequestedReason" -> "traverseCondTreeV";
"componentNameRequested" -> "componentNameNotRequestedReason";
"componentNameStanza" -> "libraryNameStanza";
"componentNameStanza" -> "prettyShow";
"componentNameString" -> "componentDisabledReason";
"componentNameString" -> "componentEnabled";
"componentNameString" -> "componentNameRequested";
"componentNameString" -> "defaultComponentRequestedSpec";
"componentNameString" -> "libraryNameString";
"componentNameTargets" -> "componentNameTargets\'";
"componentNameTargets\'" -> "map";
"componentNameTargets\'" -> "mkTargetInfo";
"componentStringName" -> "packageName";
"componentStringName" -> "prettyShow";
"componentStringName" -> "unUnqualComponentName";
"components" -> "unModuleName";
"componentsGraphToList" -> "map";
"computeCompatPackageId" -> "decodeCompatPackageName";
"computeCompatPackageId" -> "decodeCompatPackageName\'";
"computeCompatPackageId" -> "encodeCompatPackageName";
"computeCompatPackageId" -> "encodeCompatPackageName\'";
"computeCompatPackageId" -> "parsecUnqualComponentName";
"computeCompatPackageKey" -> "dispLinkedComponent";
"computeCompatPackageKey" -> "extendLinkedComponentMap";
"computeCompatPackageKey" -> "hashToBase62";
"computeCompatPackageKey" -> "lc_cid";
"computeCompatPackageKey" -> "lc_insts";
"computeCompatPackageKey" -> "lc_pkgid";
"computeCompatPackageKey" -> "lc_uid";
"computeCompatPackageKey" -> "length";
"computeCompatPackageKey" -> "packageKeySupported";
"computeCompatPackageKey" -> "prettyShow";
"computeCompatPackageKey" -> "simpleParsec";
"computeCompatPackageKey" -> "toLinkedComponent";
"computeCompatPackageKey" -> "toLinkedComponents";
"computeCompatPackageKey" -> "unUnitId";
"computeCompatPackageKey" -> "unifiedIPIDRequired";
"computeCompatPackageKey" -> "unitIdSupported";
"computeComponentId" -> "componentNameString";
"computeComponentId" -> "fromPathTemplate";
"computeComponentId" -> "hashToBase62";
"computeComponentId" -> "mkComponentId";
"computeComponentId" -> "mkUnitId";
"computeComponentId" -> "packageTemplateEnv";
"computeComponentId" -> "prettyShow";
"computeComponentId" -> "s";
"computeComponentId" -> "toPathTemplate";
"computeComponentId" -> "unUnqualComponentName";
"computeEffectiveProfiling" -> "fromFlagOrDefault";
"condBenchmarks" -> "f";
"condBenchmarks" -> "s";
"condBenchmarks" -> "x";
"condExecutables" -> "f";
"condExecutables" -> "s";
"condExecutables" -> "x";
"condForeignLibs" -> "f";
"condForeignLibs" -> "s";
"condForeignLibs" -> "x";
"condLibrary" -> "f";
"condLibrary" -> "s";
"condLibrary" -> "x";
"condSubLibraries" -> "f";
"condSubLibraries" -> "s";
"condSubLibraries" -> "x";
"condTestSuites" -> "f";
"condTestSuites" -> "s";
"condTestSuites" -> "x";
"confPkgDescr" -> "defaultPackageDesc";
"confPkgDescr" -> "info";
"confPkgDescr" -> "readGenericPackageDescription";
"configAbsolutePaths" -> "absolutePackageDBPath";
"configAbsolutePaths" -> "f";
"configCompilerAuxEx" -> "configCompilerEx";
"configCompilerAuxEx" -> "defaultProgramDb";
"configCompilerAuxEx" -> "flagToMaybe";
"configCompilerAuxEx" -> "fromFlag";
"configCompilerAuxEx" -> "mkProgramDb";
"configCompilerEx" -> "buildPlatform";
"configCompilerEx" -> "die\'";
"configPrograms" -> "f";
"configure" -> "absoluteInstallDirs";
"configure" -> "addKnownProgram";
"configure" -> "allExtensions";
"configure" -> "anyVersion";
"configure" -> "buildOS";
"configure" -> "cabalVersion";
"configure" -> "checkCompilerProblems";
"configure" -> "checkDeprecatedFlags";
"configure" -> "checkExactConfiguration";
"configure" -> "checkPackageProblems";
"configure" -> "checkRelocatable";
"configure" -> "combineInstallDirs";
"configure" -> "combinedConstraints";
"configure" -> "compilerFlavor";
"configure" -> "compilerVersion";
"configure" -> "configCompilerEx";
"configure" -> "configPrograms";
"configure" -> "configureAllKnownPrograms";
"configure" -> "configureComponentLocalBuildInfos";
"configure" -> "configureCoverage";
"configure" -> "configureDependencies";
"configure" -> "configureFinalizedPackage";
"configure" -> "configurePkgconfigPackages";
"configure" -> "configureProfiling";
"configure" -> "configureProgram";
"configure" -> "configureRequiredPrograms";
"configure" -> "createDirectoryIfMissingVerbose";
"configure" -> "currentCabalId";
"configure" -> "currentCompilerId";
"configure" -> "debug";
"configure" -> "defaultInstallDirs\'";
"configure" -> "dependencySatisfiable";
"configure" -> "desugarBuildTool";
"configure" -> "die\'";
"configure" -> "enabledBuildInfos";
"configure" -> "enabledComponents";
"configure" -> "f";
"configure" -> "findGhcjsGhcVersion";
"configure" -> "findGhcjsPkgGhcjsVersion";
"configure" -> "findProgramOnSearchPath";
"configure" -> "flagToMaybe";
"configure" -> "flattenPackageDescription";
"configure" -> "fromFlag";
"configure" -> "fromFlagOrDefault";
"configure" -> "getAllToolDependencies";
"configure" -> "getCompilerVersion";
"configure" -> "getExtensions";
"configure" -> "getInstalledPackages";
"configure" -> "getInternalLibraries";
"configure" -> "getLanguages";
"configure" -> "ghcPkgProgram";
"configure" -> "ghcProgram";
"configure" -> "ghcVersionImplInfo";
"configure" -> "ghcjsPkgProgram";
"configure" -> "ghcjsProgram";
"configure" -> "ghcjsVersionImplInfo";
"configure" -> "guessGhcPkgFromGhcPath";
"configure" -> "guessGhcjsPkgFromGhcjsPath";
"configure" -> "guessHaddockFromGhcPath";
"configure" -> "guessHaddockFromGhcjsPath";
"configure" -> "guessHpcFromGhcPath";
"configure" -> "guessHpcFromGhcjsPath";
"configure" -> "guessHsc2hsFromGhcPath";
"configure" -> "guessHsc2hsFromGhcjsPath";
"configure" -> "guessRunghcFromGhcPath";
"configure" -> "haddockProgram";
"configure" -> "hasLibs";
"configure" -> "haskellSuitePkgProgram";
"configure" -> "haskellSuiteProgram";
"configure" -> "hpcProgram";
"configure" -> "hsc2hsProgram";
"configure" -> "info";
"configure" -> "intercalate";
"configure" -> "interpretPackageDbFlags";
"configure" -> "isInternal";
"configure" -> "knownPrograms";
"configure" -> "lessVerbose";
"configure" -> "map";
"configure" -> "mkProgramDb";
"configure" -> "mkVersion";
"configure" -> "null";
"configure" -> "orLaterVersion";
"configure" -> "packageName";
"configure" -> "prefixRelativeInstallDirs";
"configure" -> "prettyShow";
"configure" -> "programPath";
"configure" -> "readBuildTargets";
"configure" -> "reportProgram";
"configure" -> "requireProgram";
"configure" -> "requireProgramVersion";
"configure" -> "runLogProgress";
"configure" -> "runghcProgram";
"configure" -> "s";
"configure" -> "setupMessage";
"configure" -> "setupMessage\'";
"configure" -> "showCompilerId";
"configure" -> "showPackageDescription";
"configure" -> "uhcLanguageExtensions";
"configure" -> "uhcLanguages";
"configure" -> "uhcProgram";
"configure" -> "unUnqualComponentName";
"configure" -> "unsupportedExtensions";
"configure" -> "unsupportedForeignLibs";
"configure" -> "unsupportedLanguages";
"configure" -> "updatePackageDescription";
"configure" -> "updateProgram";
"configure" -> "userMaybeSpecifyPath";
"configure" -> "versionNumbers";
"configure" -> "warn";
"configureAction" -> "confPkgDescr";
"configureAction" -> "configureArgs";
"configureAction" -> "findDistPrefOrDefault";
"configureAction" -> "flagToMaybe";
"configureAction" -> "fromFlag";
"configureAction" -> "noExtraFlags";
"configureAction" -> "rawSystemExit";
"configureAction" -> "toFlag";
"configureAction" -> "writePersistBuildConfig";
"configureAllKnownPrograms" -> "configurePrograms";
"configureArgs" -> "fromPathTemplate";
"configureArgs" -> "prettyShow";
"configureCCompiler" -> "configureProg";
"configureCCompiler" -> "gccProgram";
"configureCommand" -> "configureOptions";
"configureCommand" -> "defaultConfigFlags";
"configureCommand" -> "programDbOption";
"configureCommand" -> "programDbOptions";
"configureCommand" -> "programDbPaths";
"configureCommand" -> "programFlagsDescription";
"configureCommand" -> "wrapText";
"configureComponentLocalBuildInfos" -> "componentCycleMsg";
"configureComponentLocalBuildInfos" -> "componentsGraphToList";
"configureComponentLocalBuildInfos" -> "dieProgress";
"configureComponentLocalBuildInfos" -> "dispComponentsWithDeps";
"configureComponentLocalBuildInfos" -> "dispConfiguredComponent";
"configureComponentLocalBuildInfos" -> "dispLinkedComponent";
"configureComponentLocalBuildInfos" -> "dispReadyComponent";
"configureComponentLocalBuildInfos" -> "infoProgress";
"configureComponentLocalBuildInfos" -> "map";
"configureComponentLocalBuildInfos" -> "mkComponentsGraph";
"configureComponentLocalBuildInfos" -> "package";
"configureComponentLocalBuildInfos" -> "prettyShow";
"configureComponentLocalBuildInfos" -> "toComponentLocalBuildInfos";
"configureComponentLocalBuildInfos" -> "toConfiguredComponents";
"configureComponentLocalBuildInfos" -> "toLinkedComponents";
"configureComponentLocalBuildInfos" -> "toReadyComponents";
"configureCoverage" -> "coverageSupported";
"configureCoverage" -> "fromFlagOrDefault";
"configureCoverage" -> "showCompilerId";
"configureCoverage" -> "warn";
"configureDependencies" -> "die\'";
"configureDependencies" -> "enabledBuildDepends";
"configureDependencies" -> "intercalate";
"configureDependencies" -> "map";
"configureDependencies" -> "newPackageDepsBehaviour";
"configureDependencies" -> "null";
"configureDependencies" -> "package";
"configureDependencies" -> "packageName";
"configureDependencies" -> "prettyShow";
"configureDependencies" -> "reportFailedDependencies";
"configureDependencies" -> "reportSelectedDependencies";
"configureDependencies" -> "s";
"configureDependencies" -> "selectDependency";
"configureFinalizedPackage" -> "benchmarkBuildInfo";
"configureFinalizedPackage" -> "benchmarks";
"configureFinalizedPackage" -> "compilerInfo";
"configureFinalizedPackage" -> "die\'";
"configureFinalizedPackage" -> "executables";
"configureFinalizedPackage" -> "f";
"configureFinalizedPackage" -> "finalizePD";
"configureFinalizedPackage" -> "foreignLibBuildInfo";
"configureFinalizedPackage" -> "foreignLibs";
"configureFinalizedPackage" -> "includeDirs";
"configureFinalizedPackage" -> "info";
"configureFinalizedPackage" -> "intercalate";
"configureFinalizedPackage" -> "l";
"configureFinalizedPackage" -> "libBuildInfo";
"configureFinalizedPackage" -> "library";
"configureFinalizedPackage" -> "map";
"configureFinalizedPackage" -> "nullFlagAssignment";
"configureFinalizedPackage" -> "prettyShow";
"configureFinalizedPackage" -> "render";
"configureFinalizedPackage" -> "simplifyDependency";
"configureFinalizedPackage" -> "subLibraries";
"configureFinalizedPackage" -> "testBuildInfo";
"configureFinalizedPackage" -> "testSuites";
"configureFinalizedPackage" -> "unFlagAssignment";
"configureFinalizedPackage" -> "unFlagName";
"configureLinker" -> "configureProg";
"configureLinker" -> "ldProgram";
"configureOptions" -> "boolOpt";
"configureOptions" -> "boolOpt\'";
"configureOptions" -> "choiceOpt";
"configureOptions" -> "defaultStyle";
"configureOptions" -> "dispModSubstEntry";
"configureOptions" -> "f";
"configureOptions" -> "flagToDebugInfoLevel";
"configureOptions" -> "flagToOptimisationLevel";
"configureOptions" -> "flagToProfDetailLevel";
"configureOptions" -> "fromPathTemplate";
"configureOptions" -> "installDirsOptions";
"configureOptions" -> "legacyParsecFlagAssignment";
"configureOptions" -> "legacyShowFlagAssignment\'";
"configureOptions" -> "liftOption";
"configureOptions" -> "map";
"configureOptions" -> "mkComponentId";
"configureOptions" -> "multiOption";
"configureOptions" -> "noArg";
"configureOptions" -> "optArg\'";
"configureOptions" -> "option";
"configureOptions" -> "optionDistPref";
"configureOptions" -> "optionVerbosity";
"configureOptions" -> "parsecGivenComponent";
"configureOptions" -> "parsecModSubstEntry";
"configureOptions" -> "parsecToReadE";
"configureOptions" -> "prettyShow";
"configureOptions" -> "readPackageDbList";
"configureOptions" -> "reqArg";
"configureOptions" -> "reqArgFlag";
"configureOptions" -> "reqArg\'";
"configureOptions" -> "set";
"configureOptions" -> "showPackageDbList";
"configureOptions" -> "showProfDetailLevelFlag";
"configureOptions" -> "toNubList";
"configureOptions" -> "toPathTemplate";
"configureOptions" -> "trueArg";
"configureOptions" -> "x";
"configurePkgconfigPackages" -> "bench";
"configurePkgconfigPackages" -> "benchmarkBuildInfo";
"configurePkgconfigPackages" -> "benchmarks";
"configurePkgconfigPackages" -> "catchExit";
"configurePkgconfigPackages" -> "catchIO";
"configurePkgconfigPackages" -> "ccLdOptionsBuildInfo";
"configurePkgconfigPackages" -> "die\'";
"configurePkgconfigPackages" -> "enabledBuildInfos";
"configurePkgconfigPackages" -> "executables";
"configurePkgconfigPackages" -> "getDbProgramOutput";
"configurePkgconfigPackages" -> "info";
"configurePkgconfigPackages" -> "isAnyPkgconfigVersion";
"configurePkgconfigPackages" -> "lessVerbose";
"configurePkgconfigPackages" -> "libBuildInfo";
"configurePkgconfigPackages" -> "library";
"configurePkgconfigPackages" -> "mkVersion";
"configurePkgconfigPackages" -> "null";
"configurePkgconfigPackages" -> "orLaterVersion";
"configurePkgconfigPackages" -> "pkgConfigProgram";
"configurePkgconfigPackages" -> "prettyShow";
"configurePkgconfigPackages" -> "requireProgramVersion";
"configurePkgconfigPackages" -> "subLibraries";
"configurePkgconfigPackages" -> "test";
"configurePkgconfigPackages" -> "testBuildInfo";
"configurePkgconfigPackages" -> "testSuites";
"configurePkgconfigPackages" -> "toUTF8BS";
"configurePkgconfigPackages" -> "unPkgconfigName";
"configurePkgconfigPackages" -> "withinPkgconfigVersionRange";
"configureProfiling" -> "computeEffectiveProfiling";
"configureProfiling" -> "fromFlagOrDefault";
"configureProfiling" -> "intercalate";
"configureProfiling" -> "knownProfDetailLevels";
"configureProfiling" -> "profilingSupported";
"configureProfiling" -> "showCompilerId";
"configureProfiling" -> "warn";
"configureProg" -> "programInvocation";
"configureProg" -> "requireProgram";
"configureProgram" -> "die\'";
"configureProgram" -> "doesExecutableExist";
"configureProgram" -> "findProgramOnSearchPath";
"configureProgram" -> "programSearchPathAsPATHVar";
"configureProgram" -> "updateConfiguredProgs";
"configureProgram" -> "userSpecifiedArgs";
"configureProgram" -> "userSpecifiedPath";
"configurePrograms" -> "configureProgram";
"configureRequiredProgram" -> "anyVersion";
"configureRequiredProgram" -> "configureProgram";
"configureRequiredProgram" -> "lookupKnownProgram";
"configureRequiredProgram" -> "requireProgram";
"configureRequiredProgram" -> "requireProgramVersion";
"configureRequiredProgram" -> "simpleProgram";
"configureRequiredPrograms" -> "configureRequiredProgram";
"configureToolchain" -> "addKnownProgram";
"configureToolchain" -> "arProgram";
"configureToolchain" -> "buildOS";
"configureToolchain" -> "catchExit";
"configureToolchain" -> "catchIO";
"configureToolchain" -> "dropExeExtension";
"configureToolchain" -> "findProgramOnSearchPath";
"configureToolchain" -> "gccProgram";
"configureToolchain" -> "getProgramOutput";
"configureToolchain" -> "ldProgram";
"configureToolchain" -> "map";
"configureToolchain" -> "programPath";
"configureToolchain" -> "runProgram";
"configureToolchain" -> "stripProgram";
"configureToolchain" -> "tokenizeQuotedWords";
"configureToolchain" -> "withTempFile";
"constrainBy" -> "anyVersion";
"constrainBy" -> "intersectVersionRanges";
"constrainBy" -> "isAnyVersion";
"constrainBy" -> "l";
"constrainBy" -> "lexemeParsec";
"constrainBy" -> "qualifiedExeName";
"constructUHCCmdLine" -> "autogenComponentModulesDir";
"constructUHCCmdLine" -> "autogenPackageModulesDir";
"constructUHCCmdLine" -> "deafening";
"constructUHCCmdLine" -> "extensionsToFlags";
"constructUHCCmdLine" -> "getSymbolicPath";
"constructUHCCmdLine" -> "hcOptions";
"constructUHCCmdLine" -> "l";
"constructUHCCmdLine" -> "languageToFlags";
"constructUHCCmdLine" -> "normal";
"constructUHCCmdLine" -> "prettyShow";
"constructUHCCmdLine" -> "uhcPackageDbOptions";
"constructUHCCmdLine" -> "usedExtensions";
"containerStructure" -> "f";
"containerStructure" -> "typeRep";
"convertInclude" -> "addErr";
"convertInclude" -> "addErrContext";
"convertInclude" -> "ci_msg";
"convertInclude" -> "convertModuleProvides";
"convertInclude" -> "convertModuleRequires";
"convertInclude" -> "convertUnitId";
"convertInclude" -> "failWith";
"convertInclude" -> "map";
"convertInclude" -> "packageName";
"convertInclude" -> "s";
"convertInclude" -> "showComponentName";
"convertInclude" -> "x";
"convertModule" -> "convertModule\'";
"convertModule" -> "emptyMuEnv";
"convertModule" -> "s";
"convertModuleProvides" -> "convertModule";
"convertModuleProvides" -> "s";
"convertModuleProvidesU" -> "convertModuleU";
"convertModuleProvidesU" -> "s";
"convertModuleRequires" -> "convertModuleProvides";
"convertModuleRequires" -> "s";
"convertModuleRequiresU" -> "convertModuleProvidesU";
"convertModuleScopeU" -> "convertModuleProvidesU";
"convertModuleScopeU" -> "convertModuleRequiresU";
"convertModuleScopeU" -> "s";
"convertModuleSubst" -> "convertModule";
"convertModuleSubst" -> "s";
"convertModuleSubstU" -> "convertModuleU";
"convertModuleU" -> "convertModuleU\'";
"convertModuleU" -> "emptyMooEnv";
"convertModuleU" -> "s";
"convertModuleU\'" -> "convertUnitIdU\'";
"convertModuleU\'" -> "liftST";
"convertModuleU\'" -> "s";
"convertModule\'" -> "convertUnitId\'";
"convertModule\'" -> "getUnifEnv";
"convertModule\'" -> "liftST";
"convertModule\'" -> "readUnifRef";
"convertModule\'" -> "s";
"convertModule\'" -> "writeUnifRef";
"convertUnitId" -> "convertUnitId\'";
"convertUnitId" -> "emptyMuEnv";
"convertUnitId" -> "s";
"convertUnitIdU" -> "convertUnitIdU\'";
"convertUnitIdU" -> "emptyMooEnv";
"convertUnitIdU" -> "s";
"convertUnitIdU\'" -> "convertModuleU\'";
"convertUnitIdU\'" -> "extendMooEnv";
"convertUnitIdU\'" -> "failWith";
"convertUnitIdU\'" -> "liftST";
"convertUnitIdU\'" -> "lookupMooEnv";
"convertUnitIdU\'" -> "s";
"convertUnitIdU\'" -> "x";
"convertUnitId\'" -> "convertModule\'";
"convertUnitId\'" -> "extendMuEnv";
"convertUnitId\'" -> "getUnifEnv";
"convertUnitId\'" -> "liftST";
"convertUnitId\'" -> "readUnifRef";
"convertUnitId\'" -> "s";
"convertUnitId\'" -> "writeUnifRef";
"convertUnitId\'" -> "x";
"copyAction" -> "findDistPrefOrDefault";
"copyAction" -> "fromFlag";
"copyAction" -> "getBuildConfig";
"copyAction" -> "hookedAction";
"copyAction" -> "maybeToFlag";
"copyAction" -> "noExtraFlags";
"copyAction" -> "rawSystemExit";
"copyAction" -> "toFlag";
"copyCommand" -> "copyOptions";
"copyCommand" -> "defaultCopyFlags";
"copyCommand" -> "usageAlternatives";
"copyCommand" -> "wrapText";
"copyComponent" -> "absoluteComponentInstallDirs";
"copyComponent" -> "absoluteInstallCommandDirs";
"copyComponent" -> "compilerFlavor";
"copyComponent" -> "componentBuildDir";
"copyComponent" -> "die\'";
"copyComponent" -> "exeName";
"copyComponent" -> "exeScope";
"copyComponent" -> "foreignLibBuildInfo";
"copyComponent" -> "foreignLibName";
"copyComponent" -> "installIncludeFiles";
"copyComponent" -> "isInSearchPath";
"copyComponent" -> "libBuildInfo";
"copyComponent" -> "libName";
"copyComponent" -> "noticeNoWrap";
"copyComponent" -> "prettyShow";
"copyComponent" -> "substPathTemplate";
"copyComponent" -> "unUnqualComponentName";
"copyComponent" -> "warn";
"copyDirectoryRecursive" -> "copyFile";
"copyDirectoryRecursive" -> "copyFilesWith";
"copyDirectoryRecursive" -> "f";
"copyDirectoryRecursive" -> "getDirectoryContentsRecursive";
"copyDirectoryRecursive" -> "info";
"copyDirectoryRecursive" -> "withFrozenCallStack";
"copyExecutableFile" -> "setFileMode";
"copyFile" -> "catchIO";
"copyFile" -> "count";
"copyFile" -> "toExtendedLengthPath";
"copyFileChanged" -> "copyFile";
"copyFileChanged" -> "filesEqual";
"copyFileTo" -> "createDirectoryIfMissingVerbose";
"copyFileTo" -> "installOrdinaryFile";
"copyFileTo" -> "withFrozenCallStack";
"copyFileVerbose" -> "copyFile";
"copyFileVerbose" -> "info";
"copyFileVerbose" -> "withFrozenCallStack";
"copyFiles" -> "copyFileVerbose";
"copyFiles" -> "copyFilesWith";
"copyFiles" -> "withFrozenCallStack";
"copyFilesWith" -> "createDirectoryIfMissingVerbose";
"copyFilesWith" -> "map";
"copyFilesWith" -> "withFrozenCallStack";
"copyOptions" -> "f";
"copyOptions" -> "option";
"copyOptions" -> "optionDistPref";
"copyOptions" -> "optionVerbosity";
"copyOptions" -> "reqArg";
"copyOptions" -> "succeedReadE";
"copyOrdinaryFile" -> "copyFile";
"copyOrdinaryFile" -> "setFileExecutable";
"copyPackage" -> "absoluteInstallCommandDirs";
"copyPackage" -> "createDirectoryIfMissingVerbose";
"copyPackage" -> "getSymbolicPath";
"copyPackage" -> "haddockName";
"copyPackage" -> "haddockPref";
"copyPackage" -> "info";
"copyPackage" -> "installDataFiles";
"copyPackage" -> "installDirectoryContents";
"copyPackage" -> "installOrdinaryFile";
"copyPackage" -> "licenseFiles";
"copyPackage" -> "localUnitId";
"copyPackage" -> "null";
"copyright" -> "f";
"copyright" -> "s";
"copyright" -> "x";
"countTestResults" -> "f";
"coverageSupported" -> "compilerFlavor";
"cppProgram" -> "simpleProgram";
"cpphsProgram" -> "findProgramVersion";
"cpphsProgram" -> "simpleProgram";
"createArLibArchive" -> "arProgram";
"createArLibArchive" -> "arResponseFilesSupported";
"createArLibArchive" -> "deafening";
"createArLibArchive" -> "defaultTempFileOptions";
"createArLibArchive" -> "filesEqual";
"createArLibArchive" -> "fromFlagOrDefault";
"createArLibArchive" -> "multiStageProgramInvocation";
"createArLibArchive" -> "programInvocation";
"createArLibArchive" -> "requireProgram";
"createArLibArchive" -> "runProgramInvocation";
"createArLibArchive" -> "verbose";
"createArLibArchive" -> "verbosityOpts";
"createArLibArchive" -> "wipeMetadata";
"createArLibArchive" -> "withResponseFile";
"createArLibArchive" -> "withTempDirectory";
"createArchive" -> "defaultProgramDb";
"createArchive" -> "requireProgram";
"createArchive" -> "runProgram";
"createArchive" -> "tarBallName";
"createArchive" -> "tarProgram";
"createDirectoryIfMissingVerbose" -> "catchIO";
"createDirectoryIfMissingVerbose" -> "createDirectoryVerbose";
"createDirectoryIfMissingVerbose" -> "tryIO";
"createDirectoryIfMissingVerbose" -> "withFrozenCallStack";
"createDirectoryVerbose" -> "info";
"createDirectoryVerbose" -> "setDirOrdinary";
"createDirectoryVerbose" -> "withFrozenCallStack";
"createInternalPackageDB" -> "createPackageDB";
"createInternalPackageDB" -> "deletePackageDB";
"createInternalPackageDB" -> "doesPackageDBExist";
"createInternalPackageDB" -> "internalPackageDBPath";
"createPackageDB" -> "compilerFlavor";
"createPackageDB" -> "die\'";
"createPipe" -> "callStack";
"createPipe" -> "empty";
"createPipe" -> "fromList";
"createPipe" -> "runDList";
"createPipe" -> "singleton";
"createPipe" -> "snoc";
"createPipe" -> "toList";
"createProcess" -> "enableProcessJobs";
"createProcessWithEnv" -> "createProcess";
"createProcessWithEnv" -> "printRawCommandAndArgsAndEnv";
"createProcessWithEnv" -> "withFrozenCallStack";
"createTempDirectory" -> "mkPrivateDir";
"createTempDirectory" -> "tryIO";
"createTempDirectory" -> "x";
"currentCabalId" -> "cabalVersion";
"currentCabalId" -> "mkPackageName";
"currentCompilerId" -> "mkPackageName";
"currentCompilerId" -> "mkVersion\'";
"customFieldsPD" -> "f";
"customFieldsPD" -> "s";
"customFieldsPD" -> "x";
"cxxOptions" -> "f";
"cxxOptions" -> "s";
"cxxOptions" -> "x";
"cycles" -> "stronglyConnComp";
"dataDir" -> "f";
"dataDir" -> "s";
"dataDir" -> "x";
"dataFiles" -> "f";
"dataFiles" -> "s";
"dataFiles" -> "x";
"deafening" -> "mkVerbosity";
"debug" -> "deafening";
"debug" -> "verbosityHandle";
"debug" -> "withFrozenCallStack";
"debug" -> "withMetadata";
"debug" -> "wrapTextVerbosity";
"debugNoWrap" -> "deafening";
"debugNoWrap" -> "verbosityHandle";
"debugNoWrap" -> "withFrozenCallStack";
"debugNoWrap" -> "withMetadata";
"decodeCompatPackageName" -> "decodeCompatPackageName\'";
"decodeCompatPackageName" -> "unPackageName";
"decodeCompatPackageName\'" -> "explicitEitherParsec";
"decodeCompatPackageName\'" -> "mkPackageName";
"decodeCompatPackageName\'" -> "mkUnqualComponentName";
"decodeCompatPackageName\'" -> "parseZDashCode";
"decodeCompatPackageName\'" -> "s";
"decodeFileOrFail\'" -> "decodeOrFailIO";
"decodeFileOrFail\'" -> "f";
"decodeMainIsArg" -> "null";
"decodeMainIsArg" -> "safeHead";
"decodeMainIsArg" -> "safeTail";
"decodeOrFailIO" -> "decode";
"decodeOrFailIO" -> "f";
"decodeOrFailIO" -> "roll";
"decodeOrFailIO" -> "unroll";
"decodeStringUtf8" -> "replacementChar";
"decodeVertexForest" -> "flattenForest";
"decodeVertexForest" -> "map";
"defaultBenchHook" -> "bench";
"defaultBenchmarkFlags" -> "normal";
"defaultBuildFlags" -> "normal";
"defaultBuildHook" -> "allSuffixHandlers";
"defaultBuildHook" -> "build";
"defaultCleanFlags" -> "normal";
"defaultCompilerFlavor" -> "buildCompilerFlavor";
"defaultConfigFlags" -> "defaultCompilerFlavor";
"defaultConfigFlags" -> "emptyConfigFlags";
"defaultConfigFlags" -> "normal";
"defaultConfigFlags" -> "toPathTemplate";
"defaultCopyFlags" -> "normal";
"defaultFreeTextFieldDefST" -> "cloneLens";
"defaultFreeTextFieldDefST" -> "f";
"defaultFreeTextFieldDefST" -> "fieldDescrParse";
"defaultFreeTextFieldDefST" -> "fieldDescrPretty";
"defaultFreeTextFieldDefST" -> "fieldDescrsToList";
"defaultFreeTextFieldDefST" -> "fromShortText";
"defaultFreeTextFieldDefST" -> "l";
"defaultFreeTextFieldDefST" -> "s";
"defaultFreeTextFieldDefST" -> "toShortText";
"defaultFreeTextFieldDefST" -> "x";
"defaultHaddockFlags" -> "normal";
"defaultHscolourFlags" -> "gmappend";
"defaultHscolourFlags" -> "gmempty";
"defaultHscolourFlags" -> "normal";
"defaultIncludeRenaming" -> "defaultRenaming";
"defaultInstallDirs" -> "defaultInstallDirs\'";
"defaultInstallDirs\'" -> "buildOS";
"defaultInstallDirs\'" -> "defaultInstallDirs\'";
"defaultInstallDirs\'" -> "getWindowsProgramFilesDir";
"defaultInstallDirs\'" -> "hasLibs";
"defaultInstallDirs\'" -> "toPathTemplate";
"defaultInstallFlags" -> "normal";
"defaultInstallHook" -> "defaultCopyFlags";
"defaultInstallHook" -> "defaultRegisterFlags";
"defaultInstallHook" -> "hasLibs";
"defaultInstallHook" -> "install";
"defaultInstallHook" -> "register";
"defaultMain" -> "defaultMainArgs";
"defaultMain" -> "defaultMainHelper";
"defaultMain" -> "simpleUserHooks";
"defaultMainArgs" -> "defaultMainHelper";
"defaultMainArgs" -> "simpleUserHooks";
"defaultMainHelper" -> "addKnownPrograms";
"defaultMainHelper" -> "benchAction";
"defaultMainHelper" -> "benchmarkCommand";
"defaultMainHelper" -> "buildAction";
"defaultMainHelper" -> "buildCommand";
"defaultMainHelper" -> "cabalVersion";
"defaultMainHelper" -> "cleanAction";
"defaultMainHelper" -> "cleanCommand";
"defaultMainHelper" -> "commandAddAction";
"defaultMainHelper" -> "commandsRun";
"defaultMainHelper" -> "configureAction";
"defaultMainHelper" -> "configureCommand";
"defaultMainHelper" -> "copyAction";
"defaultMainHelper" -> "copyCommand";
"defaultMainHelper" -> "defaultProgramDb";
"defaultMainHelper" -> "expandResponse";
"defaultMainHelper" -> "fromFlag";
"defaultMainHelper" -> "globalCommand";
"defaultMainHelper" -> "haddockAction";
"defaultMainHelper" -> "haddockCommand";
"defaultMainHelper" -> "hscolourAction";
"defaultMainHelper" -> "hscolourCommand";
"defaultMainHelper" -> "installAction";
"defaultMainHelper" -> "installCommand";
"defaultMainHelper" -> "intercalate";
"defaultMainHelper" -> "prettyShow";
"defaultMainHelper" -> "registerAction";
"defaultMainHelper" -> "registerCommand";
"defaultMainHelper" -> "replAction";
"defaultMainHelper" -> "replCommand";
"defaultMainHelper" -> "sdistAction";
"defaultMainHelper" -> "sdistCommand";
"defaultMainHelper" -> "showBuildInfoAction";
"defaultMainHelper" -> "showBuildInfoCommand";
"defaultMainHelper" -> "testAction";
"defaultMainHelper" -> "testCommand";
"defaultMainHelper" -> "topHandler";
"defaultMainHelper" -> "unregisterAction";
"defaultMainHelper" -> "unregisterCommand";
"defaultMainNoRead" -> "defaultMainWithHooksNoRead";
"defaultMainNoRead" -> "simpleUserHooks";
"defaultMainWithHooks" -> "defaultMainHelper";
"defaultMainWithHooksArgs" -> "defaultMainHelper";
"defaultMainWithHooksNoRead" -> "defaultMainHelper";
"defaultMainWithHooksNoReadArgs" -> "defaultMainHelper";
"defaultPackageDesc" -> "currentDir";
"defaultPackageDesc" -> "tryFindPackageDesc";
"defaultProgramDb" -> "builtinPrograms";
"defaultProgramDb" -> "emptyProgramDb";
"defaultProgramDb" -> "restoreProgramDb";
"defaultRegHook" -> "bench";
"defaultRegHook" -> "fromFlag";
"defaultRegHook" -> "hasLibs";
"defaultRegHook" -> "register";
"defaultRegHook" -> "setupMessage";
"defaultRegisterFlags" -> "normal";
"defaultReplFlags" -> "gmappend";
"defaultReplFlags" -> "gmempty";
"defaultReplFlags" -> "normal";
"defaultReplHook" -> "allSuffixHandlers";
"defaultReplHook" -> "repl";
"defaultSDistFlags" -> "normal";
"defaultSetupDepends" -> "classifyRepoKind";
"defaultSetupDepends" -> "classifyRepoType";
"defaultSetupDepends" -> "emptySourceRepo";
"defaultSetupDepends" -> "f";
"defaultSetupDepends" -> "knownRepoTypes";
"defaultSetupDepends" -> "repoBranch";
"defaultSetupDepends" -> "repoKind";
"defaultSetupDepends" -> "repoLocation";
"defaultSetupDepends" -> "repoModule";
"defaultSetupDepends" -> "repoSubdir";
"defaultSetupDepends" -> "repoTag";
"defaultSetupDepends" -> "repoType";
"defaultSetupDepends" -> "s";
"defaultSetupDepends" -> "x";
"defaultShowBuildFlags" -> "defaultBuildFlags";
"defaultTestFlags" -> "normal";
"defaultTestFlags" -> "toFlag";
"defaultTestFlags" -> "toPathTemplate";
"defaultTestHook" -> "test";
"delete" -> "x";
"deleteKey" -> "fromMap";
"deleteKey" -> "toMap";
"deleteLookup" -> "fromMap";
"deleteLookup" -> "toMap";
"deletePackageName" -> "installedUnitId";
"deletePackageName" -> "mkPackageIndex";
"deleteSourcePackageId" -> "installedUnitId";
"deleteSourcePackageId" -> "mkPackageIndex";
"deleteSourcePackageId" -> "packageName";
"deleteSourcePackageId" -> "packageVersion";
"deleteUnitId" -> "installedUnitId";
"deleteUnitId" -> "mkPackageIndex";
"deleteUnitId" -> "null";
"deleteUnitId" -> "packageName";
"deleteUnitId" -> "packageVersion";
"depLibraryPaths" -> "absoluteComponentInstallDirs";
"depLibraryPaths" -> "allPackages";
"depLibraryPaths" -> "allTargetsInBuildOrder\'";
"depLibraryPaths" -> "componentBuildDir";
"depLibraryPaths" -> "getLibDir";
"depLibraryPaths" -> "installedUnitId";
"depLibraryPaths" -> "l";
"depLibraryPaths" -> "map";
"depLibraryPaths" -> "neededTargetsInBuildOrder\'";
"depLibraryPaths" -> "shortRelativePath";
"dependencyClosure" -> "brokenPackages";
"dependencyClosure" -> "closure";
"dependencyClosure" -> "insert";
"dependencyClosure" -> "installedUnitId";
"dependencyClosure" -> "lookupUnitId";
"dependencyCycles" -> "allPackages";
"dependencyCycles" -> "installedUnitId";
"dependencyGraph" -> "allPackages";
"dependencyGraph" -> "installedUnitId";
"dependencyGraph" -> "length";
"dependencyGraph" -> "map";
"dependencyInconsistencies" -> "allPackages";
"dependencyInconsistencies" -> "length";
"dependencyInconsistencies" -> "lookupUnitId";
"dependencyInconsistencies" -> "packageName";
"dependencySatisfiable" -> "mainLibSet";
"dependencySatisfiable" -> "null";
"dependencySatisfiable" -> "packageNameToUnqualComponentName";
"dependencySatisfiable" -> "pkgName";
"depends" -> "f";
"depends" -> "s";
"depends" -> "x";
"deprecatedExtensions" -> "classifyExtension";
"describe" -> "catchIO";
"describe" -> "describeInvocation";
"describe" -> "die\'";
"describe" -> "getProgramInvocationLBS";
"describe" -> "parsePackages";
"describe" -> "prettyShow";
"describeInvocation" -> "packageDbStackOpts";
"describeInvocation" -> "prettyShow";
"describeInvocation" -> "programInvocation";
"describeInvocation" -> "verbosityOpts";
"describeToken" -> "s";
"description" -> "f";
"description" -> "s";
"description" -> "x";
"desugarBuildTool" -> "exeName";
"desugarBuildTool" -> "executables";
"desugarBuildTool" -> "map";
"desugarBuildTool" -> "mkPackageName";
"desugarBuildTool" -> "mkUnqualComponentName";
"desugarBuildTool" -> "packageName";
"dieNoVerbosity" -> "callStack";
"dieNoWrap" -> "verbatimUserError";
"dieNoWrap" -> "withFrozenCallStack";
"dieNoWrap" -> "withMetadata";
"dieProgress" -> "failProgress";
"dieProgress" -> "formatMsg";
"dieProgress" -> "s";
"dieWithLocation\'" -> "verbatimUserError";
"dieWithLocation\'" -> "withFrozenCallStack";
"dieWithLocation\'" -> "withMetadata";
"dieWithLocation\'" -> "wrapTextVerbosity";
"die\'" -> "verbatimUserError";
"die\'" -> "withFrozenCallStack";
"die\'" -> "withMetadata";
"die\'" -> "wrapTextVerbosity";
"disambiguateBuildTargets" -> "equating";
"disambiguateBuildTargets" -> "length";
"disambiguateBuildTargets" -> "map";
"disambiguateBuildTargets" -> "null";
"disambiguateBuildTargets" -> "renderBuildTarget";
"dispComponent" -> "colon";
"dispComponentsWithDeps" -> "componentName";
"dispConfigStateFileError" -> "currentCabalId";
"dispConfigStateFileError" -> "currentCompilerId";
"dispConfigStateFileError" -> "defaultStyle";
"dispConfigStateFileError" -> "dispConfigStateFileError";
"dispConfiguredComponent" -> "cc_cid";
"dispConfiguredComponent" -> "ci_id";
"dispFlagAssignment" -> "map";
"dispFlagAssignment" -> "showFlagValue";
"dispFlagAssignment" -> "unFlagAssignment";
"dispLinkedComponent" -> "ci_id";
"dispLinkedComponent" -> "dispOpenModuleSubst";
"dispLinkedComponent" -> "lc_pkgid";
"dispLinkedComponent" -> "lc_uid";
"dispModuleSource" -> "dispComponent";
"dispOpenModuleSubst" -> "dispOpenModuleSubstEntry";
"dispOpenModuleSubst" -> "map";
"dispOptVersion" -> "dispVersion";
"dispReadyComponent" -> "f";
"dispReadyComponent" -> "s";
"dispReadyComponent" -> "x";
"dispVersion" -> "defaultMain";
"dispVersion" -> "defaultMainArgs";
"display" -> "prettyShow";
"displayException" -> "isExtensionOf";
"displayException" -> "stripExtension";
"doctestProgram" -> "findProgramOnSearchPath";
"doctestProgram" -> "findProgramVersion";
"doctestProgram" -> "simpleProgram";
"doesExecutableExist" -> "f";
"doesNotIntersect" -> "l";
"doesNotTouch" -> "l";
"doesPathExist" -> "getEnvironment";
"doesPathExist" -> "setEnv";
"doesPathExist" -> "unsetEnv";
"dropExeExtension" -> "exeExtensions";
"dropExeExtension" -> "find";
"dropNonAlnum8" -> "isAlpha8";
"dropNonAlnum8" -> "isDigit8";
"dropWhileEndLE" -> "null";
"dropWhileEndLE" -> "x";
"dump" -> "catchIO";
"dump" -> "die\'";
"dump" -> "displayException";
"dump" -> "dumpInvocation";
"dump" -> "getProgramInvocationLBS";
"dump" -> "parsePackages";
"dumpInvocation" -> "packageDbOpts";
"dumpInvocation" -> "programInvocation";
"dumpInvocation" -> "silent";
"dumpInvocation" -> "verbosityOpts";
"dups" -> "x";
"eitherParsec" -> "explicitEitherParsec";
"element" -> "elementInLayoutContext";
"element" -> "elementInNonLayoutContext";
"element" -> "fieldSecName";
"element" -> "incIndentLevel";
"element" -> "indentOfAtLeast";
"elementInLayoutContext" -> "colon";
"elementInLayoutContext" -> "fieldLayoutOrBraces";
"elementInLayoutContext" -> "sectionArg";
"elementInLayoutContext" -> "sectionLayoutOrBraces";
"elementInNonLayoutContext" -> "closeBrace";
"elementInNonLayoutContext" -> "colon";
"elementInNonLayoutContext" -> "elements";
"elementInNonLayoutContext" -> "fieldInlineOrBraces";
"elementInNonLayoutContext" -> "openBrace";
"elementInNonLayoutContext" -> "sectionArg";
"elementInNonLayoutContext" -> "tokIndent";
"elementInNonLayoutContext" -> "zeroIndentLevel";
"elements" -> "element";
"empty" -> "fromMap";
"emptyBenchmarkFlags" -> "gmappend";
"emptyBenchmarkFlags" -> "gmempty";
"emptyBuildFlags" -> "gmappend";
"emptyBuildFlags" -> "gmempty";
"emptyCleanFlags" -> "gmappend";
"emptyCleanFlags" -> "gmempty";
"emptyConfigFlags" -> "gmappend";
"emptyConfigFlags" -> "gmempty";
"emptyCopyFlags" -> "gmappend";
"emptyCopyFlags" -> "gmempty";
"emptyFlag" -> "flagDefault";
"emptyFlag" -> "flagDescription";
"emptyFlag" -> "flagManual";
"emptyFlag" -> "flagName";
"emptyGenericPackageDescription" -> "emptyPackageDescription";
"emptyGenericPackageDescription" -> "f";
"emptyGenericPackageDescription" -> "traverseCondTreeBuildInfo";
"emptyGlobalFlags" -> "gmappend";
"emptyGlobalFlags" -> "gmempty";
"emptyHaddockFlags" -> "gmappend";
"emptyHaddockFlags" -> "gmempty";
"emptyHookedBuildInfo" -> "defaultIncludeRenaming";
"emptyHookedBuildInfo" -> "isDefaultIncludeRenaming";
"emptyInstallFlags" -> "gmappend";
"emptyInstallFlags" -> "gmempty";
"emptyInstalledPackageInfo" -> "abiDepends";
"emptyInstalledPackageInfo" -> "abiHash";
"emptyInstalledPackageInfo" -> "author";
"emptyInstalledPackageInfo" -> "category";
"emptyInstalledPackageInfo" -> "ccOptions";
"emptyInstalledPackageInfo" -> "compatPackageKey";
"emptyInstalledPackageInfo" -> "copyright";
"emptyInstalledPackageInfo" -> "cxxOptions";
"emptyInstalledPackageInfo" -> "dataDir";
"emptyInstalledPackageInfo" -> "depends";
"emptyInstalledPackageInfo" -> "description";
"emptyInstalledPackageInfo" -> "exposed";
"emptyInstalledPackageInfo" -> "exposedModules";
"emptyInstalledPackageInfo" -> "extraGHCiLibraries";
"emptyInstalledPackageInfo" -> "extraLibraries";
"emptyInstalledPackageInfo" -> "frameworkDirs";
"emptyInstalledPackageInfo" -> "frameworks";
"emptyInstalledPackageInfo" -> "haddockHTMLs";
"emptyInstalledPackageInfo" -> "haddockInterfaces";
"emptyInstalledPackageInfo" -> "hiddenModules";
"emptyInstalledPackageInfo" -> "homepage";
"emptyInstalledPackageInfo" -> "hsLibraries";
"emptyInstalledPackageInfo" -> "importDirs";
"emptyInstalledPackageInfo" -> "includeDirs";
"emptyInstalledPackageInfo" -> "includes";
"emptyInstalledPackageInfo" -> "indefinite";
"emptyInstalledPackageInfo" -> "installedComponentId_";
"emptyInstalledPackageInfo" -> "installedUnitId";
"emptyInstalledPackageInfo" -> "instantiatedWith";
"emptyInstalledPackageInfo" -> "ipiFieldGrammar";
"emptyInstalledPackageInfo" -> "ldOptions";
"emptyInstalledPackageInfo" -> "libVisibility";
"emptyInstalledPackageInfo" -> "libraryDirs";
"emptyInstalledPackageInfo" -> "libraryDynDirs";
"emptyInstalledPackageInfo" -> "license";
"emptyInstalledPackageInfo" -> "maintainer";
"emptyInstalledPackageInfo" -> "mkAbiHash";
"emptyInstalledPackageInfo" -> "mkComponentId";
"emptyInstalledPackageInfo" -> "mkPackageName";
"emptyInstalledPackageInfo" -> "mkUnitId";
"emptyInstalledPackageInfo" -> "nullVersion";
"emptyInstalledPackageInfo" -> "pkgRoot";
"emptyInstalledPackageInfo" -> "pkgUrl";
"emptyInstalledPackageInfo" -> "sourceLibName";
"emptyInstalledPackageInfo" -> "sourcePackageId";
"emptyInstalledPackageInfo" -> "stability";
"emptyInstalledPackageInfo" -> "synopsis";
"emptyInstalledPackageInfo" -> "trusted";
"emptyLibrary" -> "combineLibraryName";
"emptyLibrary" -> "emptyLibrary";
"emptyLibrary" -> "exposedModules";
"emptyLibrary" -> "libBuildInfo";
"emptyLibrary" -> "libExposed";
"emptyLibrary" -> "libName";
"emptyLibrary" -> "libVisibility";
"emptyLibrary" -> "reexportedModules";
"emptyLibrary" -> "signatures";
"emptyMuEnv" -> "s";
"emptyPackageDescription" -> "author";
"emptyPackageDescription" -> "benchmarks";
"emptyPackageDescription" -> "bugReports";
"emptyPackageDescription" -> "buildTypeRaw";
"emptyPackageDescription" -> "category";
"emptyPackageDescription" -> "copyright";
"emptyPackageDescription" -> "customFieldsPD";
"emptyPackageDescription" -> "dataDir";
"emptyPackageDescription" -> "dataFiles";
"emptyPackageDescription" -> "description";
"emptyPackageDescription" -> "executables";
"emptyPackageDescription" -> "extraDocFiles";
"emptyPackageDescription" -> "extraSrcFiles";
"emptyPackageDescription" -> "extraTmpFiles";
"emptyPackageDescription" -> "foreignLibs";
"emptyPackageDescription" -> "homepage";
"emptyPackageDescription" -> "library";
"emptyPackageDescription" -> "licenseFiles";
"emptyPackageDescription" -> "licenseRaw";
"emptyPackageDescription" -> "maintainer";
"emptyPackageDescription" -> "mkPackageName";
"emptyPackageDescription" -> "nullVersion";
"emptyPackageDescription" -> "package";
"emptyPackageDescription" -> "pkgUrl";
"emptyPackageDescription" -> "setupBuildInfo";
"emptyPackageDescription" -> "sourceRepos";
"emptyPackageDescription" -> "specVersion";
"emptyPackageDescription" -> "stability";
"emptyPackageDescription" -> "subLibraries";
"emptyPackageDescription" -> "synopsis";
"emptyPackageDescription" -> "testSuites";
"emptyPackageDescription" -> "testedWith";
"emptyProgramDb" -> "defaultProgramSearchPath";
"emptyRegisterFlags" -> "gmappend";
"emptyRegisterFlags" -> "gmempty";
"emptySDistFlags" -> "gmappend";
"emptySDistFlags" -> "gmempty";
"emptySourceRepo" -> "isIdent";
"emptySourceRepo" -> "knownRepoTypeMap";
"emptySourceRepo" -> "lowercase";
"emptySourceRepo" -> "repoBranch";
"emptySourceRepo" -> "repoKind";
"emptySourceRepo" -> "repoLocation";
"emptySourceRepo" -> "repoModule";
"emptySourceRepo" -> "repoSubdir";
"emptySourceRepo" -> "repoTag";
"emptySourceRepo" -> "repoType";
"emptyTestFlags" -> "gmappend";
"emptyTestFlags" -> "gmempty";
"emptyUserHooks" -> "addLibraryPath";
"emptyUserHooks" -> "annotateIO";
"emptyUserHooks" -> "cabalVersion";
"emptyUserHooks" -> "chattyTry";
"emptyUserHooks" -> "copyDirectoryRecursive";
"emptyUserHooks" -> "copyFileTo";
"emptyUserHooks" -> "copyFileVerbose";
"emptyUserHooks" -> "copyFiles";
"emptyUserHooks" -> "createDirectoryIfMissingVerbose";
"emptyUserHooks" -> "createProcessWithEnv";
"emptyUserHooks" -> "createTempDirectory";
"emptyUserHooks" -> "currentDir";
"emptyUserHooks" -> "debug";
"emptyUserHooks" -> "debugNoWrap";
"emptyUserHooks" -> "defaultPackageDesc";
"emptyUserHooks" -> "defaultTempFileOptions";
"emptyUserHooks" -> "dieNoVerbosity";
"emptyUserHooks" -> "dieNoWrap";
"emptyUserHooks" -> "dieWithLocation\'";
"emptyUserHooks" -> "die\'";
"emptyUserHooks" -> "doesExecutableExist";
"emptyUserHooks" -> "dropExeExtension";
"emptyUserHooks" -> "dropWhileEndLE";
"emptyUserHooks" -> "emptyHookedBuildInfo";
"emptyUserHooks" -> "equating";
"emptyUserHooks" -> "exeExtensions";
"emptyUserHooks" -> "existsAndIsMoreRecentThan";
"emptyUserHooks" -> "findAllFilesCwdWithExtension";
"emptyUserHooks" -> "findAllFilesWithExtension";
"emptyUserHooks" -> "findFile";
"emptyUserHooks" -> "findFileCwd";
"emptyUserHooks" -> "findFileCwdWithExtension";
"emptyUserHooks" -> "findFileEx";
"emptyUserHooks" -> "findFileWithExtension";
"emptyUserHooks" -> "findFileWithExtension\'";
"emptyUserHooks" -> "findFirstFile";
"emptyUserHooks" -> "findHookedPackageDesc";
"emptyUserHooks" -> "findModuleFile";
"emptyUserHooks" -> "findModuleFileEx";
"emptyUserHooks" -> "findModuleFiles";
"emptyUserHooks" -> "findModuleFilesEx";
"emptyUserHooks" -> "findPackageDesc";
"emptyUserHooks" -> "findPackageDescCwd";
"emptyUserHooks" -> "findProgramVersion";
"emptyUserHooks" -> "fromUTF8BS";
"emptyUserHooks" -> "fromUTF8LBS";
"emptyUserHooks" -> "getDirectoryContentsRecursive";
"emptyUserHooks" -> "handleDoesNotExist";
"emptyUserHooks" -> "ignoreBOM";
"emptyUserHooks" -> "info";
"emptyUserHooks" -> "infoNoWrap";
"emptyUserHooks" -> "installDirectoryContents";
"emptyUserHooks" -> "installExecutableFile";
"emptyUserHooks" -> "installExecutableFiles";
"emptyUserHooks" -> "installMaybeExecutableFile";
"emptyUserHooks" -> "installMaybeExecutableFiles";
"emptyUserHooks" -> "installOrdinaryFile";
"emptyUserHooks" -> "installOrdinaryFiles";
"emptyUserHooks" -> "intercalate";
"emptyUserHooks" -> "isAbsoluteOnAnyPlatform";
"emptyUserHooks" -> "isInSearchPath";
"emptyUserHooks" -> "isRelativeOnAnyPlatform";
"emptyUserHooks" -> "listUnion";
"emptyUserHooks" -> "listUnionRight";
"emptyUserHooks" -> "lowercase";
"emptyUserHooks" -> "maybeExit";
"emptyUserHooks" -> "moreRecentFile";
"emptyUserHooks" -> "noExtraFlags";
"emptyUserHooks" -> "normaliseLineEndings";
"emptyUserHooks" -> "notice";
"emptyUserHooks" -> "noticeDoc";
"emptyUserHooks" -> "noticeNoWrap";
"emptyUserHooks" -> "ordNub";
"emptyUserHooks" -> "ordNubBy";
"emptyUserHooks" -> "ordNubRight";
"emptyUserHooks" -> "printRawCommandAndArgs";
"emptyUserHooks" -> "printRawCommandAndArgsAndEnv";
"emptyUserHooks" -> "rawSystemExit";
"emptyUserHooks" -> "rawSystemExitCode";
"emptyUserHooks" -> "rawSystemExitWithEnv";
"emptyUserHooks" -> "rawSystemIOWithEnv";
"emptyUserHooks" -> "rawSystemIOWithEnvAndAction";
"emptyUserHooks" -> "rawSystemStdInOut";
"emptyUserHooks" -> "rawSystemStdout";
"emptyUserHooks" -> "readUTF8File";
"emptyUserHooks" -> "rewriteFileEx";
"emptyUserHooks" -> "rewriteFileLBS";
"emptyUserHooks" -> "safeHead";
"emptyUserHooks" -> "safeInit";
"emptyUserHooks" -> "safeLast";
"emptyUserHooks" -> "safeTail";
"emptyUserHooks" -> "setFileExecutable";
"emptyUserHooks" -> "setFileOrdinary";
"emptyUserHooks" -> "setupMessage";
"emptyUserHooks" -> "shortRelativePath";
"emptyUserHooks" -> "takeWhileEndLE";
"emptyUserHooks" -> "toUTF8BS";
"emptyUserHooks" -> "toUTF8LBS";
"emptyUserHooks" -> "topHandler";
"emptyUserHooks" -> "topHandlerWith";
"emptyUserHooks" -> "tryFindPackageDesc";
"emptyUserHooks" -> "tryFindPackageDescCwd";
"emptyUserHooks" -> "unintersperse";
"emptyUserHooks" -> "warn";
"emptyUserHooks" -> "withFileContents";
"emptyUserHooks" -> "withOutputMarker";
"emptyUserHooks" -> "withTempDirectory";
"emptyUserHooks" -> "withTempDirectoryEx";
"emptyUserHooks" -> "withTempFile";
"emptyUserHooks" -> "withTempFileEx";
"emptyUserHooks" -> "withUTF8FileContents";
"emptyUserHooks" -> "wrapLine";
"emptyUserHooks" -> "wrapText";
"emptyUserHooks" -> "writeFileAtomic";
"emptyUserHooks" -> "writeUTF8File";
"emptyUserHooks" -> "xargs";
"enabledBenchLBIs" -> "allTargetsInBuildOrder\'";
"enabledBenchLBIs" -> "bench";
"enabledBuildDepends" -> "enabledBuildInfos";
"enabledBuildInfos" -> "componentBuildInfo";
"enabledBuildInfos" -> "enabledComponents";
"enabledComponents" -> "componentEnabled";
"enabledComponents" -> "pkgBuildableComponents";
"enabledTestLBIs" -> "allTargetsInBuildOrder\'";
"enabledTestLBIs" -> "test";
"encodeCompatPackageName" -> "encodeCompatPackageName\'";
"encodeCompatPackageName" -> "mkPackageName";
"encodeCompatPackageName\'" -> "unPackageName";
"encodeCompatPackageName\'" -> "unUnqualComponentName";
"encodeCompatPackageName\'" -> "zdashcode";
"encodeFile" -> "encode";
"encodeFile" -> "f";
"encodeStringUtf8" -> "containerStructure";
"encodeStringUtf8" -> "encodeStringUtf8";
"encodeStringUtf8" -> "genericStructure";
"encodeStringUtf8" -> "hashStructure";
"encodeStringUtf8" -> "nominalStructure";
"encodeStringUtf8" -> "structureBuilder";
"encodeStringUtf8" -> "structureHash";
"encodeStringUtf8" -> "structuredDecode";
"encodeStringUtf8" -> "structuredDecodeFileOrFail";
"encodeStringUtf8" -> "structuredDecodeOrFailIO";
"encodeStringUtf8" -> "structuredEncode";
"encodeStringUtf8" -> "structuredEncodeFile";
"encodeStringUtf8" -> "typeName";
"encodeStringUtf8" -> "typeVersion";
"encodeToIOData" -> "toUTF8LBS";
"eof" -> "describeToken";
"eof" -> "fromParsecFields";
"eof" -> "genericFromParsecFields";
"eof" -> "prettyFieldLines";
"eof" -> "prettySectionArgs";
"eof" -> "showFields";
"eof" -> "showFields\'";
"equating" -> "x";
"equivalent" -> "deafening";
"equivalent" -> "flagToVerbosity";
"equivalent" -> "intToVerbosity";
"equivalent" -> "isVerboseCallSite";
"equivalent" -> "isVerboseCallStack";
"equivalent" -> "isVerboseMarkOutput";
"equivalent" -> "isVerboseNoWrap";
"equivalent" -> "isVerboseQuiet";
"equivalent" -> "isVerboseStderr";
"equivalent" -> "isVerboseTimestamp";
"equivalent" -> "lessVerbose";
"equivalent" -> "modifyVerbosity";
"equivalent" -> "moreVerbose";
"equivalent" -> "normal";
"equivalent" -> "repr";
"equivalent" -> "showForCabal";
"equivalent" -> "showForGHC";
"equivalent" -> "silent";
"equivalent" -> "verbose";
"equivalent" -> "verboseCallSite";
"equivalent" -> "verboseCallStack";
"equivalent" -> "verboseHasFlags";
"equivalent" -> "verboseMarkOutput";
"equivalent" -> "verboseNoFlags";
"equivalent" -> "verboseNoStderr";
"equivalent" -> "verboseNoTimestamp";
"equivalent" -> "verboseNoWrap";
"equivalent" -> "verboseStderr";
"equivalent" -> "verboseTimestamp";
"equivalent" -> "verboseUnmarkOutput";
"errAmbig" -> "usageInfo";
"errNoArg" -> "emptyInstalledPackageInfo";
"errNoArg" -> "installedComponentId";
"errNoArg" -> "installedOpenUnitId";
"errNoArg" -> "parseInstalledPackageInfo";
"errNoArg" -> "requiredSignatures";
"errNoArg" -> "showFullInstalledPackageInfo";
"errNoArg" -> "showInstalledPackageInfo";
"errNoArg" -> "showInstalledPackageInfoField";
"errNoArg" -> "showSimpleInstalledPackageInfoField";
"errNoArg" -> "sourceComponentName";
"escapeCode" -> "empty";
"escapeCode" -> "length";
"escapeCode" -> "map";
"escapeCode" -> "null";
"escapeCode" -> "showPError";
"escapeCode" -> "x";
"escapeResponseFileArg" -> "emptyProgramInvocation";
"escapeResponseFileArg" -> "getEffectiveEnvironment";
"escapeResponseFileArg" -> "getProgramInvocationLBS";
"escapeResponseFileArg" -> "getProgramInvocationOutput";
"escapeResponseFileArg" -> "getProgramInvocationOutputAndErrors";
"escapeResponseFileArg" -> "multiStageProgramInvocation";
"escapeResponseFileArg" -> "programInvocation";
"escapeResponseFileArg" -> "runProgramInvocation";
"escapeResponseFileArg" -> "simpleProgramInvocation";
"exactMatches" -> "matchZero";
"exeBuildDir" -> "exeName";
"exeBuildDir" -> "unUnqualComponentName";
"exeBuildInfo" -> "diffFlagAssignment";
"exeBuildInfo" -> "dispFlagAssignment";
"exeBuildInfo" -> "emptyFlag";
"exeBuildInfo" -> "f";
"exeBuildInfo" -> "findDuplicateFlagAssignments";
"exeBuildInfo" -> "flagDefault";
"exeBuildInfo" -> "flagDescription";
"exeBuildInfo" -> "flagManual";
"exeBuildInfo" -> "flagName";
"exeBuildInfo" -> "insertFlagAssignment";
"exeBuildInfo" -> "legacyParsecFlagAssignment";
"exeBuildInfo" -> "legacyShowFlagAssignment";
"exeBuildInfo" -> "legacyShowFlagAssignment\'";
"exeBuildInfo" -> "lookupFlagAssignment";
"exeBuildInfo" -> "mkFlagAssignment";
"exeBuildInfo" -> "mkFlagName";
"exeBuildInfo" -> "nullFlagAssignment";
"exeBuildInfo" -> "parsecFlagAssignment";
"exeBuildInfo" -> "parsecFlagAssignmentNonEmpty";
"exeBuildInfo" -> "parsecMaybeQuoted";
"exeBuildInfo" -> "s";
"exeBuildInfo" -> "showFlagAssignment";
"exeBuildInfo" -> "showFlagValue";
"exeBuildInfo" -> "unFlagAssignment";
"exeBuildInfo" -> "unFlagName";
"exeBuildInfo" -> "x";
"exeExtensions" -> "buildOS";
"exeFillInDefaults" -> "biFillInDefaults";
"exeMainModuleName" -> "decodeMainIsArg";
"exeMainModuleName" -> "hcOptions";
"exeMainModuleName" -> "map";
"exeName" -> "f";
"exeName" -> "s";
"exeName" -> "x";
"exeScope" -> "f";
"exeScope" -> "s";
"exeScope" -> "x";
"exeTargetName" -> "exeExtension";
"exeTargetName" -> "exeName";
"exeTargetName" -> "unUnqualComponentName";
"exeTargetName" -> "withExt";
"executableFieldGrammar" -> "buildInfoFieldGrammar";
"executableFieldGrammar" -> "optionalFieldDef";
"executableFieldGrammar" -> "testStanzaBuildInfo";
"executables" -> "f";
"executables" -> "s";
"executables" -> "x";
"existsAndIsMoreRecentThan" -> "moreRecentFile";
"expandDots" -> "x";
"expandOpenUnitId" -> "expandUnitId";
"expandResponse" -> "f";
"expandResponse" -> "gmappend";
"expandResponse" -> "gmempty";
"expandResponse" -> "unescapeArgs";
"expandResponse" -> "x";
"expandUnitId" -> "computeCompatPackageKey";
"expandUnitId" -> "computeComponentId";
"expandUnitId" -> "prettyShow";
"expecting" -> "matchErrorExpected";
"explicitEitherParsec" -> "fieldLineStreamFromString";
"explicitEitherParsec" -> "parser";
"explicitEitherParsec" -> "runParsecParser";
"explicitEitherParsec\'" -> "fieldLineStreamFromString";
"explicitEitherParsec\'" -> "parser";
"explicitEitherParsec\'" -> "runParsecParser\'";
"explicitLibModules" -> "exposedModules";
"explicitLibModules" -> "libBuildInfo";
"explicitLibModules" -> "signatures";
"expose" -> "exposeInvocation";
"expose" -> "runProgramInvocation";
"exposeInvocation" -> "packageDbOpts";
"exposeInvocation" -> "prettyShow";
"exposeInvocation" -> "programInvocation";
"exposeInvocation" -> "verbosityOpts";
"exposed" -> "f";
"exposed" -> "s";
"exposed" -> "x";
"exposedModules" -> "f";
"exposedModules" -> "s";
"exposedModules" -> "x";
"extendConfiguredComponentMap" -> "cc_name";
"extendConfiguredComponentMap" -> "cc_pkgid";
"extendConfiguredComponentMap" -> "pkgName";
"extendLinkedComponentMap" -> "lc_cid";
"extendLinkedComponentMap" -> "lc_uid";
"extendMuEnv" -> "x";
"extensionToFlag" -> "extensionToFlag\'";
"extensionToFlag\'" -> "lookup";
"extensionsToFlags" -> "extensionToFlag";
"extensionsToFlags" -> "map";
"extensionsToFlags" -> "null";
"extraDocFiles" -> "f";
"extraDocFiles" -> "s";
"extraDocFiles" -> "x";
"extraGHCiLibraries" -> "f";
"extraGHCiLibraries" -> "s";
"extraGHCiLibraries" -> "x";
"extraLibraries" -> "f";
"extraLibraries" -> "s";
"extraLibraries" -> "x";
"extraSrcFiles" -> "f";
"extraSrcFiles" -> "s";
"extraSrcFiles" -> "x";
"extraTmpFiles" -> "f";
"extraTmpFiles" -> "s";
"extraTmpFiles" -> "x";
"extractCondition" -> "cAnd";
"extractCondition" -> "cOr";
"extractCondition" -> "x";
"extractConditions" -> "benchmarkBuildInfo";
"extractConditions" -> "condBenchmarks";
"extractConditions" -> "condExecutables";
"extractConditions" -> "condLibrary";
"extractConditions" -> "condSubLibraries";
"extractConditions" -> "condTestSuites";
"extractConditions" -> "extractCondition";
"extractConditions" -> "f";
"extractConditions" -> "libBuildInfo";
"extractConditions" -> "testBuildInfo";
"extractConditions" -> "unionVersionRanges\'";
"extractConditions" -> "x";
"extractFileTime" -> "posixTimeToModTime";
"extractFileTime" -> "x";
"extractRtsInfo" -> "compilerVersion";
"extractRtsInfo" -> "mkPackageName";
"extractRtsInfo" -> "prettyShow";
"failIfErrs" -> "failM";
"failIfErrs" -> "getUnifEnv";
"failIfErrs" -> "liftST";
"failIfErrs" -> "null";
"failIfErrs" -> "s";
"failM" -> "s";
"failWith" -> "addErr";
"failWith" -> "failM";
"failWith" -> "s";
"fakePackageId" -> "anyVersion";
"fakePackageId" -> "fakePackageName";
"fakePackageId" -> "nullVersion";
"fakePackageId" -> "simplifyPackageVersionConstraint";
"fakePackageId" -> "thisPackageVersionConstraint";
"fakePackageId" -> "thisVersion";
"fakePackageId" -> "version0";
"fakePackageName" -> "mkPackageName";
"fieldAnn" -> "fieldName";
"fieldAnn" -> "nameAnn";
"fieldContent" -> "tokFieldLine";
"fieldDescrParse" -> "f";
"fieldDescrPretty" -> "s";
"fieldDescrsToList" -> "aview";
"fieldDescrsToList" -> "cloneLens";
"fieldDescrsToList" -> "defaultFreeTextFieldDefST";
"fieldDescrsToList" -> "f";
"fieldDescrsToList" -> "l";
"fieldDescrsToList" -> "map";
"fieldDescrsToList" -> "pack\'";
"fieldDescrsToList" -> "parsecFreeText";
"fieldDescrsToList" -> "s";
"fieldDescrsToList" -> "showFreeText";
"fieldDescrsToList" -> "singletonF";
"fieldDescrsToList" -> "unpack\'";
"fieldDescrsToList" -> "x";
"fieldGrammarKnownFieldList" -> "f";
"fieldGrammarKnownFieldList" -> "x";
"fieldInlineOrBraces" -> "closeBrace";
"fieldInlineOrBraces" -> "fieldContent";
"fieldInlineOrBraces" -> "inLexerMode";
"fieldInlineOrBraces" -> "in_field_braces";
"fieldInlineOrBraces" -> "l";
"fieldInlineOrBraces" -> "openBrace";
"fieldInlineOrBraces" -> "option";
"fieldLayoutOrBraces" -> "closeBrace";
"fieldLayoutOrBraces" -> "fieldContent";
"fieldLayoutOrBraces" -> "inLexerMode";
"fieldLayoutOrBraces" -> "in_field_braces";
"fieldLayoutOrBraces" -> "in_field_layout";
"fieldLayoutOrBraces" -> "indentOfAtLeast";
"fieldLayoutOrBraces" -> "l";
"fieldLayoutOrBraces" -> "openBrace";
"fieldLineStreamFromBS" -> "fieldLineStreamEnd";
"fieldLineStreamFromBS" -> "s";
"fieldLineStreamFromBS" -> "unconsChar";
"fieldLineStreamFromString" -> "toUTF8BS";
"fieldLinesToStream" -> "f";
"fieldLinesToStream" -> "fieldLineStreamEnd";
"fieldLinesToStream" -> "fieldLinesToStream";
"fieldLinesToStream" -> "prettyFieldGrammar";
"fieldLinesToStream" -> "s";
"fieldLinesToStream" -> "x";
"fieldLinesToString" -> "bol_section";
"fieldLinesToString" -> "fromUTF8BS";
"fieldLinesToString" -> "in_field_braces";
"fieldLinesToString" -> "in_field_layout";
"fieldLinesToString" -> "in_section";
"fieldLinesToString" -> "intercalate";
"fieldLinesToString" -> "lexToken";
"fieldLinesToString" -> "ltest";
"fieldLinesToString" -> "map";
"fieldLinesToString" -> "mkLexState";
"fieldSecName" -> "tokColon";
"fieldSecName" -> "tokSym";
"fieldUniverse" -> "f";
"fieldUniverse" -> "fieldUniverse";
"fieldlinesToBS" -> "map";
"fieldlinesToFreeText" -> "fromUTF8BS";
"fieldlinesToFreeText" -> "intercalate";
"fieldlinesToFreeText" -> "map";
"fieldlinesToFreeText" -> "s";
"fieldlinesToFreeText3" -> "fieldLineAnn";
"fieldlinesToFreeText3" -> "fromUTF8BS";
"fieldlinesToFreeText3" -> "mealy";
"fieldlinesToFreeText3" -> "positionCol";
"fieldlinesToFreeText3" -> "positionRow";
"fieldlinesToFreeText3" -> "s";
"fileExtensionSupportedLanguage" -> "filenameCDialect";
"fileGlobMatches" -> "fileGlobMatchesSegments";
"fileGlobMatchesSegments" -> "checkExt";
"fileGlobMatchesSegments" -> "fileGlobMatchesSegments";
"fileGlobMatchesSegments" -> "null";
"filenameCDialect" -> "boolOpt";
"filenameCDialect" -> "boolOpt\'";
"filenameCDialect" -> "choiceOpt";
"filenameCDialect" -> "choiceOptFromEnum";
"filenameCDialect" -> "commandAddAction";
"filenameCDialect" -> "commandFromSpec";
"filenameCDialect" -> "commandParseArgs";
"filenameCDialect" -> "commandShowOptions";
"filenameCDialect" -> "commandsRun";
"filenameCDialect" -> "getNormalCommandDescriptions";
"filenameCDialect" -> "helpCommandUI";
"filenameCDialect" -> "hiddenCommand";
"filenameCDialect" -> "liftOption";
"filenameCDialect" -> "liftOptionL";
"filenameCDialect" -> "mkCommandUI";
"filenameCDialect" -> "multiOption";
"filenameCDialect" -> "noArg";
"filenameCDialect" -> "noExtraFlags";
"filenameCDialect" -> "optArg";
"filenameCDialect" -> "optArg\'";
"filenameCDialect" -> "option";
"filenameCDialect" -> "reqArg";
"filenameCDialect" -> "reqArg\'";
"filenameCDialect" -> "set";
"filenameCDialect" -> "usageAlternatives";
"filenameCDialect" -> "usageDefault";
"filterAutogenModules" -> "autogenPathsModuleName";
"filterAutogenModules" -> "exposedModules";
"filterAutogenModules" -> "f";
"filterAutogenModules" -> "libBuildInfo";
"filterAutogenModules" -> "library";
"filterAutogenModules" -> "map";
"filterAutogenModules" -> "mapAllBuildInfo";
"filterAutogenModules" -> "subLibraries";
"finalizePD" -> "benchFillInDefaults";
"finalizePD" -> "benchmarkName";
"finalizePD" -> "benchmarks";
"finalizePD" -> "check";
"finalizePD" -> "exeFillInDefaults";
"finalizePD" -> "exeName";
"finalizePD" -> "executables";
"finalizePD" -> "flattenTaggedTargets";
"finalizePD" -> "flibFillInDefaults";
"finalizePD" -> "foldComponent";
"finalizePD" -> "foreignLibName";
"finalizePD" -> "foreignLibs";
"finalizePD" -> "l";
"finalizePD" -> "libExposed";
"finalizePD" -> "libFillInDefaults";
"finalizePD" -> "libName";
"finalizePD" -> "library";
"finalizePD" -> "lookupFlagAssignment";
"finalizePD" -> "map";
"finalizePD" -> "mapTreeData";
"finalizePD" -> "null";
"finalizePD" -> "partitionComponents";
"finalizePD" -> "resolveWithFlags";
"finalizePD" -> "subLibraries";
"finalizePD" -> "testFillInDefaults";
"finalizePD" -> "testName";
"finalizePD" -> "testSuites";
"find" -> "find";
"find" -> "readPoint";
"find" -> "repr";
"find" -> "s";
"findAllFilesCwdWithExtension" -> "findAllFiles";
"findAllFilesWithExtension" -> "findAllFiles";
"findDistPref" -> "fromFlagOrDefault";
"findDistPref" -> "null";
"findDistPref" -> "toFlag";
"findDistPrefOrDefault" -> "defaultDistPref";
"findDistPrefOrDefault" -> "findDistPref";
"findDuplicateFlagAssignments" -> "s";
"findDuplicateFlagAssignments" -> "x";
"findExecutable" -> "doesExecutableExist";
"findExecutable" -> "ghcInvocation";
"findExecutable" -> "normaliseGhcArgs";
"findExecutable" -> "packageDbArgsDb";
"findExecutable" -> "renderGhcOptions";
"findExecutable" -> "runGHC";
"findFile" -> "findFileEx";
"findFile" -> "normal";
"findFileCwd" -> "die\'";
"findFileCwd" -> "findFirstFile";
"findFileCwdWithExtension" -> "findFirstFile";
"findFileEx" -> "die\'";
"findFileEx" -> "findFirstFile";
"findFileWithExtension" -> "findFirstFile";
"findFileWithExtension\'" -> "findFirstFile";
"findFirstFile" -> "x";
"findGhcjsGhcVersion" -> "findProgramVersion";
"findGhcjsPkgGhcjsVersion" -> "findProgramVersion";
"findHookedPackageDesc" -> "buildInfoExt";
"findHookedPackageDesc" -> "die\'";
"findHookedPackageDesc" -> "f";
"findHookedPackageDesc" -> "null";
"findIncludeFile" -> "die\'";
"findIncludeFile" -> "f";
"findIncludeFile" -> "findIncludeFile";
"findMainExeFile" -> "findFileCwd";
"findMainExeFile" -> "findFileCwdWithExtension";
"findMainExeFile" -> "getSymbolicPath";
"findMainExeFile" -> "map";
"findMainExeFile" -> "ppSuffixes";
"findMatch" -> "x";
"findModDefFile" -> "findFileCwd";
"findModDefFile" -> "getSymbolicPath";
"findModDefFile" -> "map";
"findModuleFile" -> "findModuleFileEx";
"findModuleFile" -> "normal";
"findModuleFileEx" -> "die\'";
"findModuleFileEx" -> "findFileWithExtension\'";
"findModuleFileEx" -> "prettyShow";
"findModuleFiles" -> "findModuleFilesEx";
"findModuleFiles" -> "normal";
"findModuleFilesEx" -> "findModuleFileEx";
"findPackageDesc" -> "findPackageDescCwd";
"findPackageDesc" -> "intercalate";
"findPackageDesc" -> "l";
"findPackageDesc" -> "null";
"findPackageDescCwd" -> "intercalate";
"findPackageDescCwd" -> "l";
"findPackageDescCwd" -> "map";
"findPackageDescCwd" -> "null";
"findProgramOnSearchPath" -> "buildOS";
"findProgramOnSearchPath" -> "debug";
"findProgramOnSearchPath" -> "doesExecutableExist";
"findProgramOnSearchPath" -> "exeExtensions";
"findProgramOnSearchPath" -> "f";
"findProgramOnSearchPath" -> "findExecutable";
"findProgramOnSearchPath" -> "getSystemSearchPath";
"findProgramVersion" -> "catchExit";
"findProgramVersion" -> "catchIO";
"findProgramVersion" -> "debug";
"findProgramVersion" -> "prettyShow";
"findProgramVersion" -> "rawSystemStdout";
"findProgramVersion" -> "simpleParsec";
"findProgramVersion" -> "warn";
"findProgramVersion" -> "withFrozenCallStack";
"flagDefault" -> "f";
"flagDescription" -> "f";
"flagElim" -> "f";
"flagElim" -> "x";
"flagManual" -> "f";
"flagName" -> "f";
"flagToDebugInfoLevel" -> "s";
"flagToList" -> "x";
"flagToMaybe" -> "x";
"flagToOptimisationLevel" -> "s";
"flagToProfDetailLevel" -> "knownProfDetailLevels";
"flagToProfDetailLevel" -> "lookup";
"flagToProfDetailLevel" -> "lowercase";
"flagToProfDetailLevel" -> "s";
"flagToVerbosity" -> "parsecToReadE";
"flagToVerbosity" -> "parsecVerbosity";
"flatStyle" -> "x";
"flattenPackageDescription" -> "benchFillInDefaults";
"flattenPackageDescription" -> "benchmarkName";
"flattenPackageDescription" -> "benchmarks";
"flattenPackageDescription" -> "exeFillInDefaults";
"flattenPackageDescription" -> "exeName";
"flattenPackageDescription" -> "executables";
"flattenPackageDescription" -> "f";
"flattenPackageDescription" -> "flibFillInDefaults";
"flattenPackageDescription" -> "foreignLibName";
"flattenPackageDescription" -> "foreignLibs";
"flattenPackageDescription" -> "ignoreConditions";
"flattenPackageDescription" -> "libExposed";
"flattenPackageDescription" -> "libFillInDefaults";
"flattenPackageDescription" -> "libName";
"flattenPackageDescription" -> "library";
"flattenPackageDescription" -> "subLibraries";
"flattenPackageDescription" -> "testFillInDefaults";
"flattenPackageDescription" -> "testName";
"flattenPackageDescription" -> "testSuites";
"flattenTaggedTargets" -> "fromDepMap";
"flattenTaggedTargets" -> "l";
"flattenTaggedTargets" -> "prettyShow";
"flattenTaggedTargets" -> "set";
"flattenTaggedTargets" -> "x";
"flibBuildDir" -> "foreignLibName";
"flibBuildDir" -> "unUnqualComponentName";
"flibBuildName" -> "flibTargetName";
"flibBuildName" -> "foreignLibName";
"flibBuildName" -> "foreignLibType";
"flibBuildName" -> "foreignLibVersion";
"flibBuildName" -> "map";
"flibBuildName" -> "unUnqualComponentName";
"flibFillInDefaults" -> "biFillInDefaults";
"flibFillInDefaults" -> "foreignLibBuildInfo";
"flibTargetName" -> "dllExtension";
"flibTargetName" -> "foreignLibName";
"flibTargetName" -> "foreignLibType";
"flibTargetName" -> "foreignLibVersion";
"flibTargetName" -> "map";
"flibTargetName" -> "staticLibExtension";
"flibTargetName" -> "unUnqualComponentName";
"foldComponent" -> "f";
"foldProgress" -> "decodeStringUtf8";
"foldProgress" -> "empty";
"foldProgress" -> "encodeStringUtf8";
"foldProgress" -> "f";
"foldProgress" -> "foldProgress";
"foldProgress" -> "fromShortText";
"foldProgress" -> "length";
"foldProgress" -> "null";
"foldProgress" -> "s";
"foldProgress" -> "toShortText";
"foldProgress" -> "unsafeFromUTF8BS";
"foldProgress" -> "x";
"foldVersionRange" -> "cataVersionRange";
"foldVersionRange" -> "earlierVersion";
"foldVersionRange" -> "intersectVersionRanges";
"foldVersionRange" -> "majorUpperBound";
"foldVersionRange" -> "orLaterVersion";
"foldVersionRange" -> "union";
"foreign" -> "absoluteComponentInstallDirs";
"foreign" -> "absoluteInstallCommandDirs";
"foreign" -> "absoluteInstallDirs";
"foreign" -> "allComponentsInBuildOrder";
"foreign" -> "allLibModules";
"foreign" -> "catchExit";
"foreign" -> "catchIO";
"foreign" -> "componentBuildDir";
"foreign" -> "componentBuildInfo";
"foreign" -> "componentBuildable";
"foreign" -> "componentName";
"foreign" -> "componentNameString";
"foreign" -> "components";
"foreign" -> "defaultLibName";
"foreign" -> "depLibraryPaths";
"foreign" -> "displayException";
"foreign" -> "enabledBenchLBIs";
"foreign" -> "enabledTestLBIs";
"foreign" -> "foldComponent";
"foreign" -> "getComponent";
"foreign" -> "length";
"foreign" -> "localCompatPackageKey";
"foreign" -> "localComponentId";
"foreign" -> "localUnitId";
"foreign" -> "lookupComponent";
"foreign" -> "pkgBuildableComponents";
"foreign" -> "pkgComponents";
"foreign" -> "prefixRelativeComponentInstallDirs";
"foreign" -> "prefixRelativeInstallDirs";
"foreign" -> "s";
"foreign" -> "showComponentName";
"foreign" -> "substPathTemplate";
"foreign" -> "tryIO";
"foreign" -> "withAllComponentsInBuildOrder";
"foreign" -> "withBenchLBI";
"foreign" -> "withExeLBI";
"foreign" -> "withLibLBI";
"foreign" -> "withTestLBI";
"foreign" -> "x";
"foreignLibBuildInfo" -> "f";
"foreignLibBuildInfo" -> "s";
"foreignLibBuildInfo" -> "x";
"foreignLibFieldGrammar" -> "alaList";
"foreignLibFieldGrammar" -> "alaList\'";
"foreignLibFieldGrammar" -> "buildInfoFieldGrammar";
"foreignLibFieldGrammar" -> "optionalField";
"foreignLibFieldGrammar" -> "optionalFieldDef";
"foreignLibIsShared" -> "foreignLibType";
"foreignLibIsShared" -> "foreignLibTypeIsShared";
"foreignLibModDefFile" -> "f";
"foreignLibModDefFile" -> "foreignLibTypeIsShared";
"foreignLibModDefFile" -> "knownForeignLibTypes";
"foreignLibModDefFile" -> "s";
"foreignLibModDefFile" -> "x";
"foreignLibModules" -> "foreignLibBuildInfo";
"foreignLibName" -> "f";
"foreignLibName" -> "s";
"foreignLibName" -> "x";
"foreignLibOptions" -> "f";
"foreignLibOptions" -> "s";
"foreignLibOptions" -> "x";
"foreignLibType" -> "f";
"foreignLibType" -> "s";
"foreignLibType" -> "x";
"foreignLibTypeIsShared" -> "condBenchmarks";
"foreignLibTypeIsShared" -> "condExecutables";
"foreignLibTypeIsShared" -> "condForeignLibs";
"foreignLibTypeIsShared" -> "condLibrary";
"foreignLibTypeIsShared" -> "condSubLibraries";
"foreignLibTypeIsShared" -> "condTestSuites";
"foreignLibTypeIsShared" -> "emptyGenericPackageDescription";
"foreignLibTypeIsShared" -> "genPackageFlags";
"foreignLibTypeIsShared" -> "gpdScannedVersion";
"foreignLibTypeIsShared" -> "packageDescription";
"foreignLibVersion" -> "build";
"foreignLibVersion" -> "foreignLibVersionInfo";
"foreignLibVersion" -> "foreignLibVersionLinux";
"foreignLibVersion" -> "libVersionNumber";
"foreignLibVersion" -> "versionNumbers";
"foreignLibVersionInfo" -> "f";
"foreignLibVersionInfo" -> "s";
"foreignLibVersionInfo" -> "x";
"foreignLibVersionLinux" -> "f";
"foreignLibVersionLinux" -> "s";
"foreignLibVersionLinux" -> "x";
"foreignLibs" -> "f";
"foreignLibs" -> "s";
"foreignLibs" -> "x";
"formatDependencyList" -> "alaList";
"formatError" -> "lines\'";
"formatExposedModules" -> "alaList\'";
"formatExtraSourceFiles" -> "alaList\'";
"formatHsSourceDirs" -> "alaList";
"formatMixinList" -> "alaList";
"formatOtherExtensions" -> "alaList\'";
"formatOtherModules" -> "alaList";
"formatOtherModules" -> "alaList\'";
"formatOtherModules" -> "null";
"formatOtherModules" -> "pack\'";
"formatOtherModules" -> "parsecToken";
"formatOtherModules" -> "showToken";
"formatOtherModules" -> "unpack\'";
"frameworkDirs" -> "f";
"frameworkDirs" -> "s";
"frameworkDirs" -> "x";
"frameworks" -> "f";
"frameworks" -> "s";
"frameworks" -> "x";
"freeVars" -> "f";
"freezeByteArray" -> "f";
"freezeByteArray" -> "getMany";
"freezeByteArray" -> "l";
"freezeByteArray" -> "length";
"freezeByteArray" -> "s";
"freezeByteArray" -> "x";
"fresh" -> "s";
"fromComponents" -> "intercalate";
"fromDistinctList" -> "fromMap";
"fromDistinctList" -> "map";
"fromExecutable" -> "exeName";
"fromExecutable" -> "getExeSourceFiles";
"fromExecutable" -> "map";
"fromExecutable" -> "mkHaddockArgs";
"fromExecutable" -> "unUnqualComponentName";
"fromFlag" -> "x";
"fromFlagOrDefault" -> "x";
"fromFlags" -> "deafening";
"fromFlags" -> "flagToMaybe";
"fromFlags" -> "fromFlag";
"fromFlags" -> "fromPathTemplate";
"fromFlags" -> "lookup";
"fromFlags" -> "substPathTemplate";
"fromForeignLib" -> "foreignLibBuildInfo";
"fromForeignLib" -> "foreignLibName";
"fromForeignLib" -> "getFLibSourceFiles";
"fromForeignLib" -> "map";
"fromForeignLib" -> "mkHaddockArgs";
"fromForeignLib" -> "unUnqualComponentName";
"fromLibrary" -> "getLibSourceFiles";
"fromLibrary" -> "libBuildInfo";
"fromLibrary" -> "map";
"fromLibrary" -> "mkHaddockArgs";
"fromList" -> "equating";
"fromList" -> "installedUnitId";
"fromList" -> "mkPackageIndex";
"fromList" -> "packageName";
"fromList" -> "packageVersion";
"fromList" -> "toList";
"fromMap" -> "map";
"fromNonEmpty" -> "x";
"fromPackageDescription" -> "description";
"fromPackageDescription" -> "haddockDirName";
"fromPackageDescription" -> "haddockName";
"fromPackageDescription" -> "prettyShow";
"fromPackageDescription" -> "synopsis";
"fromParsecFields" -> "f";
"fromParsecFields" -> "genericFromParsecFields";
"fromParsecFields" -> "getOpt";
"fromParsecFields" -> "getOpt\'";
"fromParsecFields" -> "prettyFieldLines";
"fromParsecFields" -> "prettySectionArgs";
"fromParsecFields" -> "usageInfo";
"fromParsecFields" -> "x";
"fromShortText" -> "fromUTF8BS";
"fromUTF8BS" -> "decodeStringUtf8";
"fromUTF8LBS" -> "decodeStringUtf8";
"fromVersionIntervals" -> "anyVersion";
"fromVersionIntervals" -> "earlierVersion";
"fromVersionIntervals" -> "foldr1";
"fromVersionIntervals" -> "intersectVersionRanges";
"fromVersionIntervals" -> "intervalToVersionRange";
"fromVersionIntervals" -> "isVersion0";
"fromVersionIntervals" -> "l";
"fromVersionIntervals" -> "laterVersion";
"fromVersionIntervals" -> "noVersion";
"fromVersionIntervals" -> "orEarlierVersion";
"fromVersionIntervals" -> "orLaterVersion";
"fromVersionIntervals" -> "thisVersion";
"fromVersionIntervals" -> "unionVersionRanges";
"gbuild" -> "checkNeedsRecompilation";
"gbuild" -> "compilerVersion";
"gbuild" -> "componentGhcOptions";
"gbuild" -> "createDirectoryIfMissingVerbose";
"gbuild" -> "extractRtsInfo";
"gbuild" -> "flibBuildName";
"gbuild" -> "foreignLibType";
"gbuild" -> "fromFlag";
"gbuild" -> "gbuildInfo";
"gbuild" -> "gbuildIsRepl";
"gbuild" -> "gbuildModDefFiles";
"gbuild" -> "gbuildName";
"gbuild" -> "gbuildNeedDynamic";
"gbuild" -> "gbuildSources";
"gbuild" -> "gbuildTargetName";
"gbuild" -> "getImplInfo";
"gbuild" -> "getRPaths";
"gbuild" -> "ghcProgram";
"gbuild" -> "ghcjsProgram";
"gbuild" -> "hcProfOptions";
"gbuild" -> "hcSharedOptions";
"gbuild" -> "ifNeedsRPathWorkaround";
"gbuild" -> "info";
"gbuild" -> "isDynamic";
"gbuild" -> "ldProgram";
"gbuild" -> "lookupProgram";
"gbuild" -> "map";
"gbuild" -> "mkVersion";
"gbuild" -> "null";
"gbuild" -> "objExtension";
"gbuild" -> "popThreadedFlag";
"gbuild" -> "requireProgram";
"gbuild" -> "runGHC";
"gbuild" -> "specVersion";
"gbuild" -> "supportsDynamicToo";
"gbuild" -> "toFlag";
"gbuild" -> "toNubListR";
"gbuild" -> "usesTemplateHaskellOrQQ";
"gbuild" -> "x";
"gbuildInfo" -> "foreignLibBuildInfo";
"gbuildModDefFiles" -> "foreignLibModDefFile";
"gbuildName" -> "exeName";
"gbuildName" -> "foreignLibName";
"gbuildName" -> "unUnqualComponentName";
"gbuildNeedDynamic" -> "foreignLibOptions";
"gbuildNeedDynamic" -> "foreignLibType";
"gbuildSources" -> "exeMainModuleName";
"gbuildSources" -> "exeModules";
"gbuildSources" -> "findFileEx";
"gbuildSources" -> "foreignLibModules";
"gbuildSources" -> "getSymbolicPath";
"gbuildSources" -> "main";
"gbuildSources" -> "map";
"gbuildSources" -> "modulePath";
"gbuildSources" -> "prettyShow";
"gbuildSources" -> "warn";
"gbuildTargetName" -> "exeTargetName";
"gbuildTargetName" -> "flibTargetName";
"gccProgram" -> "findProgramVersion";
"gccProgram" -> "simpleProgram";
"genPackageFlags" -> "f";
"genPackageFlags" -> "s";
"genPackageFlags" -> "x";
"generalInstalledPackageInfo" -> "allLibModules";
"generalInstalledPackageInfo" -> "author";
"generalInstalledPackageInfo" -> "category";
"generalInstalledPackageInfo" -> "compilerFlavor";
"generalInstalledPackageInfo" -> "componentIsIndefinite";
"generalInstalledPackageInfo" -> "copyright";
"generalInstalledPackageInfo" -> "depends";
"generalInstalledPackageInfo" -> "description";
"generalInstalledPackageInfo" -> "frameworks";
"generalInstalledPackageInfo" -> "getHSLibraryName";
"generalInstalledPackageInfo" -> "haddockName";
"generalInstalledPackageInfo" -> "homepage";
"generalInstalledPackageInfo" -> "includeDirs";
"generalInstalledPackageInfo" -> "includes";
"generalInstalledPackageInfo" -> "ldOptions";
"generalInstalledPackageInfo" -> "libBuildInfo";
"generalInstalledPackageInfo" -> "libExposed";
"generalInstalledPackageInfo" -> "libName";
"generalInstalledPackageInfo" -> "libVisibility";
"generalInstalledPackageInfo" -> "libraryDynDirSupported";
"generalInstalledPackageInfo" -> "licenseFromSPDX";
"generalInstalledPackageInfo" -> "licenseRaw";
"generalInstalledPackageInfo" -> "licenseToSPDX";
"generalInstalledPackageInfo" -> "maintainer";
"generalInstalledPackageInfo" -> "map";
"generalInstalledPackageInfo" -> "mkVersion";
"generalInstalledPackageInfo" -> "null";
"generalInstalledPackageInfo" -> "ordNub";
"generalInstalledPackageInfo" -> "pkgUrl";
"generalInstalledPackageInfo" -> "stability";
"generalInstalledPackageInfo" -> "synopsis";
"generateCabalMacrosHeader" -> "configuredPrograms";
"generateCabalMacrosHeader" -> "fixchar";
"generateCabalMacrosHeader" -> "majorMinor";
"generateCabalMacrosHeader" -> "map";
"generateCabalMacrosHeader" -> "mkZPackage";
"generateCabalMacrosHeader" -> "null";
"generateCabalMacrosHeader" -> "package";
"generateCabalMacrosHeader" -> "pkgVersion";
"generateCabalMacrosHeader" -> "prettyShow";
"generateCabalMacrosHeader" -> "unPackageName";
"generateOne" -> "absolutePackageDBPaths";
"generateOne" -> "flagToMaybe";
"generateOne" -> "fromFlag";
"generateOne" -> "generateRegistrationInfo";
"generateOne" -> "info";
"generateOne" -> "registrationPackageDB";
"generatePackageVersionMacros" -> "fixchar";
"generatePackageVersionMacros" -> "map";
"generatePackageVersionMacros" -> "mkZPackage";
"generatePackageVersionMacros" -> "null";
"generatePackageVersionMacros" -> "unPackageName";
"generatePathsModule" -> "absoluteInstallCommandDirs";
"generatePathsModule" -> "buildArch";
"generatePathsModule" -> "buildOS";
"generatePathsModule" -> "compilerCompatVersion";
"generatePathsModule" -> "compilerFlavor";
"generatePathsModule" -> "hasLibs";
"generatePathsModule" -> "mkVersion";
"generatePathsModule" -> "orLaterVersion";
"generatePathsModule" -> "packageName";
"generatePathsModule" -> "packageVersion";
"generatePathsModule" -> "prefixRelativeComponentInstallDirs";
"generatePathsModule" -> "shortRelativePath";
"generatePathsModule" -> "showPkgName";
"generatePathsModule" -> "versionNumbers";
"generatePathsModule" -> "withinRange";
"generateRegistrationInfo" -> "abiHash";
"generateRegistrationInfo" -> "absoluteInstalledPackageInfo";
"generateRegistrationInfo" -> "inplaceInstalledPackageInfo";
"generateRegistrationInfo" -> "mkAbiHash";
"generateRegistrationInfo" -> "relocRegistrationInfo";
"genericFromParsecFields" -> "f";
"genericRnf" -> "f";
"genericRnf" -> "x";
"genericStructure" -> "equivalent";
"genericStructure" -> "f";
"genericStructure" -> "find";
"genericStructure" -> "fresh";
"genericStructure" -> "s";
"genericStructure" -> "typeRep";
"genericStructure" -> "union";
"getAllInternalToolDependencies" -> "cDialectFilenameExtension";
"getAllInternalToolDependencies" -> "cSourceExtensions";
"getAllInternalToolDependencies" -> "filenameCDialect";
"getAllInternalToolDependencies" -> "getAllToolDependencies";
"getAllInternalToolDependencies" -> "isInternal";
"getAllToolDependencies" -> "desugarBuildTool";
"getBuildConfig" -> "builtinPrograms";
"getBuildConfig" -> "checkPersistBuildConfigOutdated";
"getBuildConfig" -> "configureAction";
"getBuildConfig" -> "getPersistBuildConfig";
"getBuildConfig" -> "notice";
"getBuildConfig" -> "restoreProgramDb";
"getCabalSpecVersion" -> "s";
"getCompilerArgs" -> "compilerFlavor";
"getCompilerArgs" -> "createArchive";
"getCompilerArgs" -> "dateToSnapshotNumber";
"getCompilerArgs" -> "listPackageSources";
"getCompilerArgs" -> "listPackageSourcesWithDie";
"getCompilerArgs" -> "normal";
"getCompilerArgs" -> "prepareSnapshotTree";
"getCompilerArgs" -> "prepareTree";
"getCompilerArgs" -> "printPackageProblems";
"getCompilerArgs" -> "sdist";
"getCompilerArgs" -> "snapshotPackage";
"getCompilerArgs" -> "snapshotVersion";
"getCompilerVersion" -> "die\'";
"getCompilerVersion" -> "programPath";
"getCompilerVersion" -> "rawSystemStdout";
"getCompilerVersion" -> "safeInit";
"getCompilerVersion" -> "safeLast";
"getCompilerVersion" -> "simpleParsec";
"getComponent" -> "f";
"getComponent" -> "lookupComponent";
"getConfigStateFile" -> "callStack";
"getConfigStateFile" -> "currentCabalId";
"getConfigStateFile" -> "parseHeader";
"getConfigStateFile" -> "structuredDecodeOrFailIO";
"getConfigStateFile" -> "x";
"getCppOptions" -> "platformDefines";
"getCurTime" -> "posixTimeToModTime";
"getDbProgramOutput" -> "arProgram";
"getDbProgramOutput" -> "createArLibArchive";
"getDbProgramOutput" -> "deafening";
"getDbProgramOutput" -> "defaultTempFileOptions";
"getDbProgramOutput" -> "dieWithLocation\'";
"getDbProgramOutput" -> "die\'";
"getDbProgramOutput" -> "fromFlagOrDefault";
"getDbProgramOutput" -> "getProgramOutput";
"getDbProgramOutput" -> "lookupProgram";
"getDbProgramOutput" -> "multiStageProgramInvocation";
"getDbProgramOutput" -> "programInvocation";
"getDbProgramOutput" -> "requireProgram";
"getDbProgramOutput" -> "runProgramInvocation";
"getDbProgramOutput" -> "verbose";
"getDbProgramOutput" -> "withResponseFile";
"getDbProgramOutput" -> "withTempDirectory";
"getEffectiveEnvironment" -> "getEnvironment";
"getEnvironment" -> "map";
"getExeSourceFiles" -> "autogenComponentModulesDir";
"getExeSourceFiles" -> "autogenPackageModulesDir";
"getExeSourceFiles" -> "exeBuildDir";
"getExeSourceFiles" -> "findFileEx";
"getExeSourceFiles" -> "getSourceFiles";
"getExeSourceFiles" -> "getSymbolicPath";
"getExeSourceFiles" -> "map";
"getExeSourceFiles" -> "modulePath";
"getExtensions" -> "getProgramOutput";
"getExtensions" -> "map";
"getExtensions" -> "prettyShow";
"getExtensions" -> "programPath";
"getExtensions" -> "rawSystemStdout";
"getExtensions" -> "simpleParsec";
"getExtensions" -> "suppressOverrideArgs";
"getExtraPathEnv" -> "intercalate";
"getExtraPathEnv" -> "lookup";
"getExtraPathEnv" -> "x";
"getFLibSourceFiles" -> "autogenComponentModulesDir";
"getFLibSourceFiles" -> "autogenPackageModulesDir";
"getFLibSourceFiles" -> "flibBuildDir";
"getFLibSourceFiles" -> "foreignLibBuildInfo";
"getFLibSourceFiles" -> "getSourceFiles";
"getFLibSourceFiles" -> "getSymbolicPath";
"getFLibSourceFiles" -> "map";
"getFileAttributesEx" -> "getFileExInfoStandard";
"getGhcCppOpts" -> "toNubListR";
"getGhcCppOpts" -> "usedExtensions";
"getGhcCppOpts" -> "versionNumbers";
"getGhcCppOpts" -> "x";
"getGhcInfo" -> "die\'";
"getGhcInfo" -> "getProgramOutput";
"getGhcInfo" -> "ghcVersionImplInfo";
"getGhcInfo" -> "suppressOverrideArgs";
"getGhcLibDir" -> "compilerFlavor";
"getGhcLibDir" -> "l";
"getGlobalPackageDB" -> "dropWhileEndLE";
"getGlobalPackageDB" -> "getProgramOutput";
"getGlobalPackageDir" -> "getDbProgramOutput";
"getGlobalPackageDir" -> "uhcProgram";
"getHSLibraryName" -> "prettyShow";
"getHaskellObjects" -> "allLibModules";
"getHaskellObjects" -> "x";
"getHookedBuildInfo" -> "emptyHookedBuildInfo";
"getHookedBuildInfo" -> "findHookedPackageDesc";
"getHookedBuildInfo" -> "info";
"getHookedBuildInfo" -> "readHookedBuildInfo";
"getImplInfo" -> "compilerCompatVersion";
"getImplInfo" -> "compilerFlavor";
"getImplInfo" -> "compilerVersion";
"getImplInfo" -> "ghcVersionImplInfo";
"getImplInfo" -> "ghcjsVersionImplInfo";
"getImplInfo" -> "x";
"getInput" -> "s";
"getInstalledPackages" -> "addBuiltinVersions";
"getInstalledPackages" -> "catchExit";
"getInstalledPackages" -> "checkPackageDbEnvVar";
"getInstalledPackages" -> "checkPackageDbStack";
"getInstalledPackages" -> "compilerFlavor";
"getInstalledPackages" -> "die\'";
"getInstalledPackages" -> "doesPathExist";
"getInstalledPackages" -> "fromList";
"getInstalledPackages" -> "getDbProgramOutput";
"getInstalledPackages" -> "getGlobalPackageDir";
"getInstalledPackages" -> "getInstalledPackages\'";
"getInstalledPackages" -> "getUserPackageDir";
"getInstalledPackages" -> "haskellSuitePkgProgram";
"getInstalledPackages" -> "info";
"getInstalledPackages" -> "isPkgDir";
"getInstalledPackages" -> "map";
"getInstalledPackages" -> "mkInstalledPackageInfo";
"getInstalledPackages" -> "mkPackageName";
"getInstalledPackages" -> "null";
"getInstalledPackages" -> "packageDbOpt";
"getInstalledPackages" -> "packageDbPaths";
"getInstalledPackages" -> "parseInstalledPackageInfo";
"getInstalledPackages" -> "parsePackage";
"getInstalledPackages" -> "parsePackages";
"getInstalledPackages" -> "prettyShow";
"getInstalledPackages" -> "removeMingwIncludeDir";
"getInstalledPackages" -> "toPackageIndex";
"getInstalledPackages" -> "toUTF8BS";
"getInstalledPackages" -> "warn";
"getInstalledPackagesMonitorFiles" -> "compilerFlavor";
"getInstalledPackagesMonitorFiles" -> "getGlobalPackageDB";
"getInstalledPackagesMonitorFiles" -> "getUserPackageDB";
"getInstalledPackagesMonitorFiles" -> "ghcProgram";
"getInstalledPackagesMonitorFiles" -> "ghcjsProgram";
"getInstalledPackagesMonitorFiles" -> "lookupProgram";
"getInstalledPackagesMonitorFiles" -> "prettyShow";
"getInstalledPackagesMonitorFiles" -> "warn";
"getInstalledPackages\'" -> "hcPkgInfo";
"getInterfaces" -> "haddockPackageFlags";
"getInterfaces" -> "verboseUnmarkOutput";
"getInterfaces" -> "warn";
"getInternalLibraries" -> "allLibraries";
"getInternalLibraries" -> "flattenPackageDescription";
"getInternalLibraries" -> "libName";
"getInternalLibraries" -> "map";
"getLanguages" -> "map";
"getLanguages" -> "prettyShow";
"getLanguages" -> "programPath";
"getLanguages" -> "rawSystemStdout";
"getLanguages" -> "simpleParsec";
"getLexerWarnings" -> "getInput";
"getLibDir" -> "dropWhileEndLE";
"getLibDir" -> "getDbProgramOutput";
"getLibDir" -> "ghcProgram";
"getLibDir" -> "ghcjsProgram";
"getLibDir\'" -> "dropWhileEndLE";
"getLibDir\'" -> "getProgramOutput";
"getLibSourceFiles" -> "allLibModules";
"getLibSourceFiles" -> "autogenComponentModulesDir";
"getLibSourceFiles" -> "autogenPackageModulesDir";
"getLibSourceFiles" -> "componentBuildDir";
"getLibSourceFiles" -> "getSourceFiles";
"getLibSourceFiles" -> "getSymbolicPath";
"getLibSourceFiles" -> "libBuildInfo";
"getLibSourceFiles" -> "map";
"getMany" -> "checkGetSum";
"getMany" -> "f";
"getMany" -> "getMany";
"getMany" -> "s";
"getMany" -> "size";
"getMany" -> "sizeError";
"getMany" -> "x";
"getModTime" -> "extractFileTime";
"getModTime" -> "getFileAttributesEx";
"getModTime" -> "index_WIN32_FILE_ATTRIBUTE_DATA_ftLastWriteTime_dwHighDateTime";
"getModTime" -> "index_WIN32_FILE_ATTRIBUTE_DATA_ftLastWriteTime_dwLowDateTime";
"getModTime" -> "info";
"getModTime" -> "size_WIN32_FILE_ATTRIBUTE_DATA";
"getNext" -> "longOpt";
"getNext" -> "shortOpt";
"getNext" -> "x";
"getNormalCommandDescriptions" -> "description";
"getObjectFileName" -> "fromFlag";
"getObjectFileName" -> "fromFlagOrDefault";
"getOpt" -> "errUnrec";
"getOpt" -> "getOpt\'";
"getOpt" -> "map";
"getOpt\'" -> "f";
"getOpt\'" -> "getNext";
"getOpt\'" -> "getOpt\'";
"getOpt\'" -> "map";
"getOpt\'" -> "x";
"getPackageDBContents" -> "compilerFlavor";
"getPackageDBContents" -> "getInstalledPackages";
"getPackageDBContents" -> "getInstalledPackages\'";
"getPackageDBContents" -> "info";
"getPackageDBContents" -> "toPackageIndex";
"getPersistBuildConfig" -> "getConfigStateFile";
"getPersistBuildConfig" -> "localBuildInfoFile";
"getPos" -> "s";
"getProgramInvocationIODataAndErrors" -> "encodeToIOData";
"getProgramInvocationIODataAndErrors" -> "getEffectiveEnvironment";
"getProgramInvocationIODataAndErrors" -> "getExtraPathEnv";
"getProgramInvocationIODataAndErrors" -> "rawSystemStdInOut";
"getProgramInvocationLBS" -> "die\'";
"getProgramInvocationLBS" -> "getProgramInvocationIODataAndErrors";
"getProgramInvocationOutput" -> "die\'";
"getProgramInvocationOutput" -> "getProgramInvocationOutputAndErrors";
"getProgramInvocationOutputAndErrors" -> "fromUTF8LBS";
"getProgramInvocationOutputAndErrors" -> "getProgramInvocationIODataAndErrors";
"getProgramInvocationOutputAndErrors" -> "normaliseLineEndings";
"getProgramOutput" -> "getProgramInvocationOutput";
"getProgramOutput" -> "programInvocation";
"getRPaths" -> "depLibraryPaths";
"getRPaths" -> "map";
"getRPaths" -> "mkVersion";
"getRPaths" -> "toNubListR";
"getShortPathName" -> "broken";
"getShortPathName" -> "closure";
"getShortPathName" -> "cycles";
"getShortPathName" -> "deleteKey";
"getShortPathName" -> "deleteLookup";
"getShortPathName" -> "empty";
"getShortPathName" -> "f";
"getShortPathName" -> "fromDistinctList";
"getShortPathName" -> "insert";
"getShortPathName" -> "keys";
"getShortPathName" -> "keysSet";
"getShortPathName" -> "length";
"getShortPathName" -> "lookup";
"getShortPathName" -> "map";
"getShortPathName" -> "member";
"getShortPathName" -> "neighbors";
"getShortPathName" -> "nodeValue";
"getShortPathName" -> "null";
"getShortPathName" -> "revClosure";
"getShortPathName" -> "revNeighbors";
"getShortPathName" -> "revTopSort";
"getShortPathName" -> "s";
"getShortPathName" -> "size";
"getShortPathName" -> "stronglyConnComp";
"getShortPathName" -> "toGraph";
"getShortPathName" -> "toList";
"getShortPathName" -> "toMap";
"getShortPathName" -> "topSort";
"getShortPathName" -> "typeRep";
"getShortPathName" -> "unionLeft";
"getShortPathName" -> "unionRight";
"getShortPathName" -> "x";
"getSource" -> "emptyModuleShape";
"getSource" -> "s";
"getSource" -> "shapeInstalledPackage";
"getSourceFiles" -> "die\'";
"getSourceFiles" -> "findFileWithExtension";
"getSourceFiles" -> "prettyShow";
"getStartCode" -> "s";
"getToken" -> "getTokenWithPos";
"getTokenWithPos" -> "describeToken";
"getUnifEnv" -> "s";
"getUserPackageDB" -> "getGhcAppDir";
"getWindowsProgramFilesDir" -> "csidl_PROGRAM_FILES";
"getWindowsProgramFilesDir" -> "shGetFolderPath";
"getting" -> "f";
"getting" -> "s";
"ghcArchString" -> "prettyShow";
"ghcEnvironmentFileName" -> "ghcPlatformAndVersionString";
"ghcInvocation" -> "programInvocation";
"ghcInvocation" -> "renderGhcOptions";
"ghcOsString" -> "prettyShow";
"ghcPkgProgram" -> "findProgramVersion";
"ghcPkgProgram" -> "simpleProgram";
"ghcPlatformAndVersionString" -> "ghcArchString";
"ghcPlatformAndVersionString" -> "ghcOsString";
"ghcPlatformAndVersionString" -> "intercalate";
"ghcPlatformAndVersionString" -> "prettyShow";
"ghcProgram" -> "earlierVersion";
"ghcProgram" -> "findProgramVersion";
"ghcProgram" -> "intersectVersionRanges";
"ghcProgram" -> "laterVersion";
"ghcProgram" -> "mkVersion";
"ghcProgram" -> "normaliseGhcArgs";
"ghcProgram" -> "simpleProgram";
"ghcProgram" -> "withinRange";
"ghcSupported" -> "compilerFlavor";
"ghcVersionImplInfo" -> "versionNumbers";
"ghcjsPkgProgram" -> "findProgramVersion";
"ghcjsPkgProgram" -> "simpleProgram";
"ghcjsProgram" -> "findProgramVersion";
"ghcjsProgram" -> "simpleProgram";
"ghcjsVersionImplInfo" -> "checkPackageDbEnvVar";
"ghcjsVersionImplInfo" -> "componentAsmGhcOptions";
"ghcjsVersionImplInfo" -> "componentCcGhcOptions";
"ghcjsVersionImplInfo" -> "componentCmmGhcOptions";
"ghcjsVersionImplInfo" -> "componentCxxGhcOptions";
"ghcjsVersionImplInfo" -> "componentGhcOptions";
"ghcjsVersionImplInfo" -> "configureToolchain";
"ghcjsVersionImplInfo" -> "filterGhciFlags";
"ghcjsVersionImplInfo" -> "getExtensions";
"ghcjsVersionImplInfo" -> "getGhcInfo";
"ghcjsVersionImplInfo" -> "getHaskellObjects";
"ghcjsVersionImplInfo" -> "getLanguages";
"ghcjsVersionImplInfo" -> "ghcArchString";
"ghcjsVersionImplInfo" -> "ghcEnvironmentFileName";
"ghcjsVersionImplInfo" -> "ghcLookupProperty";
"ghcjsVersionImplInfo" -> "ghcOsString";
"ghcjsVersionImplInfo" -> "ghcPlatformAndVersionString";
"ghcjsVersionImplInfo" -> "mkGHCiLibName";
"ghcjsVersionImplInfo" -> "mkGHCiProfLibName";
"ghcjsVersionImplInfo" -> "mkGhcOptPackages";
"ghcjsVersionImplInfo" -> "profDetailLevelFlag";
"ghcjsVersionImplInfo" -> "renderGhcEnvironmentFile";
"ghcjsVersionImplInfo" -> "renderGhcEnvironmentFileEntry";
"ghcjsVersionImplInfo" -> "simpleGhcEnvironmentFile";
"ghcjsVersionImplInfo" -> "substTopDir";
"ghcjsVersionImplInfo" -> "targetPlatform";
"ghcjsVersionImplInfo" -> "versionNumbers";
"ghcjsVersionImplInfo" -> "writeGhcEnvironmentFile";
"globalCommand" -> "commandAddAction";
"globalCommand" -> "defaultGlobalFlags";
"globalCommand" -> "getNormalCommandDescriptions";
"globalCommand" -> "helpCommandUI";
"globalCommand" -> "length";
"globalCommand" -> "option";
"globalCommand" -> "trueArg";
"globalCommand" -> "x";
"gmappend" -> "f";
"gmappend" -> "x";
"gmempty" -> "f";
"gmempty" -> "runSnocList";
"gmempty" -> "snoc";
"goSections" -> "bench";
"goSections" -> "benchmarkFieldGrammar";
"goSections" -> "benchmarkInterface";
"goSections" -> "buildInfoFieldGrammar";
"goSections" -> "executableFieldGrammar";
"goSections" -> "fieldLineStreamFromBS";
"goSections" -> "flagFieldGrammar";
"goSections" -> "foreignLibFieldGrammar";
"goSections" -> "foreignLibType";
"goSections" -> "intercalate";
"goSections" -> "knownBenchmarkTypes";
"goSections" -> "knownForeignLibTypes";
"goSections" -> "knownTestTypes";
"goSections" -> "libraryFieldGrammar";
"goSections" -> "libraryFromBuildInfo";
"goSections" -> "map";
"goSections" -> "mkFlagName";
"goSections" -> "null";
"goSections" -> "onAllBranches";
"goSections" -> "parseCommonName";
"goSections" -> "parseCondTreeWithCommonStanzas";
"goSections" -> "parseFailure";
"goSections" -> "parseFields";
"goSections" -> "parseNameBS";
"goSections" -> "parseUnqualComponentName";
"goSections" -> "parseWarning";
"goSections" -> "prettyShow";
"goSections" -> "recoverWith";
"goSections" -> "runFieldParser\'";
"goSections" -> "setupBInfoFieldGrammar";
"goSections" -> "snoc";
"goSections" -> "sourceRepoFieldGrammar";
"goSections" -> "specHasCommonStanzas";
"goSections" -> "stateCommonStanzas";
"goSections" -> "stateGpd";
"goSections" -> "testInterface";
"goSections" -> "testSuiteFieldGrammar";
"goSections" -> "use";
"goSections" -> "validateBenchmark";
"goSections" -> "validateTestSuite";
"goSections" -> "x";
"gpdScannedVersion" -> "f";
"gpdScannedVersion" -> "s";
"gpdScannedVersion" -> "x";
"greencardProgram" -> "simpleProgram";
"guardComponentName" -> "increaseConfidence";
"guardComponentName" -> "matchErrorExpected";
"guardComponentName" -> "null";
"guardComponentName" -> "s";
"guardModuleName" -> "increaseConfidence";
"guardModuleName" -> "matchErrorExpected";
"guardModuleName" -> "null";
"guardModuleName" -> "s";
"guardModuleName" -> "validModuleChar";
"guessGhcPkgFromGhcPath" -> "ghcPkgProgram";
"guessGhcPkgFromGhcPath" -> "guessToolFromGhcPath";
"guessGhcjsPkgFromGhcjsPath" -> "ghcjsPkgProgram";
"guessGhcjsPkgFromGhcjsPath" -> "guessToolFromGhcjsPath";
"guessHaddockFromGhcPath" -> "guessToolFromGhcPath";
"guessHaddockFromGhcPath" -> "haddockProgram";
"guessHaddockFromGhcjsPath" -> "guessToolFromGhcjsPath";
"guessHaddockFromGhcjsPath" -> "haddockProgram";
"guessHpcFromGhcPath" -> "guessToolFromGhcPath";
"guessHpcFromGhcPath" -> "hpcProgram";
"guessHpcFromGhcjsPath" -> "guessToolFromGhcjsPath";
"guessHpcFromGhcjsPath" -> "hpcProgram";
"guessHsc2hsFromGhcPath" -> "guessToolFromGhcPath";
"guessHsc2hsFromGhcPath" -> "hsc2hsProgram";
"guessHsc2hsFromGhcjsPath" -> "guessToolFromGhcjsPath";
"guessHsc2hsFromGhcjsPath" -> "hsc2hsProgram";
"guessRunghcFromGhcPath" -> "guessToolFromGhcPath";
"guessRunghcFromGhcPath" -> "runghcProgram";
"guessToolFromGhcPath" -> "buildPlatform";
"guessToolFromGhcPath" -> "debug";
"guessToolFromGhcPath" -> "dropExeExtension";
"guessToolFromGhcPath" -> "exeExtension";
"guessToolFromGhcPath" -> "info";
"guessToolFromGhcPath" -> "map";
"guessToolFromGhcPath" -> "null";
"guessToolFromGhcPath" -> "programPath";
"guessToolFromGhcPath" -> "takeWhileEndLE";
"guessToolFromGhcjsPath" -> "buildPlatform";
"guessToolFromGhcjsPath" -> "debug";
"guessToolFromGhcjsPath" -> "dropExeExtension";
"guessToolFromGhcjsPath" -> "exeExtension";
"guessToolFromGhcjsPath" -> "info";
"guessToolFromGhcjsPath" -> "map";
"guessToolFromGhcjsPath" -> "null";
"guessToolFromGhcjsPath" -> "programPath";
"guessToolFromGhcjsPath" -> "takeWhileEndLE";
"hPutContents" -> "addProgressCtx";
"hPutContents" -> "dieProgress";
"hPutContents" -> "f";
"hPutContents" -> "infoProgress";
"hPutContents" -> "runLogProgress";
"hPutContents" -> "warnProgress";
"hPutContents" -> "x";
"haddock" -> "allTargetsInBuildOrder\'";
"haddock" -> "compToExe";
"haddock" -> "compilerCompatVersion";
"haddock" -> "componentInitialBuildSteps";
"haddock" -> "copyFileTo";
"haddock" -> "createInternalPackageDB";
"haddock" -> "debug";
"haddock" -> "defaultHscolourFlags";
"haddock" -> "defaultTempFileOptions";
"haddock" -> "die\'";
"haddock" -> "extraDocFiles";
"haddock" -> "f";
"haddock" -> "flagToMaybe";
"haddock" -> "fromExecutable";
"haddock" -> "fromFlag";
"haddock" -> "fromFlagOrDefault";
"haddock" -> "fromFlags";
"haddock" -> "fromForeignLib";
"haddock" -> "fromLibrary";
"haddock" -> "fromPackageDescription";
"haddock" -> "getGhcLibDir";
"haddock" -> "getProgramOutput";
"haddock" -> "haddockProgram";
"haddock" -> "haddockTemplateEnv";
"haddock" -> "haddockToHscolour";
"haddock" -> "hasLibs";
"haddock" -> "hscolour\'";
"haddock" -> "inplaceInstalledPackageInfo";
"haddock" -> "libName";
"haddock" -> "matchDirFileGlob";
"haddock" -> "maybeComponentInstantiatedWith";
"haddock" -> "mkAbiHash";
"haddock" -> "mkVersion";
"haddock" -> "orLaterVersion";
"haddock" -> "preprocessComponent";
"haddock" -> "prettyShow";
"haddock" -> "readTargetInfos";
"haddock" -> "registerPackage";
"haddock" -> "requireProgramVersion";
"haddock" -> "runHaddock";
"haddock" -> "setupMessage\'";
"haddock" -> "simpleParsec";
"haddock" -> "specVersion";
"haddock" -> "toPathTemplate";
"haddock" -> "unDir";
"haddock" -> "warn";
"haddock" -> "withTempDirectoryEx";
"haddockAction" -> "catchIO";
"haddockAction" -> "findDistPrefOrDefault";
"haddockAction" -> "fromFlag";
"haddockAction" -> "getBuildConfig";
"haddockAction" -> "hookedAction";
"haddockAction" -> "maybeToFlag";
"haddockAction" -> "noExtraFlags";
"haddockAction" -> "rawSystemExit";
"haddockAction" -> "reconfigurePrograms";
"haddockAction" -> "toFlag";
"haddockCommand" -> "addKnownProgram";
"haddockCommand" -> "defaultHaddockFlags";
"haddockCommand" -> "emptyProgramDb";
"haddockCommand" -> "ghcProgram";
"haddockCommand" -> "haddockOptions";
"haddockCommand" -> "haddockProgram";
"haddockCommand" -> "programDbOption";
"haddockCommand" -> "programDbOptions";
"haddockCommand" -> "programDbPaths";
"haddockCommand" -> "usageAlternatives";
"haddockDirName" -> "packageName";
"haddockDirName" -> "prettyShow";
"haddockHTMLs" -> "f";
"haddockHTMLs" -> "s";
"haddockHTMLs" -> "x";
"haddockInterfaces" -> "f";
"haddockInterfaces" -> "s";
"haddockInterfaces" -> "x";
"haddockName" -> "packageName";
"haddockName" -> "prettyShow";
"haddockOptions" -> "allFlags";
"haddockOptions" -> "f";
"haddockOptions" -> "flagToList";
"haddockOptions" -> "fromPathTemplate";
"haddockOptions" -> "noArg";
"haddockOptions" -> "option";
"haddockOptions" -> "optionDistPref";
"haddockOptions" -> "optionVerbosity";
"haddockOptions" -> "reqArgFlag";
"haddockOptions" -> "reqArg\'";
"haddockOptions" -> "toFlag";
"haddockOptions" -> "toPathTemplate";
"haddockOptions" -> "trueArg";
"haddockPackageFlags" -> "die\'";
"haddockPackageFlags" -> "fromPathTemplate";
"haddockPackageFlags" -> "haddockPackagePaths";
"haddockPackageFlags" -> "haddockTemplateEnv";
"haddockPackageFlags" -> "map";
"haddockPackageFlags" -> "substPathTemplate";
"haddockPackageFlags" -> "x";
"haddockPackagePaths" -> "f";
"haddockPackagePaths" -> "intercalate";
"haddockPackagePaths" -> "map";
"haddockPackagePaths" -> "mkPackageName";
"haddockPackagePaths" -> "null";
"haddockPackagePaths" -> "pkgName";
"haddockPackagePaths" -> "prettyShow";
"haddockPref" -> "haddockDirName";
"haddockProgram" -> "findProgramVersion";
"haddockProgram" -> "simpleProgram";
"haddockTemplateEnv" -> "compilerInfo";
"haddockTemplateEnv" -> "initialPathTemplateEnv";
"haddockTemplateEnv" -> "mkLegacyUnitId";
"haddockToHscolour" -> "gmappend";
"haddockToHscolour" -> "gmempty";
"happyProgram" -> "findProgramVersion";
"happyProgram" -> "simpleProgram";
"hasBenchmarks" -> "benchmarkBuildInfo";
"hasBenchmarks" -> "benchmarks";
"hasExes" -> "executables";
"hasForeignLibs" -> "foreignLibBuildInfo";
"hasForeignLibs" -> "foreignLibs";
"hasLibs" -> "allLibraries";
"hasLibs" -> "libBuildInfo";
"hasLowerBound" -> "anaVersionRange";
"hasLowerBound" -> "anyVersion";
"hasLowerBound" -> "cataVersionRange";
"hasLowerBound" -> "earlierVersion";
"hasLowerBound" -> "embedVersionRange";
"hasLowerBound" -> "foldVersionRange";
"hasLowerBound" -> "hyloVersionRange";
"hasLowerBound" -> "intersectVersionRanges";
"hasLowerBound" -> "laterVersion";
"hasLowerBound" -> "majorBoundVersion";
"hasLowerBound" -> "majorUpperBound";
"hasLowerBound" -> "noVersion";
"hasLowerBound" -> "notThisVersion";
"hasLowerBound" -> "orEarlierVersion";
"hasLowerBound" -> "orLaterVersion";
"hasLowerBound" -> "projectVersionRange";
"hasLowerBound" -> "thisVersion";
"hasLowerBound" -> "unionVersionRanges";
"hasLowerBound" -> "versionRangeParser";
"hasLowerBound" -> "wildcardUpperBound";
"hasLowerBound" -> "withinVersion";
"hasPublicLib" -> "libBuildInfo";
"hasPublicLib" -> "library";
"hasTests" -> "testBuildInfo";
"hasTests" -> "testSuites";
"hasUpperBound" -> "foldVersionRange";
"hashModuleSubst" -> "componentCycleMsg";
"hashModuleSubst" -> "componentsGraphToList";
"hashModuleSubst" -> "dispComponentsWithDeps";
"hashModuleSubst" -> "hashToBase62";
"hashModuleSubst" -> "mkComponentsGraph";
"hashModuleSubst" -> "prettyShow";
"hashStructure" -> "f";
"hashStructure" -> "md5";
"hashStructure" -> "structureBuilder";
"hashToBase62" -> "breakMaybe";
"hashToBase62" -> "dropWhileEndLE";
"hashToBase62" -> "equating";
"hashToBase62" -> "fromUTF8BS";
"hashToBase62" -> "fromUTF8LBS";
"hashToBase62" -> "fstOf3";
"hashToBase62" -> "ignoreBOM";
"hashToBase62" -> "intercalate";
"hashToBase62" -> "isAbsoluteOnAnyPlatform";
"hashToBase62" -> "isAscii";
"hashToBase62" -> "isAsciiAlpha";
"hashToBase62" -> "isAsciiAlphaNum";
"hashToBase62" -> "isRelativeOnAnyPlatform";
"hashToBase62" -> "listUnion";
"hashToBase62" -> "listUnionRight";
"hashToBase62" -> "lowercase";
"hashToBase62" -> "normaliseLineEndings";
"hashToBase62" -> "ordNub";
"hashToBase62" -> "ordNubBy";
"hashToBase62" -> "ordNubRight";
"hashToBase62" -> "readUTF8File";
"hashToBase62" -> "s";
"hashToBase62" -> "safeHead";
"hashToBase62" -> "safeInit";
"hashToBase62" -> "safeLast";
"hashToBase62" -> "safeTail";
"hashToBase62" -> "sndOf3";
"hashToBase62" -> "spanMaybe";
"hashToBase62" -> "takeWhileEndLE";
"hashToBase62" -> "toUTF8BS";
"hashToBase62" -> "toUTF8LBS";
"hashToBase62" -> "trdOf3";
"hashToBase62" -> "unfoldrM";
"hashToBase62" -> "unintersperse";
"hashToBase62" -> "unsnoc";
"hashToBase62" -> "unsnocNE";
"hashToBase62" -> "validateUTF8";
"hashToBase62" -> "withFileContents";
"hashToBase62" -> "withUTF8FileContents";
"hashToBase62" -> "wrapLine";
"hashToBase62" -> "wrapText";
"hashToBase62" -> "writeFileAtomic";
"hashToBase62" -> "writeUTF8File";
"hashToBase62" -> "x";
"haskellSuitePkgProgram" -> "simpleProgram";
"haskellSuiteProgram" -> "simpleProgram";
"hcOptions" -> "lookupHcOptions";
"hcPkgInfo" -> "ghcPkgProgram";
"hcPkgInfo" -> "ghcjsPkgProgram";
"hcPkgInfo" -> "lookupProgram";
"hcPkgInfo" -> "mkVersion";
"hcPkgInfo" -> "versionNumbers";
"hcProfOptions" -> "lookupHcOptions";
"hcSharedOptions" -> "lookupHcOptions";
"hcStaticOptions" -> "lookupHcOptions";
"helpCommandUI" -> "mkCommandUI";
"hiddenCommand" -> "f";
"hiddenModules" -> "f";
"hiddenModules" -> "s";
"hiddenModules" -> "x";
"hide" -> "hideInvocation";
"hide" -> "runProgramInvocation";
"hideInvocation" -> "packageDbOpts";
"hideInvocation" -> "prettyShow";
"hideInvocation" -> "programInvocation";
"hideInvocation" -> "verbosityOpts";
"hmakeProgram" -> "findProgramVersion";
"hmakeProgram" -> "simpleProgram";
"homepage" -> "f";
"homepage" -> "s";
"homepage" -> "x";
"hookedAction" -> "hookedActionWithArgs";
"hookedActionWithArgs" -> "sanityCheckHookedBuildInfo";
"hookedActionWithArgs" -> "updatePackageDescription";
"hpcProgram" -> "findProgramVersion";
"hpcProgram" -> "simpleProgram";
"hsLibraries" -> "f";
"hsLibraries" -> "s";
"hsLibraries" -> "x";
"hsSourceDirsGrammar" -> "alaList";
"hsSourceDirsGrammar" -> "f";
"hsSourceDirsGrammar" -> "formatHsSourceDirs";
"hsSourceDirsGrammar" -> "set";
"hsc2hsProgram" -> "findProgramVersion";
"hsc2hsProgram" -> "simpleProgram";
"hscolour" -> "dieNoVerbosity";
"hscolour" -> "hscolour\'";
"hscolourAction" -> "findDistPrefOrDefault";
"hscolourAction" -> "fromFlag";
"hscolourAction" -> "getBuildConfig";
"hscolourAction" -> "hookedAction";
"hscolourAction" -> "maybeToFlag";
"hscolourAction" -> "toFlag";
"hscolourCommand" -> "allFlags";
"hscolourCommand" -> "defaultHscolourFlags";
"hscolourCommand" -> "f";
"hscolourCommand" -> "option";
"hscolourCommand" -> "optionDistPref";
"hscolourCommand" -> "optionVerbosity";
"hscolourCommand" -> "reqArgFlag";
"hscolourCommand" -> "trueArg";
"hscolourPref" -> "haddockPref";
"hscolourProgram" -> "findProgramOnSearchPath";
"hscolourProgram" -> "findProgramVersion";
"hscolourProgram" -> "simpleProgram";
"hscolour\'" -> "compToExe";
"hscolour\'" -> "componentInitialBuildSteps";
"hscolour\'" -> "copyFileVerbose";
"hscolour\'" -> "createDirectoryIfMissingVerbose";
"hscolour\'" -> "exeName";
"hscolour\'" -> "flagToMaybe";
"hscolour\'" -> "foreignLibName";
"hscolour\'" -> "fromFlag";
"hscolour\'" -> "getExeSourceFiles";
"hscolour\'" -> "getFLibSourceFiles";
"hscolour\'" -> "getLibSourceFiles";
"hscolour\'" -> "hscolourPref";
"hscolour\'" -> "hscolourProgram";
"hscolour\'" -> "intercalate";
"hscolour\'" -> "lookupProgramVersion";
"hscolour\'" -> "mkVersion";
"hscolour\'" -> "orLaterVersion";
"hscolour\'" -> "preprocessComponent";
"hscolour\'" -> "runProgram";
"hscolour\'" -> "s";
"hscolour\'" -> "setupMessage";
"hscolour\'" -> "unUnqualComponentName";
"hscolour\'" -> "warn";
"hscolour\'" -> "withAllComponentsInBuildOrder";
"hstoolVersion" -> "findProgramVersion";
"htmlDir" -> "hpcDir";
"hyloVersionRange" -> "cabalSpecLatest";
"hyloVersionRange" -> "f";
"hyloVersionRange" -> "prettyVersionRange";
"hyloVersionRange" -> "prettyVersionRange16";
"idstring" -> "isAsciiAlphaNum";
"ignoreConditions" -> "cAnd";
"ignoreConditions" -> "cNot";
"ignoreConditions" -> "cOr";
"ignoreConditions" -> "f";
"ignoreConditions" -> "ignoreConditions";
"ignoreConditions" -> "simplifyCondition";
"importDirs" -> "f";
"importDirs" -> "s";
"importDirs" -> "x";
"inLexerMode" -> "in_section";
"inLexerMode" -> "setLexerMode";
"inLexerMode" -> "x";
"inWord16" -> "x";
"includeDirs" -> "f";
"includeDirs" -> "s";
"includeDirs" -> "x";
"includes" -> "f";
"includes" -> "s";
"includes" -> "x";
"increaseConfidenceFor" -> "increaseConfidence";
"indefinite" -> "f";
"indefinite" -> "s";
"indefinite" -> "x";
"indentOfAtLeast" -> "tokIndent";
"infixl" -> "f";
"infixl" -> "x";
"infixr" -> "catchExit";
"infixr" -> "catchIO";
"infixr" -> "displayException";
"infixr" -> "eof";
"infixr" -> "find";
"infixr" -> "foldl1";
"infixr" -> "foldr1";
"infixr" -> "genericRnf";
"infixr" -> "gmappend";
"infixr" -> "gmempty";
"infixr" -> "init";
"infixr" -> "intercalate";
"infixr" -> "l";
"infixr" -> "length";
"infixr" -> "null";
"infixr" -> "s";
"infixr" -> "toList";
"infixr" -> "trace";
"infixr" -> "traceShow";
"infixr" -> "traceShowId";
"infixr" -> "tryIO";
"infixr" -> "typeRep";
"infixr" -> "x";
"info" -> "verbose";
"info" -> "verbosityHandle";
"info" -> "withFrozenCallStack";
"info" -> "withMetadata";
"info" -> "wrapTextVerbosity";
"infoNoWrap" -> "verbose";
"infoNoWrap" -> "verbosityHandle";
"infoNoWrap" -> "withFrozenCallStack";
"infoNoWrap" -> "withMetadata";
"infoProgress" -> "s";
"infoProgress" -> "stepProgress";
"infoProgress" -> "verbose";
"init" -> "initInvocation";
"init" -> "runProgramInvocation";
"initInvocation" -> "programInvocation";
"initInvocation" -> "verbosityOpts";
"initPackageDB" -> "createPackageDB";
"initPackageDB" -> "haskellSuitePkgProgram";
"initPackageDB" -> "runDbProgram";
"initialBuildSteps" -> "componentInitialBuildSteps";
"initialBuildSteps" -> "withAllComponentsInBuildOrder";
"initialPathTemplateEnv" -> "abiTemplateEnv";
"initialPathTemplateEnv" -> "compilerTemplateEnv";
"initialPathTemplateEnv" -> "packageTemplateEnv";
"initialPathTemplateEnv" -> "platformTemplateEnv";
"inlines" -> "lines\'";
"inlines" -> "s";
"inplaceInstalledPackageInfo" -> "absoluteComponentInstallDirs";
"inplaceInstalledPackageInfo" -> "componentBuildDir";
"inplaceInstalledPackageInfo" -> "dataDir";
"inplaceInstalledPackageInfo" -> "generalInstalledPackageInfo";
"inplaceInstalledPackageInfo" -> "packageName";
"inplaceInstalledPackageInfo" -> "prettyShow";
"inplacePackageDbPath" -> "emptyUserHooks";
"insert" -> "equating";
"insert" -> "fromMap";
"insert" -> "installedUnitId";
"insert" -> "mkPackageIndex";
"insert" -> "packageName";
"insert" -> "packageVersion";
"insert" -> "toMap";
"insert" -> "x";
"insertFlagAssignment" -> "combineFlagValues";
"insertInterval" -> "unionVersionIntervals";
"install" -> "copyComponent";
"install" -> "copyPackage";
"install" -> "die\'";
"install" -> "fromFlag";
"install" -> "hasExes";
"install" -> "hasForeignLibs";
"install" -> "hasLibs";
"install" -> "map";
"install" -> "readTargetInfos";
"install" -> "withNeededTargetsInBuildOrder\'";
"installAction" -> "findDistPrefOrDefault";
"installAction" -> "fromFlag";
"installAction" -> "getBuildConfig";
"installAction" -> "hookedAction";
"installAction" -> "maybeToFlag";
"installAction" -> "noExtraFlags";
"installAction" -> "rawSystemExit";
"installAction" -> "toFlag";
"installCommand" -> "defaultInstallFlags";
"installCommand" -> "installOptions";
"installCommand" -> "wrapText";
"installDataFiles" -> "createDirectoryIfMissingVerbose";
"installDataFiles" -> "dataDir";
"installDataFiles" -> "dataFiles";
"installDataFiles" -> "installOrdinaryFile";
"installDataFiles" -> "matchDirFileGlob";
"installDataFiles" -> "null";
"installDataFiles" -> "specVersion";
"installDirectoryContents" -> "f";
"installDirectoryContents" -> "getDirectoryContentsRecursive";
"installDirectoryContents" -> "info";
"installDirectoryContents" -> "installOrdinaryFiles";
"installDirectoryContents" -> "withFrozenCallStack";
"installDirsOptions" -> "fromPathTemplate";
"installDirsOptions" -> "option";
"installDirsOptions" -> "reqArgFlag";
"installDirsOptions" -> "set";
"installDirsOptions" -> "toPathTemplate";
"installDirsTemplateEnv" -> "s";
"installExe" -> "createDirectoryIfMissingVerbose";
"installExe" -> "exeExtension";
"installExe" -> "exeName";
"installExe" -> "exeTargetName";
"installExe" -> "ghcjsProgram";
"installExe" -> "installExecutableFile";
"installExe" -> "lookupProgram";
"installExe" -> "programPath";
"installExe" -> "runDbProgram";
"installExe" -> "stripProgram";
"installExe" -> "unUnqualComponentName";
"installExecutableFile" -> "copyExecutableFile";
"installExecutableFile" -> "info";
"installExecutableFile" -> "withFrozenCallStack";
"installExecutableFiles" -> "copyFilesWith";
"installExecutableFiles" -> "installExecutableFile";
"installExecutableFiles" -> "withFrozenCallStack";
"installFLib" -> "createDirectoryIfMissingVerbose";
"installFLib" -> "die\'";
"installFLib" -> "flibBuildName";
"installFLib" -> "flibTargetName";
"installFLib" -> "foreignLibIsShared";
"installFLib" -> "foreignLibName";
"installFLib" -> "foreignLibVersion";
"installFLib" -> "install";
"installFLib" -> "installExecutableFile";
"installFLib" -> "installOrdinaryFile";
"installFLib" -> "null";
"installFLib" -> "unUnqualComponentName";
"installFLib" -> "withTempDirectory";
"installIncludeFiles" -> "abiTemplateEnv";
"installIncludeFiles" -> "absoluteInstallDirs";
"installIncludeFiles" -> "combineInstallDirs";
"installIncludeFiles" -> "combinePathTemplate";
"installIncludeFiles" -> "compilerTemplateEnv";
"installIncludeFiles" -> "createDirectoryIfMissingVerbose";
"installIncludeFiles" -> "defaultInstallDirs";
"installIncludeFiles" -> "defaultInstallDirs\'";
"installIncludeFiles" -> "die\'";
"installIncludeFiles" -> "fromPathTemplate";
"installIncludeFiles" -> "gmappend";
"installIncludeFiles" -> "gmempty";
"installIncludeFiles" -> "includeDirs";
"installIncludeFiles" -> "initialPathTemplateEnv";
"installIncludeFiles" -> "installDirsTemplateEnv";
"installIncludeFiles" -> "installOrdinaryFile";
"installIncludeFiles" -> "packageTemplateEnv";
"installIncludeFiles" -> "pathSeparator";
"installIncludeFiles" -> "platformTemplateEnv";
"installIncludeFiles" -> "prefixRelativeInstallDirs";
"installIncludeFiles" -> "substPathTemplate";
"installIncludeFiles" -> "substituteInstallDirTemplates";
"installIncludeFiles" -> "toPathTemplate";
"installLib" -> "allLibModules";
"installLib" -> "componentBuildDir";
"installLib" -> "componentIsIndefinite";
"installLib" -> "createDirectoryIfMissingVerbose";
"installLib" -> "f";
"installLib" -> "findModuleFilesEx";
"installLib" -> "getHSLibraryName";
"installLib" -> "haskellSuitePkgProgram";
"installLib" -> "install";
"installLib" -> "installDirectoryContents";
"installLib" -> "installExecutableFile";
"installLib" -> "installOrdinaryFile";
"installLib" -> "installOrdinaryFiles";
"installLib" -> "l";
"installLib" -> "libBuildInfo";
"installLib" -> "map";
"installLib" -> "mkGenericSharedBundledLibName";
"installLib" -> "mkGenericSharedLibName";
"installLib" -> "mkGenericStaticLibName";
"installLib" -> "mkProfLibName";
"installLib" -> "null";
"installLib" -> "prettyShow";
"installLib" -> "runDbProgram";
"installLib" -> "specVersion";
"installLib" -> "toJSLibName";
"installMaybeExecutableFile" -> "installExecutableFile";
"installMaybeExecutableFile" -> "installOrdinaryFile";
"installMaybeExecutableFile" -> "withFrozenCallStack";
"installMaybeExecutableFiles" -> "copyFilesWith";
"installMaybeExecutableFiles" -> "installMaybeExecutableFile";
"installMaybeExecutableFiles" -> "withFrozenCallStack";
"installOptions" -> "boolOpt";
"installOptions" -> "choiceOpt";
"installOptions" -> "f";
"installOptions" -> "option";
"installOptions" -> "optionDistPref";
"installOptions" -> "optionVerbosity";
"installOptions" -> "reqArg";
"installOptions" -> "succeedReadE";
"installOptions" -> "trueArg";
"installOrdinaryFile" -> "copyOrdinaryFile";
"installOrdinaryFile" -> "info";
"installOrdinaryFile" -> "withFrozenCallStack";
"installOrdinaryFiles" -> "copyFilesWith";
"installOrdinaryFiles" -> "installOrdinaryFile";
"installOrdinaryFiles" -> "withFrozenCallStack";
"installedComponentId" -> "installedComponentId_";
"installedComponentId" -> "installedUnitId";
"installedComponentId" -> "mkComponentId";
"installedComponentId" -> "unComponentId";
"installedComponentId" -> "unUnitId";
"installedComponentId_" -> "f";
"installedComponentId_" -> "s";
"installedComponentId_" -> "x";
"installedOpenUnitId" -> "installedComponentId";
"installedOpenUnitId" -> "installedUnitId";
"installedOpenUnitId" -> "instantiatedWith";
"installedOpenUnitId" -> "mkOpenUnitId";
"installedUnitId" -> "f";
"installedUnitId" -> "s";
"installedUnitId" -> "x";
"instantiatedWith" -> "f";
"instantiatedWith" -> "s";
"instantiatedWith" -> "x";
"intToVerbosity" -> "mkVerbosity";
"intToVerbosity" -> "parsecVerbosity";
"intToVerbosity" -> "showForCabal";
"integral" -> "f";
"integral" -> "satisfyRange";
"intercalate" -> "buildArch";
"intercalate" -> "buildOS";
"intercalate" -> "buildPlatform";
"intercalate" -> "classifyArch";
"intercalate" -> "classifyOS";
"intercalate" -> "knownArches";
"intercalate" -> "knownOSs";
"intercalate" -> "platformFromTriple";
"intercalate" -> "showString\'";
"intercalate" -> "x";
"internalError" -> "addKnownProgram";
"internalError" -> "addKnownPrograms";
"internalError" -> "alexProgram";
"internalError" -> "arProgram";
"internalError" -> "builtinPrograms";
"internalError" -> "c2hsProgram";
"internalError" -> "configureAllKnownPrograms";
"internalError" -> "configureProgram";
"internalError" -> "cppProgram";
"internalError" -> "cpphsProgram";
"internalError" -> "defaultProgramDb";
"internalError" -> "defaultProgramSearchPath";
"internalError" -> "doctestProgram";
"internalError" -> "emptyProgramDb";
"internalError" -> "emptyProgramInvocation";
"internalError" -> "findProgramOnSearchPath";
"internalError" -> "findProgramVersion";
"internalError" -> "gccProgram";
"internalError" -> "getDbProgramOutput";
"internalError" -> "getProgramInvocationLBS";
"internalError" -> "getProgramInvocationOutput";
"internalError" -> "getProgramOutput";
"internalError" -> "getProgramSearchPath";
"internalError" -> "ghcPkgProgram";
"internalError" -> "ghcProgram";
"internalError" -> "ghcjsPkgProgram";
"internalError" -> "ghcjsProgram";
"internalError" -> "greencardProgram";
"internalError" -> "haddockProgram";
"internalError" -> "happyProgram";
"internalError" -> "hmakeProgram";
"internalError" -> "hpcProgram";
"internalError" -> "hsc2hsProgram";
"internalError" -> "hscolourProgram";
"internalError" -> "jhcProgram";
"internalError" -> "knownPrograms";
"internalError" -> "ldProgram";
"internalError" -> "lookupKnownProgram";
"internalError" -> "lookupProgram";
"internalError" -> "lookupProgramVersion";
"internalError" -> "needProgram";
"internalError" -> "pkgConfigProgram";
"internalError" -> "programInvocation";
"internalError" -> "programPath";
"internalError" -> "reconfigurePrograms";
"internalError" -> "requireProgram";
"internalError" -> "requireProgramVersion";
"internalError" -> "restoreProgramDb";
"internalError" -> "runDbProgram";
"internalError" -> "runProgram";
"internalError" -> "runProgramInvocation";
"internalError" -> "setProgramSearchPath";
"internalError" -> "simpleProgram";
"internalError" -> "simpleProgramInvocation";
"internalError" -> "stripProgram";
"internalError" -> "suppressOverrideArgs";
"internalError" -> "tarProgram";
"internalError" -> "uhcProgram";
"internalError" -> "updateProgram";
"internalError" -> "userMaybeSpecifyPath";
"internalError" -> "userSpecifiedArgs";
"internalError" -> "userSpecifyArgs";
"internalError" -> "userSpecifyArgss";
"internalError" -> "userSpecifyPath";
"internalError" -> "userSpecifyPaths";
"internalPackageDBPath" -> "benchmarkCommand";
"internalPackageDBPath" -> "benchmarkOptions\'";
"internalPackageDBPath" -> "boolOpt";
"internalPackageDBPath" -> "boolOpt\'";
"internalPackageDBPath" -> "buildCommand";
"internalPackageDBPath" -> "buildOptions";
"internalPackageDBPath" -> "cleanCommand";
"internalPackageDBPath" -> "compilerFlavor";
"internalPackageDBPath" -> "configAbsolutePaths";
"internalPackageDBPath" -> "configPrograms";
"internalPackageDBPath" -> "configureArgs";
"internalPackageDBPath" -> "configureCCompiler";
"internalPackageDBPath" -> "configureCommand";
"internalPackageDBPath" -> "configureLinker";
"internalPackageDBPath" -> "configureOptions";
"internalPackageDBPath" -> "copyCommand";
"internalPackageDBPath" -> "defaultBenchmarkFlags";
"internalPackageDBPath" -> "defaultBuildFlags";
"internalPackageDBPath" -> "defaultCleanFlags";
"internalPackageDBPath" -> "defaultConfigFlags";
"internalPackageDBPath" -> "defaultCopyFlags";
"internalPackageDBPath" -> "defaultDistPref";
"internalPackageDBPath" -> "defaultGlobalFlags";
"internalPackageDBPath" -> "defaultHaddockFlags";
"internalPackageDBPath" -> "defaultHscolourFlags";
"internalPackageDBPath" -> "defaultInstallFlags";
"internalPackageDBPath" -> "defaultRegisterFlags";
"internalPackageDBPath" -> "defaultReplFlags";
"internalPackageDBPath" -> "defaultSDistFlags";
"internalPackageDBPath" -> "defaultShowBuildFlags";
"internalPackageDBPath" -> "defaultTestFlags";
"internalPackageDBPath" -> "emptyBenchmarkFlags";
"internalPackageDBPath" -> "emptyBuildFlags";
"internalPackageDBPath" -> "emptyCleanFlags";
"internalPackageDBPath" -> "emptyConfigFlags";
"internalPackageDBPath" -> "emptyCopyFlags";
"internalPackageDBPath" -> "emptyGlobalFlags";
"internalPackageDBPath" -> "emptyHaddockFlags";
"internalPackageDBPath" -> "emptyHscolourFlags";
"internalPackageDBPath" -> "emptyInstallFlags";
"internalPackageDBPath" -> "emptyRegisterFlags";
"internalPackageDBPath" -> "emptySDistFlags";
"internalPackageDBPath" -> "emptyTestFlags";
"internalPackageDBPath" -> "falseArg";
"internalPackageDBPath" -> "flagToList";
"internalPackageDBPath" -> "flagToMaybe";
"internalPackageDBPath" -> "fromFlag";
"internalPackageDBPath" -> "fromFlagOrDefault";
"internalPackageDBPath" -> "globalCommand";
"internalPackageDBPath" -> "haddockCommand";
"internalPackageDBPath" -> "haddockOptions";
"internalPackageDBPath" -> "hscolourCommand";
"internalPackageDBPath" -> "installCommand";
"internalPackageDBPath" -> "installDirsOptions";
"internalPackageDBPath" -> "maybeToFlag";
"internalPackageDBPath" -> "optionDistPref";
"internalPackageDBPath" -> "optionNumJobs";
"internalPackageDBPath" -> "optionVerbosity";
"internalPackageDBPath" -> "programDbOptions";
"internalPackageDBPath" -> "programDbPaths\'";
"internalPackageDBPath" -> "programFlagsDescription";
"internalPackageDBPath" -> "readPackageDbList";
"internalPackageDBPath" -> "registerCommand";
"internalPackageDBPath" -> "replCommand";
"internalPackageDBPath" -> "replOptions";
"internalPackageDBPath" -> "sdistCommand";
"internalPackageDBPath" -> "showBuildInfoCommand";
"internalPackageDBPath" -> "showPackageDbList";
"internalPackageDBPath" -> "splitArgs";
"internalPackageDBPath" -> "testCommand";
"internalPackageDBPath" -> "testOptions\'";
"internalPackageDBPath" -> "toFlag";
"internalPackageDBPath" -> "trueArg";
"internalPackageDBPath" -> "unregisterCommand";
"interpModuleRenaming" -> "s";
"intersectInterval" -> "doesNotIntersect";
"intersectInterval" -> "intersectLower";
"intersectInterval" -> "intersectUpper";
"intersectInterval" -> "lower";
"intersectInterval" -> "upper";
"intersectLower" -> "intersectBound";
"intersectUpper" -> "intersectBound";
"intersectVersionIntervals" -> "checkInvariant";
"intersectVersionIntervals" -> "intersectInterval";
"intersectVersionRangesAndJoinComponents" -> "intersectVersionRanges";
"intervalToVersionRange" -> "earlierVersion";
"intervalToVersionRange" -> "intersectVersionRanges";
"intervalToVersionRange" -> "isVersion0";
"intervalToVersionRange" -> "laterVersion";
"intervalToVersionRange" -> "orEarlierVersion";
"intervalToVersionRange" -> "orLaterVersion";
"intervalToVersionRange" -> "thisVersion";
"invariant" -> "doesNotTouch";
"invariant" -> "equating";
"invariant" -> "installedUnitId";
"invariant" -> "length";
"invariant" -> "map";
"invariant" -> "packageName";
"invariant" -> "packageVersion";
"invariant" -> "validInterval";
"invariantVersionIntervals" -> "doesNotTouch";
"invariantVersionIntervals" -> "validInterval";
"invertVersionIntervals" -> "mkVersion";
"invocationAsBatchFile" -> "iodataToText";
"invocationAsBatchFile" -> "map";
"invocationAsBatchFile" -> "quote";
"invocationAsBatchFile" -> "s";
"invocationAsBatchFile" -> "setEnv";
"invocationAsShellScript" -> "iodataToText";
"invocationAsShellScript" -> "map";
"invocationAsShellScript" -> "quote";
"invocationAsShellScript" -> "s";
"invocationAsShellScript" -> "setEnv";
"invocationAsSystemScript" -> "invocationAsBatchFile";
"invocationAsSystemScript" -> "invocationAsShellScript";
"invoke" -> "packageDbStackOpts";
"invoke" -> "programInvocation";
"invoke" -> "runProgramInvocation";
"invokeHcPkg" -> "withHcPkg";
"iodataToText" -> "fromUTF8LBS";
"ipiFieldGrammar" -> "alaList";
"ipiFieldGrammar" -> "alaList\'";
"ipiFieldGrammar" -> "basic";
"ipiFieldGrammar" -> "basicFieldGrammar";
"ipiFieldGrammar" -> "combineLibraryName";
"ipiFieldGrammar" -> "mkAbiHash";
"ipiFieldGrammar" -> "mkComponentId";
"ipiFieldGrammar" -> "mkInstalledPackageInfo";
"ipiFieldGrammar" -> "mkUnitId";
"ipiFieldGrammar" -> "optionalFieldDef";
"ipiFieldGrammar" -> "unitedList";
"ipiToPreExistingComponent" -> "installedUnitId";
"ipiToPreExistingComponent" -> "mixLinkPreModuleShape";
"ipiToPreExistingComponent" -> "packageName";
"ipiToPreExistingComponent" -> "renamePreModuleShape";
"ipiToPreExistingComponent" -> "shapeInstalledPackage";
"ipiToPreExistingComponent" -> "toPreModuleShape";
"isAlpha8" -> "anyPkgconfigVersion";
"isAlpha8" -> "isAnyPkgconfigVersion";
"isAlpha8" -> "pkgconfigParser";
"isAlpha8" -> "versionRangeParser";
"isAlpha8" -> "versionRangeToPkgconfigVersionRange";
"isAlpha8" -> "versionToPkgconfigVersion";
"isAlpha8" -> "withinPkgconfigVersionRange";
"isAnyVersion" -> "asVersionIntervals";
"isAnyVersion" -> "version0";
"isAnyVersionLight" -> "version0";
"isAsciiAlphaNum" -> "isAscii";
"isDefaultIncludeRenaming" -> "abiDepends";
"isDefaultIncludeRenaming" -> "abiHash";
"isDefaultIncludeRenaming" -> "author";
"isDefaultIncludeRenaming" -> "category";
"isDefaultIncludeRenaming" -> "ccOptions";
"isDefaultIncludeRenaming" -> "compatPackageKey";
"isDefaultIncludeRenaming" -> "copyright";
"isDefaultIncludeRenaming" -> "cxxOptions";
"isDefaultIncludeRenaming" -> "dataDir";
"isDefaultIncludeRenaming" -> "defaultRenaming";
"isDefaultIncludeRenaming" -> "depends";
"isDefaultIncludeRenaming" -> "description";
"isDefaultIncludeRenaming" -> "emptyInstalledPackageInfo";
"isDefaultIncludeRenaming" -> "exposed";
"isDefaultIncludeRenaming" -> "exposedModules";
"isDefaultIncludeRenaming" -> "extraGHCiLibraries";
"isDefaultIncludeRenaming" -> "extraLibraries";
"isDefaultIncludeRenaming" -> "frameworkDirs";
"isDefaultIncludeRenaming" -> "frameworks";
"isDefaultIncludeRenaming" -> "haddockHTMLs";
"isDefaultIncludeRenaming" -> "haddockInterfaces";
"isDefaultIncludeRenaming" -> "hiddenModules";
"isDefaultIncludeRenaming" -> "homepage";
"isDefaultIncludeRenaming" -> "hsLibraries";
"isDefaultIncludeRenaming" -> "importDirs";
"isDefaultIncludeRenaming" -> "includeDirs";
"isDefaultIncludeRenaming" -> "includes";
"isDefaultIncludeRenaming" -> "indefinite";
"isDefaultIncludeRenaming" -> "installedComponentId_";
"isDefaultIncludeRenaming" -> "installedUnitId";
"isDefaultIncludeRenaming" -> "instantiatedWith";
"isDefaultIncludeRenaming" -> "isDefaultRenaming";
"isDefaultIncludeRenaming" -> "ldOptions";
"isDefaultIncludeRenaming" -> "libVisibility";
"isDefaultIncludeRenaming" -> "libraryDirs";
"isDefaultIncludeRenaming" -> "libraryDynDirs";
"isDefaultIncludeRenaming" -> "license";
"isDefaultIncludeRenaming" -> "maintainer";
"isDefaultIncludeRenaming" -> "mungedPackageId";
"isDefaultIncludeRenaming" -> "mungedPackageName";
"isDefaultIncludeRenaming" -> "pkgRoot";
"isDefaultIncludeRenaming" -> "pkgUrl";
"isDefaultIncludeRenaming" -> "sourceLibName";
"isDefaultIncludeRenaming" -> "sourcePackageId";
"isDefaultIncludeRenaming" -> "stability";
"isDefaultIncludeRenaming" -> "synopsis";
"isDefaultIncludeRenaming" -> "trusted";
"isDefaultRenaming" -> "lexemeParsec";
"isDefaultRenaming" -> "map";
"isDefaultRenaming" -> "moduleRenamingParsec";
"isGoodRelativeDirectoryPath" -> "addBuildableCondition";
"isGoodRelativeDirectoryPath" -> "extractCondition";
"isGoodRelativeDirectoryPath" -> "extractConditions";
"isGoodRelativeDirectoryPath" -> "finalizePD";
"isGoodRelativeDirectoryPath" -> "flattenPackageDescription";
"isGoodRelativeDirectoryPath" -> "freeVars";
"isGoodRelativeDirectoryPath" -> "mapCondTree";
"isGoodRelativeDirectoryPath" -> "mapTreeConds";
"isGoodRelativeDirectoryPath" -> "mapTreeConstrs";
"isGoodRelativeDirectoryPath" -> "mapTreeData";
"isGoodRelativeDirectoryPath" -> "parseCondition";
"isGoodRelativeDirectoryPath" -> "transformAllBuildDepends";
"isGoodRelativeDirectoryPath" -> "transformAllBuildDependsN";
"isGoodRelativeDirectoryPath" -> "transformAllBuildInfos";
"isGoodRelativeGlob" -> "f";
"isGoodRelativeGlob" -> "isGoodRelativeFilePath";
"isGoodRelativeGlob" -> "map";
"isInternal" -> "packageName";
"isNoVersion" -> "asVersionIntervals";
"isPkgDir" -> "installedPkgConfig";
"isPkgDir" -> "uhcPackageDir";
"isPrefixOfMaybe" -> "cabalSpecVersionToSPDXListVersion";
"isPrefixOfMaybe" -> "isAsciiAlphaNum";
"isPrefixOfMaybe" -> "l";
"isPrefixOfMaybe" -> "length";
"isPrefixOfMaybe" -> "licenseId";
"isPrefixOfMaybe" -> "licenseIdList";
"isPrefixOfMaybe" -> "licenseIdMigrationMessage";
"isPrefixOfMaybe" -> "licenseIsFsfLibre";
"isPrefixOfMaybe" -> "licenseIsOsiApproved";
"isPrefixOfMaybe" -> "licenseName";
"isPrefixOfMaybe" -> "mkLicenseId";
"isPrefixOfMaybe" -> "nominalStructure";
"isPrefixOfMaybe" -> "s";
"isPrefixOfMaybe" -> "set";
"isPrefixOfMaybe" -> "typeVersion";
"isPrefixOfMaybe" -> "x";
"isRelativeOnAnyPlatform" -> "hPutContents";
"isRelativeOnAnyPlatform" -> "isAbsoluteOnAnyPlatform";
"isRelativeOnAnyPlatform" -> "null";
"isRelativeOnAnyPlatform" -> "withIOData";
"isSpecificVersion" -> "asVersionIntervals";
"isVerboseCallSite" -> "isVerboseFlag";
"isVerboseCallStack" -> "isVerboseFlag";
"isVerboseFlag" -> "alterVersion";
"isVerboseFlag" -> "anaVersionRange";
"isVerboseFlag" -> "anyVersion";
"isVerboseFlag" -> "asVersionIntervals";
"isVerboseFlag" -> "cataVersionRange";
"isVerboseFlag" -> "earlierVersion";
"isVerboseFlag" -> "embedVersionRange";
"isVerboseFlag" -> "foldVersionRange";
"isVerboseFlag" -> "fromVersionIntervals";
"isVerboseFlag" -> "hasLowerBound";
"isVerboseFlag" -> "hasUpperBound";
"isVerboseFlag" -> "hyloVersionRange";
"isVerboseFlag" -> "intersectVersionRanges";
"isVerboseFlag" -> "isAnyVersion";
"isVerboseFlag" -> "isNoVersion";
"isVerboseFlag" -> "isSpecificVersion";
"isVerboseFlag" -> "laterVersion";
"isVerboseFlag" -> "majorBoundVersion";
"isVerboseFlag" -> "majorUpperBound";
"isVerboseFlag" -> "mkVersion";
"isVerboseFlag" -> "mkVersion\'";
"isVerboseFlag" -> "noVersion";
"isVerboseFlag" -> "normaliseVersionRange";
"isVerboseFlag" -> "notThisVersion";
"isVerboseFlag" -> "nullVersion";
"isVerboseFlag" -> "orEarlierVersion";
"isVerboseFlag" -> "orLaterVersion";
"isVerboseFlag" -> "projectVersionRange";
"isVerboseFlag" -> "removeLowerBound";
"isVerboseFlag" -> "removeUpperBound";
"isVerboseFlag" -> "simplifyVersionRange";
"isVerboseFlag" -> "stripParensVersionRange";
"isVerboseFlag" -> "thisVersion";
"isVerboseFlag" -> "toVersionIntervals";
"isVerboseFlag" -> "transformCaret";
"isVerboseFlag" -> "transformCaretLower";
"isVerboseFlag" -> "transformCaretUpper";
"isVerboseFlag" -> "unVersionIntervals";
"isVerboseFlag" -> "unionVersionRanges";
"isVerboseFlag" -> "version0";
"isVerboseFlag" -> "versionNumbers";
"isVerboseFlag" -> "wildcardUpperBound";
"isVerboseFlag" -> "withinRange";
"isVerboseFlag" -> "withinVersion";
"isVerboseMarkOutput" -> "isVerboseFlag";
"isVerboseNoWrap" -> "isVerboseFlag";
"isVerboseStderr" -> "isVerboseFlag";
"isVerboseTimestamp" -> "isVerboseFlag";
"isVersion0" -> "version0";
"isWildcardRange" -> "check";
"isWildcardRange" -> "versionNumbers";
"jhcProgram" -> "findProgramVersion";
"jhcProgram" -> "simpleProgram";
"keys" -> "toMap";
"keysSet" -> "toMap";
"knownBenchmarkTypes" -> "allExtensions";
"knownBenchmarkTypes" -> "allLanguages";
"knownBenchmarkTypes" -> "ccOptions";
"knownBenchmarkTypes" -> "cxxOptions";
"knownBenchmarkTypes" -> "emptyBuildInfo";
"knownBenchmarkTypes" -> "frameworks";
"knownBenchmarkTypes" -> "hcOptions";
"knownBenchmarkTypes" -> "hcProfOptions";
"knownBenchmarkTypes" -> "hcSharedOptions";
"knownBenchmarkTypes" -> "hcStaticOptions";
"knownBenchmarkTypes" -> "includeDirs";
"knownBenchmarkTypes" -> "includes";
"knownBenchmarkTypes" -> "ldOptions";
"knownBenchmarkTypes" -> "mkVersion";
"knownBenchmarkTypes" -> "parsecStandard";
"knownBenchmarkTypes" -> "usedExtensions";
"knownBenchmarkTypes" -> "usesTemplateHaskellOrQQ";
"knownBuildTypes" -> "componentBuildInfo";
"knownBuildTypes" -> "componentBuildable";
"knownBuildTypes" -> "componentName";
"knownBuildTypes" -> "f";
"knownBuildTypes" -> "foldComponent";
"knownBuildTypes" -> "l";
"knownBuildTypes" -> "partitionComponents";
"knownCompilerFlavors" -> "classifyCompilerFlavor";
"knownCompilerFlavors" -> "lowercase";
"knownExtrasHandlers" -> "ppC2hsExtras";
"knownExtrasHandlers" -> "ppHsc2hsExtras";
"knownLanguages" -> "classifyLanguage";
"knownLicenses" -> "mkVersion";
"knownRepoTypeMap" -> "knownRepoTypes";
"knownRepoTypeMap" -> "prettyShow";
"knownRepoTypeMap" -> "repoTypeAliases";
"knownSuffixHandlers" -> "ppAlex";
"knownSuffixHandlers" -> "ppC2hs";
"knownSuffixHandlers" -> "ppCpp";
"knownSuffixHandlers" -> "ppGreenCard";
"knownSuffixHandlers" -> "ppHappy";
"knownSuffixHandlers" -> "ppHsc2hs";
"knownTestShowDetails" -> "classify";
"knownTestShowDetails" -> "knownTestShowDetails";
"knownTestShowDetails" -> "lookup";
"knownTestShowDetails" -> "lowercase";
"knownTestShowDetails" -> "prettyShow";
"knownTestShowDetails" -> "x";
"knownTestTypes" -> "getHSLibraryName";
"knownTestTypes" -> "mkLegacyUnitId";
"knownTestTypes" -> "mkUnitId";
"knownTestTypes" -> "mkVersion";
"knownTestTypes" -> "newSimpleUnitId";
"knownTestTypes" -> "parsecStandard";
"knownTestTypes" -> "unUnitId";
"knownTestTypes" -> "unsafeMkDefUnitId";
"l" -> "aview";
"l" -> "f";
"l" -> "l";
"l" -> "over";
"l" -> "s";
"languageToFlag" -> "lookup";
"languageToFlags" -> "languageToFlag";
"languageToFlags" -> "map";
"languageToFlags" -> "null";
"lc_uid" -> "lc_cid";
"lc_uid" -> "lc_insts";
"ldOptions" -> "f";
"ldOptions" -> "s";
"ldOptions" -> "x";
"ldProgram" -> "simpleProgram";
"legacyParsecFlagAssignment" -> "emptyForeignLib";
"legacyParsecFlagAssignment" -> "f";
"legacyParsecFlagAssignment" -> "foreignLibBuildInfo";
"legacyParsecFlagAssignment" -> "foreignLibIsShared";
"legacyParsecFlagAssignment" -> "foreignLibModDefFile";
"legacyParsecFlagAssignment" -> "foreignLibModules";
"legacyParsecFlagAssignment" -> "foreignLibName";
"legacyParsecFlagAssignment" -> "foreignLibOptions";
"legacyParsecFlagAssignment" -> "foreignLibType";
"legacyParsecFlagAssignment" -> "foreignLibVersion";
"legacyParsecFlagAssignment" -> "foreignLibVersionInfo";
"legacyParsecFlagAssignment" -> "foreignLibVersionLinux";
"legacyParsecFlagAssignment" -> "libVersionInfoCRA";
"legacyParsecFlagAssignment" -> "libVersionMajor";
"legacyParsecFlagAssignment" -> "libVersionNumber";
"legacyParsecFlagAssignment" -> "libVersionNumberShow";
"legacyParsecFlagAssignment" -> "map";
"legacyParsecFlagAssignment" -> "mkFlagAssignment";
"legacyParsecFlagAssignment" -> "mkLibVersionInfo";
"legacyShowFlagAssignment" -> "legacyShowFlagAssignment\'";
"legacyShowFlagAssignment" -> "map";
"legacyShowFlagAssignment" -> "prettyShow";
"legacyShowFlagAssignment\'" -> "legacyShowFlagValue";
"legacyShowFlagAssignment\'" -> "map";
"legacyShowFlagAssignment\'" -> "unFlagAssignment";
"legacyShowFlagValue" -> "f";
"legacyShowFlagValue" -> "unFlagName";
"length" -> "decodeStringUtf8";
"length" -> "encodeStringUtf8";
"length" -> "fromShortText";
"lessVerbose" -> "verboseQuiet";
"lexAll" -> "lexAll";
"lexAll" -> "lexToken";
"lexToken" -> "adjustPos";
"lexToken" -> "alexScan";
"lexToken" -> "checkPosition";
"lexToken" -> "getInput";
"lexToken" -> "getPos";
"lexToken" -> "getStartCode";
"lexToken" -> "incPos";
"lexToken" -> "lexToken";
"lexToken" -> "lexicalError";
"lexToken" -> "setInput";
"lexicalError" -> "setInput";
"libAbiHash" -> "componentBuildDir";
"libAbiHash" -> "componentGhcOptions";
"libAbiHash" -> "exposedModules";
"libAbiHash" -> "getProgramInvocationOutput";
"libAbiHash" -> "ghcInvocation";
"libAbiHash" -> "ghcProgram";
"libAbiHash" -> "ghcjsProgram";
"libAbiHash" -> "hcProfOptions";
"libAbiHash" -> "hcSharedOptions";
"libAbiHash" -> "libBuildInfo";
"libAbiHash" -> "requireProgram";
"libAbiHash" -> "toFlag";
"libAbiHash" -> "toNubListR";
"libBuildInfo" -> "defaultLibName";
"libBuildInfo" -> "f";
"libBuildInfo" -> "libraryNameStanza";
"libBuildInfo" -> "libraryNameString";
"libBuildInfo" -> "maybeToLibraryName";
"libBuildInfo" -> "parsecLibraryNameComponent";
"libBuildInfo" -> "prettyLibraryNameComponent";
"libBuildInfo" -> "s";
"libBuildInfo" -> "showLibraryName";
"libBuildInfo" -> "x";
"libExposed" -> "f";
"libExposed" -> "s";
"libExposed" -> "x";
"libFieldNames" -> "fieldGrammarKnownFieldList";
"libFieldNames" -> "libraryFieldGrammar";
"libFillInDefaults" -> "biFillInDefaults";
"libFillInDefaults" -> "libBuildInfo";
"libModulesAutogen" -> "libBuildInfo";
"libName" -> "f";
"libName" -> "s";
"libName" -> "x";
"libVersionMajor" -> "f";
"libVersionMajor" -> "foreignLibBuildInfo";
"libVersionMajor" -> "foreignLibModDefFile";
"libVersionMajor" -> "foreignLibName";
"libVersionMajor" -> "foreignLibOptions";
"libVersionMajor" -> "foreignLibType";
"libVersionMajor" -> "foreignLibVersionInfo";
"libVersionMajor" -> "foreignLibVersionLinux";
"libVersionMajor" -> "l";
"libVersionMajor" -> "unUnqualComponentName";
"libVersionMajor" -> "x";
"libVersionNumberShow" -> "build";
"libVersionNumberShow" -> "libVersionNumber";
"libVisibility" -> "anyVersion";
"libVisibility" -> "emptyLibrary";
"libVisibility" -> "explicitLibModules";
"libVisibility" -> "exposedModules";
"libVisibility" -> "f";
"libVisibility" -> "intercalate";
"libVisibility" -> "l";
"libVisibility" -> "libBuildInfo";
"libVisibility" -> "libExposed";
"libVisibility" -> "libModulesAutogen";
"libVisibility" -> "libName";
"libVisibility" -> "libVisibility";
"libVisibility" -> "parsecMaybeQuoted";
"libVisibility" -> "reexportedModules";
"libVisibility" -> "s";
"libVisibility" -> "signatures";
"libVisibility" -> "toList";
"libVisibility" -> "x";
"library" -> "f";
"library" -> "s";
"library" -> "x";
"libraryDirs" -> "f";
"libraryDirs" -> "s";
"libraryDirs" -> "x";
"libraryDynDirSupported" -> "compilerFlavor";
"libraryDynDirSupported" -> "compilerVersion";
"libraryDynDirSupported" -> "mkVersion";
"libraryDynDirs" -> "f";
"libraryDynDirs" -> "s";
"libraryDynDirs" -> "x";
"libraryFieldGrammar" -> "alaList";
"libraryFieldGrammar" -> "alaList\'";
"libraryFieldGrammar" -> "buildInfoFieldGrammar";
"libraryFieldGrammar" -> "formatExposedModules";
"libraryFieldGrammar" -> "optionalFieldDef";
"libraryFromBuildInfo" -> "emptyLibrary";
"libraryFromBuildInfo" -> "libBuildInfo";
"libraryFromBuildInfo" -> "libName";
"libraryFromBuildInfo" -> "libVisibility";
"libraryNameStanza" -> "prettyShow";
"libraryVisibilitySupported" -> "compilerFlavor";
"libraryVisibilitySupported" -> "compilerVersion";
"libraryVisibilitySupported" -> "mkVersion";
"license" -> "f";
"license" -> "licenseRaw";
"license" -> "license\'";
"license" -> "s";
"license" -> "x";
"licenseDocumentRef" -> "isAsciiAlphaNum";
"licenseDocumentRef" -> "l";
"licenseExceptionIdList" -> "bulkOfLicenses";
"licenseFiles" -> "f";
"licenseFiles" -> "s";
"licenseFiles" -> "x";
"licenseFromSPDX" -> "dispOptVersion";
"licenseFromSPDX" -> "dispVersion";
"licenseFromSPDX" -> "knownLicenses";
"licenseFromSPDX" -> "l";
"licenseFromSPDX" -> "licenseToSPDX";
"licenseFromSPDX" -> "map";
"licenseFromSPDX" -> "prettyShow";
"licenseFromSPDX" -> "simpleParsec";
"licenseFromSPDX" -> "x";
"licenseIdList" -> "bulkOfLicenses";
"licenseIdMigrationMessage" -> "l";
"licenseRaw" -> "f";
"licenseRaw" -> "s";
"licenseRaw" -> "x";
"licenseToSPDX" -> "l";
"licenseToSPDX" -> "mkVersion";
"licenseToSPDX" -> "prettyShow";
"license\'" -> "licenseToSPDX";
"liftOptDescr" -> "liftSet";
"liftOptDescr" -> "set";
"liftOption" -> "liftOptDescr";
"liftOption" -> "map";
"liftOptionL" -> "l";
"liftOptionL" -> "liftOption";
"liftParsec" -> "empty";
"liftParsec" -> "eof";
"liftParsec" -> "f";
"liftParsec" -> "liftParsec";
"liftParsec" -> "x";
"liftST" -> "s";
"liftSet" -> "set";
"liftSet" -> "x";
"lines\'" -> "l";
"lines\'" -> "lines\'";
"lines_" -> "f";
"lines_" -> "failReadE";
"lines_" -> "l";
"lines_" -> "lines_";
"lines_" -> "parsecToReadE";
"lines_" -> "readEOrFail";
"lines_" -> "s";
"lines_" -> "succeedReadE";
"linkProvision" -> "addErr";
"linkProvision" -> "addErrContext";
"linkProvision" -> "convertModuleU";
"linkProvision" -> "dispModuleSource";
"linkProvision" -> "getSource";
"linkProvision" -> "getUnifEnv";
"linkProvision" -> "null";
"linkProvision" -> "s";
"linkProvision" -> "tryM";
"linkProvision" -> "unWithSource";
"linkProvision" -> "unifyModule";
"list" -> "catchIO";
"list" -> "die\'";
"list" -> "getProgramInvocationOutput";
"list" -> "listInvocation";
"list" -> "simpleParsec";
"listDirectory" -> "f";
"listInvocation" -> "packageDbOpts";
"listInvocation" -> "programInvocation";
"listInvocation" -> "silent";
"listInvocation" -> "verbosityOpts";
"listPackageSources" -> "die\'";
"listPackageSources" -> "filterAutogenModules";
"listPackageSources" -> "listPackageSources\'";
"listPackageSourcesWithDie" -> "filterAutogenModules";
"listPackageSourcesWithDie" -> "listPackageSources\'";
"listPackageSources\'" -> "allLibraries";
"listPackageSources\'" -> "allSourcesBuildInfo";
"listPackageSources\'" -> "benchmarkBuildInfo";
"listPackageSources\'" -> "benchmarkInterface";
"listPackageSources\'" -> "benchmarks";
"listPackageSources\'" -> "dataDir";
"listPackageSources\'" -> "dataFiles";
"listPackageSources\'" -> "executables";
"listPackageSources\'" -> "exposedModules";
"listPackageSources\'" -> "extraDocFiles";
"listPackageSources\'" -> "extraSrcFiles";
"listPackageSources\'" -> "f";
"listPackageSources\'" -> "findIncludeFile";
"listPackageSources\'" -> "findMainExeFile";
"listPackageSources\'" -> "findModDefFile";
"listPackageSources\'" -> "findSetupFile";
"listPackageSources\'" -> "foreignLibBuildInfo";
"listPackageSources\'" -> "foreignLibModDefFile";
"listPackageSources\'" -> "foreignLibs";
"listPackageSources\'" -> "getSymbolicPath";
"listPackageSources\'" -> "includeDirs";
"listPackageSources\'" -> "l";
"listPackageSources\'" -> "libBuildInfo";
"listPackageSources\'" -> "licenseFiles";
"listPackageSources\'" -> "map";
"listPackageSources\'" -> "matchDirFileGlobWithDie";
"listPackageSources\'" -> "modulePath";
"listPackageSources\'" -> "null";
"listPackageSources\'" -> "signatures";
"listPackageSources\'" -> "specVersion";
"listPackageSources\'" -> "testBuildInfo";
"listPackageSources\'" -> "testInterface";
"listPackageSources\'" -> "testSuites";
"listPackageSources\'" -> "tryFindPackageDescCwd";
"listUnion" -> "ordNub";
"listUnionRight" -> "ordNubRight";
"localCompatPackageKey" -> "componentNameCLBIs";
"localCompatPackageKey" -> "localPackage";
"localCompatPackageKey" -> "prettyShow";
"localComponentId" -> "componentNameCLBIs";
"localComponentId" -> "localPackage";
"localComponentId" -> "mkComponentId";
"localComponentId" -> "prettyShow";
"localPackage" -> "package";
"localPackageLog" -> "package";
"localPackageLog" -> "testName";
"localPackageLog" -> "testSuites";
"localUnitId" -> "componentNameCLBIs";
"localUnitId" -> "localPackage";
"localUnitId" -> "mkLegacyUnitId";
"longOpt" -> "errAmbig";
"longOpt" -> "errNoArg";
"longOpt" -> "errReq";
"longOpt" -> "f";
"longOpt" -> "find";
"longOpt" -> "null";
"lookup" -> "toMap";
"lookupComponent" -> "allLibraries";
"lookupComponent" -> "benchmarkName";
"lookupComponent" -> "benchmarks";
"lookupComponent" -> "exeName";
"lookupComponent" -> "executables";
"lookupComponent" -> "find";
"lookupComponent" -> "foreignLibName";
"lookupComponent" -> "foreignLibs";
"lookupComponent" -> "libName";
"lookupComponent" -> "testName";
"lookupComponent" -> "testSuites";
"lookupComponentId" -> "newSimpleUnitId";
"lookupDependency" -> "lookupInternalDependency";
"lookupHcOptions" -> "ccOptions";
"lookupHcOptions" -> "cxxOptions";
"lookupHcOptions" -> "f";
"lookupHcOptions" -> "frameworks";
"lookupHcOptions" -> "includeDirs";
"lookupHcOptions" -> "includes";
"lookupHcOptions" -> "knownBuildTypes";
"lookupHcOptions" -> "ldOptions";
"lookupHcOptions" -> "s";
"lookupHcOptions" -> "x";
"lookupInternalDependency" -> "null";
"lookupInternalDependency" -> "withinRange";
"lookupLens" -> "f";
"lookupMooEnv" -> "s";
"lookupMuEnv" -> "s";
"lookupPackageId" -> "lookupSourcePackageId";
"lookupProgramVersion" -> "configureProgram";
"lookupProgramVersion" -> "isAnyVersion";
"lookupProgramVersion" -> "l";
"lookupProgramVersion" -> "lookupProgram";
"lookupProgramVersion" -> "prettyShow";
"lookupProgramVersion" -> "withinRange";
"lookupSourcePackageId" -> "packageName";
"lookupSourcePackageId" -> "packageVersion";
"lowercase" -> "map";
"lowercase" -> "null";
"ltest" -> "execLexer";
"ltest" -> "lexAll";
"ltest" -> "s";
"ltest" -> "setStartCode";
"maintainer" -> "f";
"maintainer" -> "s";
"maintainer" -> "x";
"majorMinor" -> "map";
"majorMinor" -> "versionNumbers";
"majorMinor" -> "x";
"majorUpperBound" -> "alterVersion";
"map" -> "f";
"map" -> "x";
"mapAccumM" -> "f";
"mapAccumM" -> "overNubList";
"mapAccumM" -> "overNubListR";
"mapAccumM" -> "s";
"mapAccumM" -> "toNubList";
"mapAccumM" -> "toNubListR";
"mapAccumM" -> "x";
"mapAllBuildInfo" -> "benchmarkBuildInfo";
"mapAllBuildInfo" -> "benchmarks";
"mapAllBuildInfo" -> "executables";
"mapAllBuildInfo" -> "f";
"mapAllBuildInfo" -> "foreignLibBuildInfo";
"mapAllBuildInfo" -> "foreignLibs";
"mapAllBuildInfo" -> "libBuildInfo";
"mapAllBuildInfo" -> "library";
"mapAllBuildInfo" -> "subLibraries";
"mapAllBuildInfo" -> "test";
"mapAllBuildInfo" -> "testBuildInfo";
"mapAllBuildInfo" -> "testSuites";
"mapCondTree" -> "map";
"mapCondTree" -> "mapCondTree";
"mapTreeConds" -> "f";
"mapTreeConds" -> "mapCondTree";
"mapTreeConstrs" -> "f";
"mapTreeConstrs" -> "mapCondTree";
"mapTreeData" -> "f";
"mapTreeData" -> "mapCondTree";
"markup" -> "markupInvocation";
"markup" -> "mkVersion";
"markup" -> "null";
"markup" -> "orLaterVersion";
"markup" -> "prettyShow";
"markup" -> "runProgramInvocation";
"markup" -> "warn";
"markup" -> "withinRange";
"markupInvocation" -> "map";
"markupInvocation" -> "prettyShow";
"markupInvocation" -> "programInvocation";
"markupPackage" -> "anyVersion";
"markupPackage" -> "compilerFlavor";
"markupPackage" -> "createDirectoryIfMissingVerbose";
"markupPackage" -> "die\'";
"markupPackage" -> "fromFlag";
"markupPackage" -> "guessWay";
"markupPackage" -> "hpcProgram";
"markupPackage" -> "htmlDir";
"markupPackage" -> "info";
"markupPackage" -> "install";
"markupPackage" -> "installDirectoryContents";
"markupPackage" -> "installOrdinaryFile";
"markupPackage" -> "isInSearchPath";
"markupPackage" -> "libName";
"markupPackage" -> "main";
"markupPackage" -> "map";
"markupPackage" -> "markup";
"markupPackage" -> "mixDir";
"markupPackage" -> "notice";
"markupPackage" -> "noticeNoWrap";
"markupPackage" -> "prettyShow";
"markupPackage" -> "requireProgramVersion";
"markupPackage" -> "testModules";
"markupPackage" -> "testName";
"markupPackage" -> "tixFilePath";
"markupPackage" -> "unUnqualComponentName";
"markupPackage" -> "union";
"markupPackage" -> "warn";
"markupTest" -> "anyVersion";
"markupTest" -> "guessWay";
"markupTest" -> "hpcProgram";
"markupTest" -> "htmlDir";
"markupTest" -> "libName";
"markupTest" -> "main";
"markupTest" -> "map";
"markupTest" -> "markup";
"markupTest" -> "mixDir";
"markupTest" -> "notice";
"markupTest" -> "requireProgramVersion";
"markupTest" -> "testModules";
"markupTest" -> "testName";
"markupTest" -> "tixFilePath";
"markupTest" -> "unUnqualComponentName";
"matchBuildTarget" -> "matchBuildTarget1";
"matchBuildTarget" -> "matchBuildTarget2";
"matchBuildTarget" -> "matchBuildTarget3";
"matchBuildTarget" -> "pkgComponentInfo";
"matchBuildTarget1" -> "matchComponent1";
"matchBuildTarget1" -> "matchFile1";
"matchBuildTarget1" -> "matchModule1";
"matchBuildTarget1" -> "matchPlusShadowing";
"matchBuildTarget2" -> "matchComponent2";
"matchBuildTarget2" -> "matchFile2";
"matchBuildTarget2" -> "matchModule2";
"matchBuildTarget2" -> "matchPlusShadowing";
"matchBuildTarget3" -> "matchFile3";
"matchBuildTarget3" -> "matchModule3";
"matchBuildTarget3" -> "matchPlusShadowing";
"matchComponent1" -> "guardComponentName";
"matchComponent1" -> "matchComponentName";
"matchComponent2" -> "guardComponentName";
"matchComponent2" -> "matchComponentKind";
"matchComponent2" -> "matchComponentKindAndName";
"matchComponentFile" -> "expecting";
"matchComponentFile" -> "matchFileExists";
"matchComponentFile" -> "matchModuleFileRooted";
"matchComponentFile" -> "matchModuleFileUnrooted";
"matchComponentFile" -> "matchOtherFileRooted";
"matchComponentFile" -> "matchOtherFileUnrooted";
"matchComponentFile" -> "matchPlus";
"matchComponentFile" -> "matchPlusShadowing";
"matchComponentKind" -> "increaseConfidence";
"matchComponentKind" -> "matchErrorExpected";
"matchComponentKind" -> "s";
"matchComponentKindAndName" -> "caseFold";
"matchComponentKindAndName" -> "cinfoKind";
"matchComponentKindAndName" -> "increaseConfidenceFor";
"matchComponentKindAndName" -> "matchInexactly";
"matchComponentKindAndName" -> "orNoSuchThing";
"matchComponentKindAndName" -> "showComponentKind";
"matchComponentName" -> "caseFold";
"matchComponentName" -> "increaseConfidenceFor";
"matchComponentName" -> "matchInexactly";
"matchComponentName" -> "orNoSuchThing";
"matchDirFileGlob" -> "die\'";
"matchDirFileGlob" -> "matchDirFileGlobWithDie";
"matchDirFileGlobWithDie" -> "explainGlobSyntaxError";
"matchDirFileGlobWithDie" -> "globMatches";
"matchDirFileGlobWithDie" -> "null";
"matchDirFileGlobWithDie" -> "parseFileGlob";
"matchDirFileGlobWithDie" -> "runDirFileGlob";
"matchDirectoryPrefix" -> "empty";
"matchDirectoryPrefix" -> "exactMatches";
"matchDirectoryPrefix" -> "matchPlus";
"matchDirectoryPrefix" -> "matchZero";
"matchFile" -> "caseFold";
"matchFile" -> "f";
"matchFile" -> "increaseConfidenceFor";
"matchFile" -> "matchInexactly";
"matchFile1" -> "matchComponentFile";
"matchFile1" -> "nubMatchErrors";
"matchFile1" -> "tryEach";
"matchFile2" -> "guardComponentName";
"matchFile2" -> "matchComponentFile";
"matchFile2" -> "matchComponentName";
"matchFile3" -> "guardComponentName";
"matchFile3" -> "matchComponentFile";
"matchFile3" -> "matchComponentKind";
"matchFile3" -> "matchComponentKindAndName";
"matchFileExists" -> "increaseConfidence";
"matchFileExists" -> "matchErrorNoSuch";
"matchInexactly" -> "exactMatches";
"matchInexactly" -> "inexactMatches";
"matchInexactly" -> "matchZero";
"matchInexactly" -> "x";
"matchModule1" -> "guardModuleName";
"matchModule1" -> "matchModuleName";
"matchModule1" -> "nubMatchErrors";
"matchModule1" -> "tryEach";
"matchModule2" -> "guardComponentName";
"matchModule2" -> "guardModuleName";
"matchModule2" -> "matchComponentName";
"matchModule2" -> "matchModuleName";
"matchModule3" -> "guardComponentName";
"matchModule3" -> "guardModuleName";
"matchModule3" -> "matchComponentKind";
"matchModule3" -> "matchComponentKindAndName";
"matchModule3" -> "matchModuleName";
"matchModuleFileRooted" -> "matchDirectoryPrefix";
"matchModuleFileRooted" -> "matchModuleFileStem";
"matchModuleFileRooted" -> "nubMatches";
"matchModuleFileStem" -> "caseFold";
"matchModuleFileStem" -> "increaseConfidenceFor";
"matchModuleFileStem" -> "matchInexactly";
"matchModuleFileStem" -> "toFilePath";
"matchModuleFileUnrooted" -> "matchModuleFileStem";
"matchModuleName" -> "caseFold";
"matchModuleName" -> "increaseConfidenceFor";
"matchModuleName" -> "matchInexactly";
"matchModuleName" -> "orNoSuchThing";
"matchModuleName" -> "prettyShow";
"matchOtherFileRooted" -> "matchDirectoryPrefix";
"matchOtherFileRooted" -> "matchFile";
"matchOtherFileUnrooted" -> "matchFile";
"matchPlusShadowing" -> "addDepth";
"matchPlusShadowing" -> "f";
"matchPlusShadowing" -> "forceInexact";
"matchPlusShadowing" -> "map";
"matchPlusShadowing" -> "matchPlus";
"matchPlusShadowing" -> "matchZero";
"maxCommandLineSize" -> "invocationAsBatchFile";
"maxCommandLineSize" -> "invocationAsShellScript";
"maxCommandLineSize" -> "invocationAsSystemScript";
"maybeComponentInstantiatedWith" -> "componentNameStanza";
"maybeComponentInstantiatedWith" -> "componentNameString";
"maybeComponentInstantiatedWith" -> "parsecLibraryNameComponent";
"maybeComponentInstantiatedWith" -> "prettyLibraryNameComponent";
"maybeComponentInstantiatedWith" -> "showComponentName";
"maybeCreateDefaultSetupScript" -> "findSetupFile";
"maybeCreateDefaultSetupScript" -> "writeUTF8File";
"maybeGetPersistBuildConfig" -> "tryGetPersistBuildConfig";
"maybePackageName" -> "dispOpenModuleSubst";
"maybePackageName" -> "packageName";
"maybePackageName" -> "parsecOpenModuleSubst";
"maybePackageName" -> "parsecOptCommaList";
"maybePackageName" -> "showExposedModules";
"maybePackageName" -> "sourceLibName";
"maybeToFlag" -> "buildExe";
"maybeToFlag" -> "buildFLib";
"maybeToFlag" -> "buildLib";
"maybeToFlag" -> "componentCcGhcOptions";
"maybeToFlag" -> "componentGhcOptions";
"maybeToFlag" -> "configure";
"maybeToFlag" -> "getGhcAppDir";
"maybeToFlag" -> "getGhcInfo";
"maybeToFlag" -> "getGlobalPackageDB";
"maybeToFlag" -> "getImplInfo";
"maybeToFlag" -> "getInstalledPackages";
"maybeToFlag" -> "getInstalledPackagesMonitorFiles";
"maybeToFlag" -> "getLibDir";
"maybeToFlag" -> "getPackageDBContents";
"maybeToFlag" -> "hcPkgInfo";
"maybeToFlag" -> "installExe";
"maybeToFlag" -> "installFLib";
"maybeToFlag" -> "installLib";
"maybeToFlag" -> "isDynamic";
"maybeToFlag" -> "libAbiHash";
"maybeToFlag" -> "parseGhcEnvironmentFile";
"maybeToFlag" -> "pkgRoot";
"maybeToFlag" -> "readGhcEnvironmentFile";
"maybeToFlag" -> "registerPackage";
"maybeToFlag" -> "replExe";
"maybeToFlag" -> "replFLib";
"maybeToFlag" -> "replLib";
"maybeToFlag" -> "startInterpreter";
"maybeToFlag" -> "x";
"maybeToLibraryName" -> "allTargetsInBuildOrder";
"maybeToLibraryName" -> "allTargetsInBuildOrder\'";
"maybeToLibraryName" -> "componentNameCLBIs";
"maybeToLibraryName" -> "componentNameTargets";
"maybeToLibraryName" -> "componentNameTargets\'";
"maybeToLibraryName" -> "localCompatPackageKey";
"maybeToLibraryName" -> "localComponentId";
"maybeToLibraryName" -> "localPackage";
"maybeToLibraryName" -> "localUnitId";
"maybeToLibraryName" -> "neededTargetsInBuildOrder";
"maybeToLibraryName" -> "neededTargetsInBuildOrder\'";
"maybeToLibraryName" -> "prefixRelativeInstallDirs";
"maybeToLibraryName" -> "substPathTemplate";
"maybeToLibraryName" -> "testCoverage";
"maybeToLibraryName" -> "unitIdTarget";
"maybeToLibraryName" -> "unitIdTarget\'";
"maybeToLibraryName" -> "withAllTargetsInBuildOrder";
"maybeToLibraryName" -> "withAllTargetsInBuildOrder\'";
"maybeToLibraryName" -> "withNeededTargetsInBuildOrder";
"maybeToLibraryName" -> "withNeededTargetsInBuildOrder\'";
"md5FromInteger" -> "f";
"md5FromInteger" -> "s";
"md5FromInteger" -> "x";
"mealy" -> "f";
"mealy" -> "s";
"mealy" -> "x";
"member" -> "toMap";
"member" -> "x";
"merge" -> "equating";
"merge" -> "installedUnitId";
"merge" -> "mkPackageIndex";
"mergeCommonStanza" -> "map";
"mergeCommonStanza" -> "x";
"minLowerBound" -> "mkVersion";
"mixDir" -> "hpcDir";
"mixLink" -> "linkProvision";
"mixLink" -> "map";
"mixLinkPreModuleShape" -> "dispReadyComponent";
"mixLinkPreModuleShape" -> "map";
"mixLinkPreModuleShape" -> "rc_depends";
"mixLinkPreModuleShape" -> "rc_pkgid";
"mixLinkPreModuleShape" -> "rc_uid";
"mixLinkPreModuleShape" -> "toReadyComponents";
"mkAbiHash" -> "benchmarkBuildInfo";
"mkAbiHash" -> "benchmarkInterface";
"mkAbiHash" -> "benchmarkModules";
"mkAbiHash" -> "benchmarkModulesAutogen";
"mkAbiHash" -> "benchmarkName";
"mkAbiHash" -> "benchmarkType";
"mkAbiHash" -> "emptyBenchmark";
"mkAbiHash" -> "f";
"mkAbiHash" -> "mkAbiHash";
"mkAbiHash" -> "toShortText";
"mkAbiHash" -> "unAbiHash";
"mkAbiHash" -> "unUnqualComponentName";
"mkAbiHash" -> "x";
"mkBuildInfo" -> "cabalVersion";
"mkBuildInfo" -> "compilerFlavor";
"mkBuildInfo" -> "componentBuildInfo";
"mkBuildInfo" -> "display";
"mkBuildInfo" -> "exeModules";
"mkBuildInfo" -> "explicitLibModules";
"mkBuildInfo" -> "getCompilerArgs";
"mkBuildInfo" -> "getSymbolicPath";
"mkBuildInfo" -> "ghcProgram";
"mkBuildInfo" -> "ghcjsProgram";
"mkBuildInfo" -> "info";
"mkBuildInfo" -> "jhcProgram";
"mkBuildInfo" -> "lookupComponent";
"mkBuildInfo" -> "lookupProgram";
"mkBuildInfo" -> "map";
"mkBuildInfo" -> "modulePath";
"mkBuildInfo" -> "prettyShow";
"mkBuildInfo" -> "programPath";
"mkBuildInfo" -> "showCompilerId";
"mkBuildInfo" -> "uhcProgram";
"mkCommandUI" -> "synopsis";
"mkCommandUI" -> "usageAlternatives";
"mkComponentId" -> "toShortText";
"mkComponentsGraph" -> "componentBuildInfo";
"mkComponentsGraph" -> "componentEnabled";
"mkComponentsGraph" -> "componentName";
"mkComponentsGraph" -> "getAllInternalToolDependencies";
"mkComponentsGraph" -> "packageName";
"mkComponentsGraph" -> "pkgBuildableComponents";
"mkConfiguredComponent" -> "ci_id";
"mkConfiguredComponent" -> "componentBuildInfo";
"mkConfiguredComponent" -> "componentName";
"mkConfiguredComponent" -> "defaultIncludeRenaming";
"mkConfiguredComponent" -> "dieProgress";
"mkConfiguredComponent" -> "map";
"mkConfiguredComponent" -> "package";
"mkConfiguredComponent" -> "packageName";
"mkDefUnitId" -> "hashModuleSubst";
"mkDefUnitId" -> "mkUnitId";
"mkDefUnitId" -> "unComponentId";
"mkDefUnitId" -> "unsafeMkDefUnitId";
"mkDependency" -> "anyVersion";
"mkDependency" -> "between";
"mkDependency" -> "isAnyVersionLight";
"mkDependency" -> "l";
"mkDependency" -> "mainLibSet";
"mkDependency" -> "mkDependency";
"mkDependency" -> "option";
"mkDependency" -> "packageNameToUnqualComponentName";
"mkDependency" -> "parsecCommaNonEmpty";
"mkDependency" -> "spaces";
"mkDependency" -> "unPackageName";
"mkDependency" -> "unUnqualComponentName";
"mkDependency" -> "versionGuardMultilibs";
"mkFlagAssignment" -> "combineFlagValues";
"mkFlagName" -> "mkFlagName";
"mkFlagName" -> "toShortText";
"mkGHCiLibName" -> "getHSLibraryName";
"mkGHCiProfLibName" -> "getHSLibraryName";
"mkGenericSharedBundledLibName" -> "dllExtension";
"mkGenericSharedBundledLibName" -> "mkGenericSharedLibName";
"mkGenericSharedLibName" -> "compilerFlavor";
"mkGenericSharedLibName" -> "compilerVersion";
"mkGenericSharedLibName" -> "dllExtension";
"mkGenericSharedLibName" -> "prettyShow";
"mkHaddockArgs" -> "componentGhcOptions";
"mkHaddockArgs" -> "die\'";
"mkHaddockArgs" -> "getGhcCppOpts";
"mkHaddockArgs" -> "getInterfaces";
"mkHaddockArgs" -> "getReexports";
"mkHaddockArgs" -> "hcSharedOptions";
"mkHaddockArgs" -> "normal";
"mkHaddockArgs" -> "toFlag";
"mkInstalledPackageInfo" -> "emptyInstalledPackageInfo";
"mkInstalledPackageInfo" -> "installedUnitId";
"mkInstalledPackageInfo" -> "mkLegacyUnitId";
"mkInstalledPackageInfo" -> "sourcePackageId";
"mkLegacyUnitId" -> "mkComponentId";
"mkLegacyUnitId" -> "newSimpleUnitId";
"mkLegacyUnitId" -> "prettyShow";
"mkLexState" -> "lines\'";
"mkLexState\'" -> "lexToken";
"mkLexState\'" -> "mkLexState\'";
"mkLexState\'" -> "tok";
"mkLibName" -> "getHSLibraryName";
"mkLibName" -> "mkGenericStaticLibName";
"mkLicenseExceptionId" -> "s";
"mkLicenseExceptionId" -> "stringLookup_3_0";
"mkLicenseExceptionId" -> "stringLookup_3_10";
"mkLicenseExceptionId" -> "stringLookup_3_2";
"mkLicenseExceptionId" -> "stringLookup_3_6";
"mkLicenseExceptionId" -> "stringLookup_3_9";
"mkLicenseId" -> "s";
"mkLicenseId" -> "stringLookup_3_0";
"mkLicenseId" -> "stringLookup_3_10";
"mkLicenseId" -> "stringLookup_3_2";
"mkLicenseId" -> "stringLookup_3_6";
"mkLicenseId" -> "stringLookup_3_9";
"mkLicenseRef" -> "isAsciiAlphaNum";
"mkLicenseRef" -> "l";
"mkLicenseRef" -> "s";
"mkLicenseRef\'" -> "autoconfUserHooks";
"mkLicenseRef\'" -> "defaultMain";
"mkLicenseRef\'" -> "defaultMainArgs";
"mkLicenseRef\'" -> "defaultMainNoRead";
"mkLicenseRef\'" -> "defaultMainWithHooks";
"mkLicenseRef\'" -> "defaultMainWithHooksArgs";
"mkLicenseRef\'" -> "defaultMainWithHooksNoRead";
"mkLicenseRef\'" -> "defaultMainWithHooksNoReadArgs";
"mkLicenseRef\'" -> "emptyUserHooks";
"mkLicenseRef\'" -> "f";
"mkLicenseRef\'" -> "isAsciiAlphaNum";
"mkLicenseRef\'" -> "l";
"mkLicenseRef\'" -> "map";
"mkLicenseRef\'" -> "simpleUserHooks";
"mkLinkedComponentsLocalBuildInfo" -> "cc_cid";
"mkLinkedComponentsLocalBuildInfo" -> "cc_name";
"mkLinkedComponentsLocalBuildInfo" -> "cc_pkgid";
"mkLinkedComponentsLocalBuildInfo" -> "ci_id";
"mkLinkedComponentsLocalBuildInfo" -> "componentName";
"mkLinkedComponentsLocalBuildInfo" -> "computeCompatPackageKey";
"mkLinkedComponentsLocalBuildInfo" -> "dispConfiguredComponent";
"mkLinkedComponentsLocalBuildInfo" -> "extendConfiguredComponentMap";
"mkLinkedComponentsLocalBuildInfo" -> "includes";
"mkLinkedComponentsLocalBuildInfo" -> "isInternal";
"mkLinkedComponentsLocalBuildInfo" -> "libName";
"mkLinkedComponentsLocalBuildInfo" -> "map";
"mkLinkedComponentsLocalBuildInfo" -> "newPackageDepsBehaviour";
"mkLinkedComponentsLocalBuildInfo" -> "packageName";
"mkLinkedComponentsLocalBuildInfo" -> "packageVersion";
"mkLinkedComponentsLocalBuildInfo" -> "rc_depends";
"mkLinkedComponentsLocalBuildInfo" -> "rc_uid";
"mkLinkedComponentsLocalBuildInfo" -> "toConfiguredComponent";
"mkLinkedComponentsLocalBuildInfo" -> "toConfiguredComponents";
"mkLinkedComponentsLocalBuildInfo" -> "x";
"mkMixin" -> "packageNameToUnqualComponentName";
"mkOpenUnitId" -> "openModuleSubstFreeHoles";
"mkOpenUnitId" -> "unsafeMkDefUnitId";
"mkPackageIndex" -> "invariant";
"mkPackageName" -> "toShortText";
"mkPackageNameST" -> "mkPackageName";
"mkPackageNameST" -> "parsecUnqualComponentName";
"mkPackageNameST" -> "unPackageName";
"mkPkgconfigName" -> "isAsciiAlphaNum";
"mkPkgconfigName" -> "mkPkgconfigName";
"mkPkgconfigName" -> "rpmvercmp";
"mkPkgconfigName" -> "toShortText";
"mkPkgconfigName" -> "unPkgconfigName";
"mkPrivateDir" -> "_1";
"mkPrivateDir" -> "_2";
"mkPrivateDir" -> "aview";
"mkPrivateDir" -> "cloneLens";
"mkPrivateDir" -> "getting";
"mkPrivateDir" -> "over";
"mkPrivateDir" -> "s";
"mkPrivateDir" -> "set";
"mkPrivateDir" -> "toDListOf";
"mkPrivateDir" -> "toListOf";
"mkPrivateDir" -> "toSetOf";
"mkPrivateDir" -> "use";
"mkPrivateDir" -> "view";
"mkProfLibName" -> "getHSLibraryName";
"mkProfLibName" -> "mkGenericStaticLibName";
"mkProgramDb" -> "getProgramSearchPath";
"mkProgramDb" -> "map";
"mkProgramDb" -> "setProgramSearchPath";
"mkProgramDb" -> "userSpecifyArgss";
"mkProgramDb" -> "userSpecifyPaths";
"mkSharedLibName" -> "getHSLibraryName";
"mkSharedLibName" -> "mkGenericSharedLibName";
"mkStaticLibName" -> "compilerFlavor";
"mkStaticLibName" -> "compilerVersion";
"mkStaticLibName" -> "getHSLibraryName";
"mkStaticLibName" -> "prettyShow";
"mkStaticLibName" -> "staticLibExtension";
"mkTargetInfo" -> "getComponent";
"mkUnitId" -> "mkUnitId";
"mkUnitId" -> "toShortText";
"mkUnqualComponentName" -> "mkUnqualComponentName";
"mkUnqualComponentName" -> "parsecUnqualComponentName";
"mkUnqualComponentName" -> "showToken";
"mkUnqualComponentName" -> "toShortText";
"mkUnqualComponentName" -> "unUnqualComponentName";
"mkVerbosity" -> "l";
"mkVerbosity" -> "mkVerbosity";
"mkVerbosity" -> "x";
"mkVersion" -> "inWord16";
"mkVersion" -> "mkWord64VerRep";
"mkVersion" -> "nullVersion";
"mkVersionIntervals" -> "checkInvariant";
"mkVersionIntervals" -> "insertInterval";
"mkVersionIntervals" -> "invariant";
"mkVersionIntervals" -> "validInterval";
"mkVersion\'" -> "mkVersion";
"mkZPackage" -> "majorMinor";
"modifyProgramSearchPath" -> "f";
"modifyProgramSearchPath" -> "getProgramSearchPath";
"modifyProgramSearchPath" -> "setProgramSearchPath";
"modifyVerbosity" -> "f";
"moduleNameIndex" -> "allPackages";
"moduleNameIndex" -> "knownSuffixHandlers";
"moduleNameIndex" -> "mkSimplePreProcessor";
"moduleNameIndex" -> "platformDefines";
"moduleNameIndex" -> "ppAlex";
"moduleNameIndex" -> "ppC2hs";
"moduleNameIndex" -> "ppCpp";
"moduleNameIndex" -> "ppCpp\'";
"moduleNameIndex" -> "ppGreenCard";
"moduleNameIndex" -> "ppHappy";
"moduleNameIndex" -> "ppHsc2hs";
"moduleNameIndex" -> "ppSuffixes";
"moduleNameIndex" -> "ppUnlit";
"moduleNameIndex" -> "runSimplePreProcessor";
"modulePath" -> "f";
"modulePath" -> "s";
"modulePath" -> "x";
"moduleRenamingParsec" -> "computeCompatPackageId";
"moduleRenamingParsec" -> "decodeCompatPackageName";
"moduleRenamingParsec" -> "nullVersion";
"monoidalField" -> "l";
"monoidalField" -> "s";
"multiOption" -> "set";
"multiStageProgramInvocation" -> "length";
"multiStageProgramInvocation" -> "map";
"multiStageProgramInvocation" -> "maxCommandLineSize";
"multiStageProgramInvocation" -> "null";
"multiStageProgramInvocation" -> "s";
"multiStageProgramInvocation" -> "unsnocNE";
"multiStageProgramInvocation" -> "x";
"mungePackagePaths" -> "frameworkDirs";
"mungePackagePaths" -> "haddockHTMLs";
"mungePackagePaths" -> "haddockInterfaces";
"mungePackagePaths" -> "importDirs";
"mungePackagePaths" -> "includeDirs";
"mungePackagePaths" -> "libraryDirs";
"mungePackagePaths" -> "libraryDynDirs";
"mungePackagePaths" -> "map";
"mungedPackageId" -> "mungedPackageName";
"mungedPackageId" -> "packageVersion";
"mungedPackageName" -> "packageName";
"mungedPackageName" -> "sourceLibName";
"namelessFieldAnn" -> "s";
"needProgram" -> "configureProgram";
"needProgram" -> "lookupProgram";
"neededTargetsInBuildOrder" -> "neededTargetsInBuildOrder\'";
"neededTargetsInBuildOrder\'" -> "intercalate";
"neededTargetsInBuildOrder\'" -> "map";
"neededTargetsInBuildOrder\'" -> "mkTargetInfo";
"neededTargetsInBuildOrder\'" -> "prettyShow";
"neighbors" -> "map";
"newByteArray" -> "s";
"newPackageDepsBehaviour" -> "newPackageDepsBehaviourMinVersion";
"newPackageDepsBehaviour" -> "specVersion";
"newSimpleUnitId" -> "mkUnitId";
"newSimpleUnitId" -> "unComponentId";
"noArg" -> "choiceOpt";
"noExtraFlags" -> "dieNoVerbosity";
"noExtraFlags" -> "intercalate";
"noVersion" -> "mkVersion";
"nodeValue" -> "f";
"nominalStructure" -> "f";
"nominalStructure" -> "typeRep";
"nonEmptyInterval" -> "nonEmptyVI";
"nonEmptyVI" -> "l";
"nonExistentPackageThisIsCabalBug" -> "mkPackageName";
"normal" -> "mkVerbosity";
"normaliseGhcArgs" -> "benchmarkBuildInfo";
"normaliseGhcArgs" -> "benchmarks";
"normaliseGhcArgs" -> "earlierVersion";
"normaliseGhcArgs" -> "executables";
"normaliseGhcArgs" -> "f";
"normaliseGhcArgs" -> "intersectVersionRanges";
"normaliseGhcArgs" -> "l";
"normaliseGhcArgs" -> "libBuildInfo";
"normaliseGhcArgs" -> "library";
"normaliseGhcArgs" -> "map";
"normaliseGhcArgs" -> "mkVersion";
"normaliseGhcArgs" -> "null";
"normaliseGhcArgs" -> "orLaterVersion";
"normaliseGhcArgs" -> "perCompilerFlavorToList";
"normaliseGhcArgs" -> "s";
"normaliseGhcArgs" -> "set";
"normaliseGhcArgs" -> "subLibraries";
"normaliseGhcArgs" -> "testBuildInfo";
"normaliseGhcArgs" -> "testSuites";
"normaliseGhcArgs" -> "withinRange";
"normaliseLineEndings" -> "normaliseLineEndings";
"normaliseLineEndings" -> "s";
"normaliseMixin" -> "defaultRenaming";
"normaliseMixin" -> "interpModuleRenaming";
"normaliseMixin" -> "isDefaultRenaming";
"normaliseMixin" -> "mkMixin";
"normalisePathSeps" -> "pathSeparator";
"normaliseTrailingSep" -> "null";
"normaliseTrailingSep" -> "pathSeparator";
"normaliseVersionRange" -> "embedVersionRange";
"normaliseVersionRange" -> "hyloVersionRange";
"normaliseVersionRange" -> "orEarlierVersion";
"normaliseVersionRange" -> "orLaterVersion";
"normaliseVersionRange" -> "projectVersionRange";
"normaliseVersionRange2" -> "fromVersionIntervals";
"normaliseVersionRange2" -> "toVersionIntervals";
"notice" -> "normal";
"notice" -> "verbosityHandle";
"notice" -> "withFrozenCallStack";
"notice" -> "withMetadata";
"notice" -> "wrapTextVerbosity";
"noticeDoc" -> "defaultStyle";
"noticeDoc" -> "normal";
"noticeDoc" -> "verbosityHandle";
"noticeDoc" -> "withFrozenCallStack";
"noticeDoc" -> "withMetadata";
"noticeNoWrap" -> "normal";
"noticeNoWrap" -> "verbosityHandle";
"noticeNoWrap" -> "withFrozenCallStack";
"noticeNoWrap" -> "withMetadata";
"nubMatchErrors" -> "matchZero";
"null" -> "decodeStringUtf8";
"null" -> "encodeStringUtf8";
"null" -> "fromShortText";
"null" -> "map";
"null" -> "s";
"null" -> "toMap";
"null" -> "toShortText";
"numericVersion" -> "findProgramVersion";
"numericVersion" -> "safeLast";
"openBrace" -> "tokCloseBrace";
"openModuleFreeHoles" -> "openUnitIdFreeHoles";
"openModuleSubstFreeHoles" -> "map";
"openModuleSubstFreeHoles" -> "openModuleFreeHoles";
"openNewBinaryFile" -> "f";
"openNewBinaryFile" -> "null";
"openNewBinaryFile" -> "pathSeparator";
"openNewBinaryFile" -> "rw_flags";
"openNewBinaryFile" -> "x";
"openUnitIdFreeHoles" -> "openModuleSubstFreeHoles";
"optArg" -> "set";
"optArg\'" -> "optArg";
"optArg\'" -> "succeedReadE";
"option" -> "set";
"option" -> "x";
"optionDistPref" -> "defaultDistPref";
"optionDistPref" -> "option";
"optionDistPref" -> "reqArgFlag";
"optionDistPref" -> "set";
"optionNumJobs" -> "flagToList";
"optionNumJobs" -> "map";
"optionNumJobs" -> "optArg";
"optionNumJobs" -> "option";
"optionNumJobs" -> "s";
"optionNumJobs" -> "set";
"optionVerbosity" -> "flagToList";
"optionVerbosity" -> "flagToVerbosity";
"optionVerbosity" -> "optArg";
"optionVerbosity" -> "option";
"optionVerbosity" -> "set";
"optionVerbosity" -> "showForCabal";
"optionVerbosity" -> "verbose";
"optionalField" -> "l";
"optionalField" -> "s";
"optionalFieldDef" -> "l";
"optionalFieldDef" -> "s";
"optionalFieldDef" -> "x";
"optionsFieldGrammar" -> "alaList\'";
"optionsFieldGrammar" -> "lookupLens";
"orNoSuchThing" -> "matchErrorNoSuch";
"ordNub" -> "ordNubBy";
"ordNubBy" -> "f";
"ordNubBy" -> "l";
"ordNubBy" -> "s";
"ordNubBy" -> "x";
"ordNubRight" -> "s";
"ordNubRight" -> "x";
"osAliases" -> "classifyOS";
"osAliases" -> "lowercase";
"osAliases" -> "parsecIdent";
"output_flags" -> "output_flags";
"over" -> "f";
"over" -> "l";
"over" -> "s";
"over" -> "x";
"overNubList" -> "f";
"overNubList" -> "l";
"overNubList" -> "list";
"overNubList" -> "listUnion";
"overNubList" -> "readNubList";
"overNubList" -> "toNubList";
"overNubListR" -> "f";
"overNubListR" -> "getSymbolicPath";
"overNubListR" -> "list";
"overNubListR" -> "listUnionRight";
"overNubListR" -> "readNubList";
"overNubListR" -> "sameDirectory";
"overNubListR" -> "toNubListR";
"overNubListR" -> "unsafeMakeSymbolicPath";
"overallDependencies" -> "componentNameRequested";
"overwriteSnapshotPackageDesc" -> "defaultPackageDesc";
"overwriteSnapshotPackageDesc" -> "map";
"overwriteSnapshotPackageDesc" -> "packageVersion";
"overwriteSnapshotPackageDesc" -> "prettyShow";
"overwriteSnapshotPackageDesc" -> "withUTF8FileContents";
"overwriteSnapshotPackageDesc" -> "writeUTF8File";
"package" -> "f";
"package" -> "s";
"package" -> "x";
"packageDbArgs" -> "defaultRegisterOptions";
"packageDbArgs" -> "describe";
"packageDbArgs" -> "describeInvocation";
"packageDbArgs" -> "dump";
"packageDbArgs" -> "dumpInvocation";
"packageDbArgs" -> "expose";
"packageDbArgs" -> "exposeInvocation";
"packageDbArgs" -> "gmappend";
"packageDbArgs" -> "gmempty";
"packageDbArgs" -> "hide";
"packageDbArgs" -> "hideInvocation";
"packageDbArgs" -> "init";
"packageDbArgs" -> "initInvocation";
"packageDbArgs" -> "invoke";
"packageDbArgs" -> "list";
"packageDbArgs" -> "listInvocation";
"packageDbArgs" -> "packageDbArgsConf";
"packageDbArgs" -> "packageDbArgsDb";
"packageDbArgs" -> "recache";
"packageDbArgs" -> "recacheInvocation";
"packageDbArgs" -> "register";
"packageDbArgs" -> "registerInvocation";
"packageDbArgs" -> "unregister";
"packageDbArgs" -> "unregisterInvocation";
"packageDbOpt" -> "guessWay";
"packageDbOpt" -> "hpcProgram";
"packageDbOpt" -> "htmlDir";
"packageDbOpt" -> "markupPackage";
"packageDbOpt" -> "markupTest";
"packageDbOpt" -> "mixDir";
"packageDbOpt" -> "requireProgramVersion";
"packageDbOpt" -> "testModules";
"packageDbOpt" -> "tixDir";
"packageDbOpt" -> "tixFilePath";
"packageDbOpts" -> "packageDbFlag";
"packageDbStackOpts" -> "map";
"packageDbStackOpts" -> "packageDbFlag";
"packageDbStackOpts" -> "packageDbOpts";
"packageDbStackOpts" -> "registrationPackageDB";
"packageDescription" -> "f";
"packageDescription" -> "s";
"packageDescription" -> "x";
"packageDescriptionFieldGrammar" -> "alaList";
"packageDescriptionFieldGrammar" -> "alaList\'";
"packageDescriptionFieldGrammar" -> "formatExtraSourceFiles";
"packageDescriptionFieldGrammar" -> "null";
"packageDescriptionFieldGrammar" -> "optionalField";
"packageDescriptionFieldGrammar" -> "uniqueField";
"packageDescriptionFieldGrammar" -> "x";
"packageKeySupported" -> "ghcSupported";
"packageLogPath" -> "compilerInfo";
"packageLogPath" -> "fromPathTemplate";
"packageLogPath" -> "initialPathTemplateEnv";
"packageLogPath" -> "runTest";
"packageLogPath" -> "substPathTemplate";
"packageName" -> "pkgName";
"packageNameToUnqualComponentName" -> "unPackageNameST";
"packageTemplateEnv" -> "packageName";
"packageTemplateEnv" -> "packageVersion";
"packageTemplateEnv" -> "prettyShow";
"packageVersion" -> "checkConfiguredPackage";
"packageVersion" -> "checkPackage";
"packageVersion" -> "checkPackageContent";
"packageVersion" -> "checkPackageFileNames";
"packageVersion" -> "checkPackageFiles";
"packageVersion" -> "installedUnitId";
"packageVersion" -> "notice";
"packageVersion" -> "pkgVersion";
"panic" -> "between";
"panic" -> "chainl";
"panic" -> "chainl1";
"panic" -> "chainr";
"panic" -> "chainr1";
"panic" -> "choice";
"panic" -> "count";
"panic" -> "endBy";
"panic" -> "endByNonEmpty";
"panic" -> "manyTill";
"panic" -> "option";
"panic" -> "sepBy";
"panic" -> "sepByNonEmpty";
"panic" -> "sepEndBy";
"panic" -> "sepEndByNonEmpty";
"panic" -> "skipOptional";
"parentSrcLocPrefix" -> "callStack";
"parmakeSupported" -> "ghcSupported";
"parseBS" -> "parseTest\'";
"parseBuildFlagsForShowBuildInfoFlags" -> "buildOptions";
"parseBuildFlagsForShowBuildInfoFlags" -> "liftOption";
"parseBuildFlagsForShowBuildInfoFlags" -> "map";
"parseBuildFlagsForShowBuildInfoFlags" -> "optionDistPref";
"parseBuildFlagsForShowBuildInfoFlags" -> "optionVerbosity";
"parseCommonName" -> "fromUTF8BS";
"parseCommonName" -> "parseFailure";
"parseCondTree" -> "null";
"parseCondTree" -> "parseConditionConfVar";
"parseCondTree" -> "parseFailure";
"parseCondTree" -> "parseFieldGrammar";
"parseCondTree" -> "parseWarning";
"parseCondTree" -> "partitionFields";
"parseCondTree" -> "processImports";
"parseCondTree" -> "test";
"parseCondTree" -> "warnImport";
"parseCondTree" -> "x";
"parseCondTreeWithCommonStanzas" -> "parseCondTree";
"parseCondTreeWithCommonStanzas" -> "processImports";
"parseCondTreeWithCommonStanzas" -> "specHasElif";
"parseCondTreeWithCommonStanzas" -> "view";
"parseCondTreeWithCommonStanzas" -> "x";
"parseCondition" -> "anyVersion";
"parseCondition" -> "between";
"parseCondition" -> "foldl1";
"parseCondition" -> "lowercase";
"parseCondition" -> "mkFlagName";
"parseCondition" -> "munch1";
"parseCondition" -> "option";
"parseCondition" -> "s";
"parseCondition" -> "sepByNonEmpty";
"parseCondition" -> "spaces";
"parseCondition" -> "x";
"parseConditionConfVar" -> "parseFailure";
"parseConditionConfVar" -> "parser";
"parseConditionConfVar" -> "x";
"parseEnvironmentFileLine" -> "mkUnitId";
"parseFatalFailure\'" -> "s";
"parseFatalFailure\'" -> "zeroPos";
"parseFieldGrammar" -> "parseWarning";
"parseFieldGrammar" -> "s";
"parseFields" -> "parseFieldGrammar";
"parseFields" -> "partitionFields";
"parseFields" -> "warnInvalidSubsection";
"parseFile" -> "f";
"parseFile" -> "parseTest\'";
"parseFile" -> "s";
"parseFileGlob" -> "null";
"parseGenericPackageDescription" -> "cabalSpecFromVersionDigits";
"parseGenericPackageDescription" -> "fromUTF8BS";
"parseGenericPackageDescription" -> "parseFatalFailure";
"parseGenericPackageDescription" -> "parseGenericPackageDescription\'";
"parseGenericPackageDescription" -> "parseWarning";
"parseGenericPackageDescription" -> "patchQuirks";
"parseGenericPackageDescription" -> "prettyShow";
"parseGenericPackageDescription" -> "readFields\'";
"parseGenericPackageDescription" -> "scanSpecVersion";
"parseGenericPackageDescription" -> "setCabalSpecVersion";
"parseGenericPackageDescription" -> "toUTF8BS";
"parseGenericPackageDescription" -> "validateUTF8";
"parseGenericPackageDescription" -> "versionNumbers";
"parseGenericPackageDescription" -> "zeroPos";
"parseGenericPackageDescriptionMaybe" -> "parseGenericPackageDescription";
"parseGenericPackageDescriptionMaybe" -> "runParseResult";
"parseGenericPackageDescription\'" -> "cabalSpecToVersionDigits";
"parseGenericPackageDescription\'" -> "checkForUndefinedCustomSetup";
"parseGenericPackageDescription\'" -> "checkForUndefinedFlags";
"parseGenericPackageDescription\'" -> "emptyGenericPackageDescription";
"parseGenericPackageDescription\'" -> "goSections";
"parseGenericPackageDescription\'" -> "mkVersion";
"parseGenericPackageDescription\'" -> "packageDescriptionFieldGrammar";
"parseGenericPackageDescription\'" -> "parseFailure";
"parseGenericPackageDescription\'" -> "parseFieldGrammar";
"parseGenericPackageDescription\'" -> "parseWarning";
"parseGenericPackageDescription\'" -> "parseWarnings";
"parseGenericPackageDescription\'" -> "postProcessInternalDeps";
"parseGenericPackageDescription\'" -> "prettyShow";
"parseGenericPackageDescription\'" -> "runFieldParser";
"parseGenericPackageDescription\'" -> "safeLast";
"parseGenericPackageDescription\'" -> "sectionizeFields";
"parseGenericPackageDescription\'" -> "setCabalSpecVersion";
"parseGenericPackageDescription\'" -> "specVersion";
"parseGenericPackageDescription\'" -> "stateGpd";
"parseGenericPackageDescription\'" -> "takeFields";
"parseGenericPackageDescription\'" -> "toPWarnings";
"parseGenericPackageDescription\'" -> "view";
"parseGenericPackageDescription\'" -> "withoutWarnings";
"parseGenericPackageDescription\'" -> "zeroPos";
"parseGhcEnvironmentFile" -> "parseEnvironmentFileLine";
"parseHeader" -> "fromUTF8LBS";
"parseHeader" -> "simpleParsec";
"parseHookedBuildInfo" -> "parseFatalFailure";
"parseHookedBuildInfo" -> "parseHookedBuildInfo\'";
"parseHookedBuildInfo" -> "readFields\'";
"parseHookedBuildInfo" -> "zeroPos";
"parseHookedBuildInfo\'" -> "breakMaybe";
"parseHookedBuildInfo\'" -> "buildInfoFieldGrammar";
"parseHookedBuildInfo\'" -> "cabalSpecLatest";
"parseHookedBuildInfo\'" -> "parseFieldGrammar";
"parseHookedBuildInfo\'" -> "parseWarnings";
"parseHookedBuildInfo\'" -> "partitionFields";
"parseHookedBuildInfo\'" -> "runFieldParser";
"parseHookedBuildInfo\'" -> "toPWarnings";
"parseHookedBuildInfo\'" -> "unfoldrM";
"parseHookedBuildInfo\'" -> "warnInvalidSubsection";
"parseHookedBuildInfo\'" -> "zeroPos";
"parseInstalledPackageInfo" -> "cabalSpecLatest";
"parseInstalledPackageInfo" -> "ipiFieldGrammar";
"parseInstalledPackageInfo" -> "parseFieldGrammar";
"parseInstalledPackageInfo" -> "partitionFields";
"parseInstalledPackageInfo" -> "s";
"parseInstalledPackageInfo" -> "x";
"parseName" -> "fromUTF8BS";
"parseName" -> "parseNameBS";
"parseNameBS" -> "parseFailure";
"parsePackage" -> "simpleParsec";
"parsePackage" -> "toList";
"parsePackages" -> "lbsStripPrefix";
"parsePackages" -> "map";
"parsePackages" -> "mungePackagePaths";
"parsePackages" -> "parseInstalledPackageInfo";
"parsePackages" -> "pkgRoot";
"parsePackages" -> "s";
"parsePackages" -> "setUnitId";
"parseStr" -> "parseBS";
"parseString" -> "die\'";
"parseString" -> "parseBS";
"parseString" -> "parseFile";
"parseString" -> "parseStr";
"parseString" -> "parser";
"parseString" -> "readFields";
"parseString" -> "readFields\'";
"parseString" -> "runParseResult";
"parseString" -> "showPError";
"parseString" -> "showPWarning";
"parseString" -> "warn";
"parseString" -> "x";
"parseTest\'" -> "formatError";
"parseTest\'" -> "mkLexState";
"parseTest\'" -> "mkLexState\'";
"parseTest\'" -> "s";
"parseTest\'" -> "x";
"parseUnqualComponentName" -> "mkUnqualComponentName";
"parseUnqualComponentName" -> "parseName";
"parseZDashCode" -> "allBuildDepends";
"parseZDashCode" -> "allBuildInfo";
"parseZDashCode" -> "allLibraries";
"parseZDashCode" -> "author";
"parseZDashCode" -> "benchmarks";
"parseZDashCode" -> "bugReports";
"parseZDashCode" -> "buildType";
"parseZDashCode" -> "buildTypeRaw";
"parseZDashCode" -> "category";
"parseZDashCode" -> "copyright";
"parseZDashCode" -> "customFieldsPD";
"parseZDashCode" -> "dataDir";
"parseZDashCode" -> "dataFiles";
"parseZDashCode" -> "description";
"parseZDashCode" -> "emptyPackageDescription";
"parseZDashCode" -> "enabledBuildDepends";
"parseZDashCode" -> "enabledBuildInfos";
"parseZDashCode" -> "enabledComponents";
"parseZDashCode" -> "executables";
"parseZDashCode" -> "extraDocFiles";
"parseZDashCode" -> "extraSrcFiles";
"parseZDashCode" -> "extraTmpFiles";
"parseZDashCode" -> "foreignLibs";
"parseZDashCode" -> "getComponent";
"parseZDashCode" -> "hasBenchmarks";
"parseZDashCode" -> "hasExes";
"parseZDashCode" -> "hasForeignLibs";
"parseZDashCode" -> "hasLibs";
"parseZDashCode" -> "hasPublicLib";
"parseZDashCode" -> "hasTests";
"parseZDashCode" -> "homepage";
"parseZDashCode" -> "intercalate";
"parseZDashCode" -> "library";
"parseZDashCode" -> "license";
"parseZDashCode" -> "licenseFiles";
"parseZDashCode" -> "licenseRaw";
"parseZDashCode" -> "license\'";
"parseZDashCode" -> "lookupComponent";
"parseZDashCode" -> "maintainer";
"parseZDashCode" -> "map";
"parseZDashCode" -> "package";
"parseZDashCode" -> "pkgBuildableComponents";
"parseZDashCode" -> "pkgComponents";
"parseZDashCode" -> "pkgUrl";
"parseZDashCode" -> "setupBuildInfo";
"parseZDashCode" -> "sourceRepos";
"parseZDashCode" -> "specVersion";
"parseZDashCode" -> "stability";
"parseZDashCode" -> "subLibraries";
"parseZDashCode" -> "synopsis";
"parseZDashCode" -> "testSuites";
"parseZDashCode" -> "testedWith";
"parseZDashCode" -> "toList";
"parseZDashCode" -> "updatePackageDescription";
"parseZDashCode" -> "withBenchmark";
"parseZDashCode" -> "withExe";
"parseZDashCode" -> "withForeignLib";
"parseZDashCode" -> "withLib";
"parseZDashCode" -> "withTest";
"parsecFilePath" -> "parsecToken";
"parsecFlagAssignment" -> "f";
"parsecFlagAssignment" -> "mkFlagAssignment";
"parsecFlagAssignmentNonEmpty" -> "f";
"parsecFlagAssignmentNonEmpty" -> "mkFlagAssignment";
"parsecFlagAssignmentNonEmpty" -> "toList";
"parsecFreeText" -> "alaList";
"parsecFreeText" -> "alaList\'";
"parsecFreeText" -> "alaNonEmpty";
"parsecFreeText" -> "alaNonEmpty\'";
"parsecFreeText" -> "alaSet";
"parsecFreeText" -> "alaSet\'";
"parsecFreeText" -> "anyVersion";
"parsecFreeText" -> "asVersionIntervals";
"parsecFreeText" -> "cataVersionRange";
"parsecFreeText" -> "intercalate";
"parsecFreeText" -> "map";
"parsecFreeText" -> "mkVersion";
"parsecFreeText" -> "parsecCommaList";
"parsecFreeText" -> "parsecCommaNonEmpty";
"parsecFreeText" -> "parsecLeadingCommaList";
"parsecFreeText" -> "parsecLeadingCommaNonEmpty";
"parsecFreeText" -> "parsecLeadingOptCommaList";
"parsecFreeText" -> "parsecOptCommaList";
"parsecFreeText" -> "version0";
"parsecFreeText" -> "versionNumbers";
"parsecFreeText" -> "x";
"parsecGivenComponent" -> "unPackageName";
"parsecGivenComponent" -> "unUnqualComponentName";
"parsecLeadingCommaList" -> "toList";
"parsecLeadingOptCommaList" -> "toList";
"parsecLeadingOptCommaList" -> "x";
"parsecMaybeQuoted" -> "parsecQuoted";
"parsecModuleName" -> "upper";
"parsecModuleName" -> "validModuleChar";
"parsecOpenModuleSubst" -> "parsecOpenModuleSubstEntry";
"parsecStandard" -> "f";
"parsecStandard" -> "intercalate";
"parsecStandard" -> "map";
"parsecTestedWith" -> "anyVersion";
"parsecTestedWith" -> "fieldGrammarKnownFieldList";
"parsecTestedWith" -> "fieldLinesToStream";
"parsecTestedWith" -> "lexemeParsec";
"parsecTestedWith" -> "namelessFieldAnn";
"parsecTestedWith" -> "parseFieldGrammar";
"parsecTestedWith" -> "runFieldParser";
"parsecTestedWith" -> "runFieldParser\'";
"parsecToReadE" -> "cabalSpecVersionToSPDXListVersion";
"parsecToReadE" -> "fieldLineStreamFromString";
"parsecToReadE" -> "isAsciiAlphaNum";
"parsecToReadE" -> "l";
"parsecToReadE" -> "licenseDocumentRef";
"parsecToReadE" -> "licenseExceptionId";
"parsecToReadE" -> "licenseExceptionIdList";
"parsecToReadE" -> "licenseExceptionName";
"parsecToReadE" -> "licenseId";
"parsecToReadE" -> "licenseIdList";
"parsecToReadE" -> "licenseIsOsiApproved";
"parsecToReadE" -> "licenseName";
"parsecToReadE" -> "licenseRef";
"parsecToReadE" -> "mkLicenseExceptionId";
"parsecToReadE" -> "mkLicenseId";
"parsecToReadE" -> "mkLicenseRef";
"parsecToReadE" -> "mkLicenseRef\'";
"parsecToReadE" -> "nominalStructure";
"parsecToReadE" -> "runParsecParser";
"parsecToReadE" -> "set";
"parsecToReadE" -> "simpleLicenseExpression";
"parsecToReadE" -> "typeVersion";
"parsecToReadE" -> "x";
"parsecToken" -> "checkNotDoubleDash";
"parsecToken" -> "x";
"parsecToken\'" -> "checkNotDoubleDash";
"parsecVerbosity" -> "intToVerbosity";
"parsecVerbosity" -> "isAsciiAlpha";
"parsecVerbosity" -> "mkVerbosity";
"parsecVerbosity" -> "verboseCallSite";
"parsecVerbosity" -> "verboseCallStack";
"parsecVerbosity" -> "verboseMarkOutput";
"parsecVerbosity" -> "verboseNoStderr";
"parsecVerbosity" -> "verboseNoWrap";
"parsecVerbosity" -> "verboseStderr";
"parsecVerbosity" -> "verboseTimestamp";
"parser" -> "anyVersion";
"parser" -> "earlierVersion";
"parser" -> "f";
"parser" -> "fieldAnn";
"parser" -> "fieldLineAnn";
"parser" -> "fieldLineBS";
"parser" -> "fieldLineStreamFromBS";
"parser" -> "fieldLinesToString";
"parser" -> "fieldName";
"parser" -> "fieldUniverse";
"parser" -> "foldl1";
"parser" -> "getName";
"parser" -> "integral";
"parser" -> "intersectVersionRanges";
"parser" -> "laterVersion";
"parser" -> "majorBoundVersion";
"parser" -> "map";
"parser" -> "mkName";
"parser" -> "mkVersion";
"parser" -> "nameAnn";
"parser" -> "noVersion";
"parser" -> "orEarlierVersion";
"parser" -> "orLaterVersion";
"parser" -> "runParsecParser";
"parser" -> "s";
"parser" -> "sectionArgAnn";
"parser" -> "sectionArgsToString";
"parser" -> "sepByNonEmpty";
"parser" -> "thisVersion";
"parser" -> "unionVersionRanges";
"parser" -> "withinVersion";
"parser" -> "x";
"partitionComponents" -> "foldComponent";
"partitionComponents" -> "mkComponentId";
"partitionComponents" -> "unComponentId";
"partitionComponents" -> "x";
"partitionFields" -> "f";
"partitionFields" -> "null";
"partitionFields" -> "s";
"patchQuirks" -> "f";
"patchQuirks" -> "md5";
"patchQuirks" -> "patches";
"patches" -> "eitherParsec";
"patches" -> "explicitEitherParsec";
"patches" -> "explicitEitherParsec\'";
"patches" -> "incPos";
"patches" -> "lexemeParsec";
"patches" -> "parsecCommaList";
"patches" -> "parsecCommaNonEmpty";
"patches" -> "parsecFilePath";
"patches" -> "parsecLeadingCommaList";
"patches" -> "parsecLeadingCommaNonEmpty";
"patches" -> "parsecLeadingOptCommaList";
"patches" -> "parsecMaybeQuoted";
"patches" -> "parsecOptCommaList";
"patches" -> "parsecQuoted";
"patches" -> "parsecStandard";
"patches" -> "parsecToken";
"patches" -> "parsecToken\'";
"patches" -> "parsecUnqualComponentName";
"patches" -> "retPos";
"patches" -> "runParsecParser";
"patches" -> "runParsecParser\'";
"patches" -> "showPError";
"patches" -> "showPWarning";
"patches" -> "showPos";
"patches" -> "simpleParsec";
"patches" -> "simpleParsecBS";
"patches" -> "simpleParsecW\'";
"patches" -> "simpleParsec\'";
"patches" -> "stringLiteral";
"patches" -> "zeroPos";
"pdToGpd" -> "benchmarkName";
"pdToGpd" -> "benchmarks";
"pdToGpd" -> "condBenchmarks";
"pdToGpd" -> "condExecutables";
"pdToGpd" -> "condForeignLibs";
"pdToGpd" -> "condLibrary";
"pdToGpd" -> "condSubLibraries";
"pdToGpd" -> "condTestSuites";
"pdToGpd" -> "exeName";
"pdToGpd" -> "executables";
"pdToGpd" -> "f";
"pdToGpd" -> "foreignLibName";
"pdToGpd" -> "foreignLibs";
"pdToGpd" -> "genPackageFlags";
"pdToGpd" -> "gpdScannedVersion";
"pdToGpd" -> "l";
"pdToGpd" -> "libName";
"pdToGpd" -> "library";
"pdToGpd" -> "libraryNameString";
"pdToGpd" -> "mkUnqualComponentName";
"pdToGpd" -> "packageDescription";
"pdToGpd" -> "subLibraries";
"pdToGpd" -> "testName";
"pdToGpd" -> "testSuites";
"pdToGpd" -> "x";
"perCompilerFlavorToList" -> "f";
"perCompilerFlavorToList" -> "nullVersion";
"pkgBuildableComponents" -> "componentBuildable";
"pkgBuildableComponents" -> "pkgComponents";
"pkgComponentInfo" -> "componentBuildInfo";
"pkgComponentInfo" -> "componentHsFiles";
"pkgComponentInfo" -> "componentModules";
"pkgComponentInfo" -> "componentName";
"pkgComponentInfo" -> "componentStringName";
"pkgComponentInfo" -> "getSymbolicPath";
"pkgComponentInfo" -> "map";
"pkgComponentInfo" -> "pkgComponents";
"pkgComponents" -> "allLibraries";
"pkgComponents" -> "benchmarks";
"pkgComponents" -> "executables";
"pkgComponents" -> "foreignLibs";
"pkgComponents" -> "testSuites";
"pkgConfigProgram" -> "addKnownProgram";
"pkgConfigProgram" -> "addKnownPrograms";
"pkgConfigProgram" -> "configureAllKnownPrograms";
"pkgConfigProgram" -> "configureProgram";
"pkgConfigProgram" -> "configuredPrograms";
"pkgConfigProgram" -> "defaultProgramDb";
"pkgConfigProgram" -> "emptyProgramDb";
"pkgConfigProgram" -> "findProgramVersion";
"pkgConfigProgram" -> "getProgramSearchPath";
"pkgConfigProgram" -> "knownPrograms";
"pkgConfigProgram" -> "lookupKnownProgram";
"pkgConfigProgram" -> "lookupProgram";
"pkgConfigProgram" -> "lookupProgramVersion";
"pkgConfigProgram" -> "modifyProgramSearchPath";
"pkgConfigProgram" -> "needProgram";
"pkgConfigProgram" -> "reconfigurePrograms";
"pkgConfigProgram" -> "requireProgram";
"pkgConfigProgram" -> "requireProgramVersion";
"pkgConfigProgram" -> "restoreProgramDb";
"pkgConfigProgram" -> "setProgramSearchPath";
"pkgConfigProgram" -> "simpleProgram";
"pkgConfigProgram" -> "unconfigureProgram";
"pkgConfigProgram" -> "updateProgram";
"pkgConfigProgram" -> "userMaybeSpecifyPath";
"pkgConfigProgram" -> "userSpecifiedArgs";
"pkgConfigProgram" -> "userSpecifyArgs";
"pkgConfigProgram" -> "userSpecifyArgss";
"pkgConfigProgram" -> "userSpecifyPath";
"pkgConfigProgram" -> "userSpecifyPaths";
"pkgName" -> "f";
"pkgName" -> "s";
"pkgName" -> "x";
"pkgPathEnvVar" -> "packageName";
"pkgPathEnvVar" -> "showPkgName";
"pkgRoot" -> "compilerVersion";
"pkgRoot" -> "f";
"pkgRoot" -> "getGhcAppDir";
"pkgRoot" -> "getGlobalPackageDB";
"pkgRoot" -> "ghcProgram";
"pkgRoot" -> "ghcjsProgram";
"pkgRoot" -> "lookupProgram";
"pkgRoot" -> "s";
"pkgRoot" -> "x";
"pkgUrl" -> "f";
"pkgUrl" -> "s";
"pkgUrl" -> "x";
"pkgVersion" -> "f";
"pkgVersion" -> "mkPackageName";
"pkgVersion" -> "mkPackageNameST";
"pkgVersion" -> "s";
"pkgVersion" -> "unPackageName";
"pkgVersion" -> "unPackageNameST";
"pkgVersion" -> "x";
"pkgconfigParser" -> "anyPkgconfigVersion";
"pkgconfigParser" -> "f";
"pkgconfigParser" -> "foldr1";
"platformDefines" -> "compilerCompatVersion";
"platformDefines" -> "compilerFlavor";
"platformDefines" -> "compilerVersion";
"platformDefines" -> "map";
"platformDefines" -> "versionNumbers";
"platformFromTriple" -> "classifyArch";
"platformFromTriple" -> "classifyOS";
"platformFromTriple" -> "explicitEitherParsec";
"platformFromTriple" -> "parsecIdent";
"platformFromTriple" -> "testGroup";
"platformTemplateEnv" -> "prettyShow";
"positionRow" -> "showPWarning";
"posixSecondsToModTime" -> "s";
"posixSecondsToModTime" -> "secToUnixEpoch";
"posixSecondsToModTime" -> "windowsTick";
"posixTimeToModTime" -> "secToUnixEpoch";
"posixTimeToModTime" -> "windowsTick";
"postProcessInternalDeps" -> "condSubLibraries";
"postProcessInternalDeps" -> "map";
"postProcessInternalDeps" -> "mkMixin";
"postProcessInternalDeps" -> "over";
"postProcessInternalDeps" -> "package";
"postProcessInternalDeps" -> "packageDescription";
"postProcessInternalDeps" -> "packageNameToUnqualComponentName";
"postProcessInternalDeps" -> "pkgName";
"postProcessInternalDeps" -> "transformAllBuildInfos";
"postprocess" -> "checkInvariant";
"postprocess" -> "stage2and3";
"ppAlex" -> "alexProgram";
"ppAlex" -> "compilerFlavor";
"ppAlex" -> "standardPP";
"ppC2hs" -> "autogenComponentModulesDir";
"ppC2hs" -> "c2hsProgram";
"ppC2hs" -> "cppHeaderName";
"ppC2hs" -> "gccProgram";
"ppC2hs" -> "getCppOptions";
"ppC2hs" -> "mkVersion";
"ppC2hs" -> "orLaterVersion";
"ppC2hs" -> "programPath";
"ppC2hs" -> "requireProgram";
"ppC2hs" -> "requireProgramVersion";
"ppC2hs" -> "runProgram";
"ppC2hsExtras" -> "getDirectoryContentsRecursive";
"ppCondBenchmarks" -> "benchmarkFieldGrammar";
"ppCondBenchmarks" -> "ppCondTree2";
"ppCondExecutables" -> "executableFieldGrammar";
"ppCondExecutables" -> "ppCondTree2";
"ppCondForeignLibs" -> "foreignLibFieldGrammar";
"ppCondForeignLibs" -> "ppCondTree2";
"ppCondLibrary" -> "libraryFieldGrammar";
"ppCondLibrary" -> "ppCondTree2";
"ppCondSubLibraries" -> "libraryFieldGrammar";
"ppCondSubLibraries" -> "ppCondTree2";
"ppCondTestSuites" -> "ppCondTree2";
"ppCondTestSuites" -> "testSuiteFieldGrammar";
"ppCondTree2" -> "ppIfCondition";
"ppCondTree2" -> "prettyFieldGrammar";
"ppCondition" -> "ppCondition";
"ppCondition" -> "ppConfVar";
"ppCondition" -> "x";
"ppConfVar" -> "ppFlagName";
"ppCpp" -> "ppCpp\'";
"ppCpp\'" -> "compilerFlavor";
"ppCpp\'" -> "getCppOptions";
"ppCpp\'" -> "ghcProgram";
"ppCpp\'" -> "ghcjsProgram";
"ppCpp\'" -> "ppCpphs";
"ppCpp\'" -> "ppGhcCpp";
"ppCpphs" -> "anyVersion";
"ppCpphs" -> "autogenComponentModulesDir";
"ppCpphs" -> "cppHeaderName";
"ppCpphs" -> "cpphsProgram";
"ppCpphs" -> "mkSimplePreProcessor";
"ppCpphs" -> "mkVersion";
"ppCpphs" -> "requireProgramVersion";
"ppCpphs" -> "runProgram";
"ppField" -> "anyVersion";
"ppField" -> "earlierVersion";
"ppField" -> "fromParsecFields";
"ppField" -> "genericFromParsecFields";
"ppField" -> "intersectVersionRanges";
"ppField" -> "laterVersion";
"ppField" -> "majorBoundVersion";
"ppField" -> "mkVersion";
"ppField" -> "noVersion";
"ppField" -> "orEarlierVersion";
"ppField" -> "orLaterVersion";
"ppField" -> "parseFailure";
"ppField" -> "parseFatalFailure";
"ppField" -> "parseString";
"ppField" -> "parseWarning";
"ppField" -> "parseWarnings";
"ppField" -> "readFields";
"ppField" -> "readFields\'";
"ppField" -> "runParseResult";
"ppField" -> "showFields";
"ppField" -> "showPError";
"ppField" -> "showPWarning";
"ppField" -> "thisVersion";
"ppField" -> "tokenizeQuotedWords";
"ppField" -> "unionVersionRanges";
"ppField" -> "withinVersion";
"ppFlag" -> "flagFieldGrammar";
"ppFlag" -> "ppFlagName";
"ppFlag" -> "prettyFieldGrammar";
"ppFlag" -> "s";
"ppFlagName" -> "unFlagName";
"ppGenPackageFlags" -> "map";
"ppGenPackageFlags" -> "ppFlag";
"ppGenericPackageDescription" -> "condBenchmarks";
"ppGenericPackageDescription" -> "condExecutables";
"ppGenericPackageDescription" -> "condForeignLibs";
"ppGenericPackageDescription" -> "condLibrary";
"ppGenericPackageDescription" -> "condSubLibraries";
"ppGenericPackageDescription" -> "condTestSuites";
"ppGenericPackageDescription" -> "genPackageFlags";
"ppGenericPackageDescription" -> "packageDescription";
"ppGenericPackageDescription" -> "ppCondBenchmarks";
"ppGenericPackageDescription" -> "ppCondExecutables";
"ppGenericPackageDescription" -> "ppCondForeignLibs";
"ppGenericPackageDescription" -> "ppCondLibrary";
"ppGenericPackageDescription" -> "ppCondSubLibraries";
"ppGenericPackageDescription" -> "ppCondTestSuites";
"ppGenericPackageDescription" -> "ppGenPackageFlags";
"ppGenericPackageDescription" -> "ppPackageDescription";
"ppGenericPackageDescription" -> "ppSetupBInfo";
"ppGenericPackageDescription" -> "preProcessInternalDeps";
"ppGenericPackageDescription" -> "setupBuildInfo";
"ppGenericPackageDescription" -> "specVersion";
"ppGhcCpp" -> "anyVersion";
"ppGhcCpp" -> "autogenComponentModulesDir";
"ppGhcCpp" -> "cppHeaderName";
"ppGhcCpp" -> "mkSimplePreProcessor";
"ppGhcCpp" -> "requireProgramVersion";
"ppGhcCpp" -> "runProgram";
"ppGreenCard" -> "greencardProgram";
"ppGreenCard" -> "mkSimplePreProcessor";
"ppGreenCard" -> "runDbProgram";
"ppHappy" -> "compilerFlavor";
"ppHappy" -> "happyProgram";
"ppHappy" -> "standardPP";
"ppHsc2hs" -> "anyVersion";
"ppHsc2hs" -> "autogenComponentModulesDir";
"ppHsc2hs" -> "autogenPackageModulesDir";
"ppHsc2hs" -> "buildOS";
"ppHsc2hs" -> "buildPlatform";
"ppHsc2hs" -> "compilerFlavor";
"ppHsc2hs" -> "cppHeaderName";
"ppHsc2hs" -> "defaultTempFileOptions";
"ppHsc2hs" -> "gccProgram";
"ppHsc2hs" -> "hsc2hsProgram";
"ppHsc2hs" -> "map";
"ppHsc2hs" -> "mkPackageName";
"ppHsc2hs" -> "mkSimplePreProcessor";
"ppHsc2hs" -> "mkVersion";
"ppHsc2hs" -> "platformDefines";
"ppHsc2hs" -> "programPath";
"ppHsc2hs" -> "requireProgram";
"ppHsc2hs" -> "requireProgramVersion";
"ppHsc2hs" -> "runProgram";
"ppHsc2hs" -> "withResponseFile";
"ppHsc2hsExtras" -> "getDirectoryContentsRecursive";
"ppIfCondition" -> "ppCondition";
"ppPackageDescription" -> "packageDescriptionFieldGrammar";
"ppPackageDescription" -> "ppSourceRepos";
"ppPackageDescription" -> "prettyFieldGrammar";
"ppPackageDescription" -> "sourceRepos";
"ppSetupBInfo" -> "defaultSetupDepends";
"ppSetupBInfo" -> "prettyFieldGrammar";
"ppSetupBInfo" -> "setupBInfoFieldGrammar";
"ppSourceRepo" -> "prettyFieldGrammar";
"ppSourceRepo" -> "repoKind";
"ppSourceRepo" -> "sourceRepoFieldGrammar";
"ppSourceRepos" -> "map";
"ppSourceRepos" -> "ppSourceRepo";
"ppSuffixes" -> "map";
"ppUnlit" -> "die\'";
"ppUnlit" -> "mkSimplePreProcessor";
"ppUnlit" -> "unlit";
"ppUnlit" -> "withUTF8FileContents";
"ppUnlit" -> "writeUTF8File";
"preProcessInternalDeps" -> "mainLibSet";
"preProcessInternalDeps" -> "map";
"preProcessInternalDeps" -> "mkMixin";
"preProcessInternalDeps" -> "over";
"preProcessInternalDeps" -> "package";
"preProcessInternalDeps" -> "packageDescription";
"preProcessInternalDeps" -> "pkgName";
"preProcessInternalDeps" -> "transformAllBuildInfos";
"preProcessInternalDeps" -> "unqualComponentNameToPackageName";
"prefixRelativeComponentInstallDirs" -> "compilerInfo";
"prefixRelativeInstallDirs" -> "appendSubdirs";
"prefixRelativeInstallDirs" -> "combinePathTemplate";
"prefixRelativeInstallDirs" -> "fromPathTemplate";
"prefixRelativeInstallDirs" -> "initialPathTemplateEnv";
"prefixRelativeInstallDirs" -> "localUnitId";
"prefixRelativeInstallDirs" -> "prefixRelativeComponentInstallDirs";
"prefixRelativeInstallDirs" -> "s";
"prefixRelativeInstallDirs" -> "substituteInstallDirTemplates";
"prepareSnapshotTree" -> "overwriteSnapshotPackageDesc";
"prepareSnapshotTree" -> "prepareTree";
"prepareTree" -> "filterAutogenModules";
"prepareTree" -> "installOrdinaryFiles";
"prepareTree" -> "listPackageSources";
"prepareTree" -> "maybeCreateDefaultSetupScript";
"preprocessComponent" -> "allLibModules";
"preprocessComponent" -> "autogenComponentModulesDir";
"preprocessComponent" -> "autogenPackageModulesDir";
"preprocessComponent" -> "benchmarkBuildInfo";
"preprocessComponent" -> "benchmarkInterface";
"preprocessComponent" -> "benchmarkModules";
"preprocessComponent" -> "benchmarkName";
"preprocessComponent" -> "cSourceExtensions";
"preprocessComponent" -> "componentBuildDir";
"preprocessComponent" -> "die\'";
"preprocessComponent" -> "exeName";
"preprocessComponent" -> "f";
"preprocessComponent" -> "foreignLibBuildInfo";
"preprocessComponent" -> "foreignLibModules";
"preprocessComponent" -> "foreignLibName";
"preprocessComponent" -> "getSymbolicPath";
"preprocessComponent" -> "libBuildInfo";
"preprocessComponent" -> "map";
"preprocessComponent" -> "modulePath";
"preprocessComponent" -> "preprocessFile";
"preprocessComponent" -> "prettyShow";
"preprocessComponent" -> "setupMessage\'";
"preprocessComponent" -> "stubFilePath";
"preprocessComponent" -> "stubName";
"preprocessComponent" -> "test";
"preprocessComponent" -> "testBuildInfo";
"preprocessComponent" -> "testInterface";
"preprocessComponent" -> "testModules";
"preprocessComponent" -> "testName";
"preprocessComponent" -> "unUnqualComponentName";
"preprocessComponent" -> "unsafeMakeSymbolicPath";
"preprocessComponent" -> "writeSimpleTestStub";
"preprocessExtras" -> "benchmarkInterface";
"preprocessExtras" -> "benchmarkName";
"preprocessExtras" -> "benchmarks";
"preprocessExtras" -> "die\'";
"preprocessExtras" -> "exeName";
"preprocessExtras" -> "executables";
"preprocessExtras" -> "f";
"preprocessExtras" -> "foreignLibName";
"preprocessExtras" -> "knownExtrasHandlers";
"preprocessExtras" -> "libName";
"preprocessExtras" -> "libraryNameString";
"preprocessExtras" -> "map";
"preprocessExtras" -> "prettyShow";
"preprocessExtras" -> "stubName";
"preprocessExtras" -> "subLibraries";
"preprocessExtras" -> "test";
"preprocessExtras" -> "testInterface";
"preprocessExtras" -> "testName";
"preprocessExtras" -> "testSuites";
"preprocessExtras" -> "unUnqualComponentName";
"preprocessExtras" -> "withLexicalCallStack";
"preprocessFile" -> "copyFileVerbose";
"preprocessFile" -> "createDirectoryIfMissingVerbose";
"preprocessFile" -> "die\'";
"preprocessFile" -> "findFileWithExtension";
"preprocessFile" -> "findFileWithExtension\'";
"preprocessFile" -> "getSymbolicPath";
"preprocessFile" -> "intercalate";
"preprocessFile" -> "lookup";
"preprocessFile" -> "map";
"preprocessFile" -> "moreRecentFile";
"preprocessFile" -> "safeTail";
"pretextPeeks" -> "f";
"pretextPeeks" -> "x";
"pretextPos" -> "f";
"pretextPos" -> "s";
"prettyFieldGrammar" -> "aview";
"prettyFieldGrammar" -> "defaultFreeTextFieldDefST";
"prettyFieldGrammar" -> "f";
"prettyFieldGrammar" -> "l";
"prettyFieldGrammar" -> "map";
"prettyFieldGrammar" -> "pack\'";
"prettyFieldGrammar" -> "ppField";
"prettyFieldGrammar" -> "s";
"prettyFieldGrammar" -> "showFreeText";
"prettyFieldGrammar" -> "showFreeTextV3";
"prettyFieldGrammar" -> "toUTF8BS";
"prettyFieldGrammar" -> "x";
"prettyFieldLines" -> "fromUTF8BS";
"prettySectionArgs" -> "fromUTF8BS";
"prettySectionArgs" -> "map";
"prettySectionArgs" -> "showToken";
"prettyShow" -> "defaultStyle";
"prettyVersionRange" -> "cataVersionRange";
"prettyVersionRange16" -> "map";
"prettyVersionRange16" -> "prettyVersionRange";
"prettyVersionRange16" -> "versionDigitParser";
"prettyVersionRange16" -> "versionNumbers";
"prettyVersionRange16" -> "versionRangeParser";
"prettyVersionRange16" -> "wildcardUpperBound";
"printPackageProblems" -> "checkConfiguredPackage";
"printPackageProblems" -> "checkPackageFiles";
"printPackageProblems" -> "map";
"printPackageProblems" -> "notice";
"printPackageProblems" -> "null";
"printRawCommandAndArgs" -> "printRawCommandAndArgsAndEnv";
"printRawCommandAndArgs" -> "withFrozenCallStack";
"printRawCommandAndArgsAndEnv" -> "debugNoWrap";
"printRawCommandAndArgsAndEnv" -> "infoNoWrap";
"processImports" -> "mergeCommonStanza";
"processImports" -> "parseFailure";
"processImports" -> "parseWarning";
"processImports" -> "runFieldParser";
"processImports" -> "specHasCommonStanzas";
"processImports" -> "warnImport";
"processImports" -> "x";
"profDetailLevelFlag" -> "toFlag";
"profOptionsFieldGrammar" -> "alaList\'";
"profOptionsFieldGrammar" -> "lookupLens";
"profilingSupported" -> "compilerFlavor";
"programDbOption" -> "knownPrograms";
"programDbOption" -> "map";
"programDbOption" -> "option";
"programDbOption" -> "reqArg\'";
"programDbOption" -> "set";
"programDbOptions" -> "knownPrograms";
"programDbOptions" -> "map";
"programDbOptions" -> "option";
"programDbOptions" -> "reqArg\'";
"programDbOptions" -> "set";
"programDbOptions" -> "splitArgs";
"programDbPaths" -> "programDbPaths\'";
"programDbPaths" -> "set";
"programDbPaths\'" -> "knownPrograms";
"programDbPaths\'" -> "map";
"programDbPaths\'" -> "mkName";
"programDbPaths\'" -> "option";
"programDbPaths\'" -> "reqArg\'";
"programDbPaths\'" -> "set";
"programFlagsDescription" -> "knownPrograms";
"programFlagsDescription" -> "wrapLine";
"programInvocation" -> "emptyProgramInvocation";
"programInvocation" -> "programPath";
"programSearchPathAsPATHVar" -> "getEnvironment";
"programSearchPathAsPATHVar" -> "intercalate";
"programSearchPathAsPATHVar" -> "lookup";
"qualifiedExeName" -> "emptyExecutable";
"qualifiedExeName" -> "exeModules";
"qualifiedExeName" -> "exeModulesAutogen";
"qualifiedExeName" -> "exeName";
"qualifiedExeName" -> "exeScope";
"qualifiedExeName" -> "f";
"qualifiedExeName" -> "gmempty";
"qualifiedExeName" -> "l";
"qualifiedExeName" -> "modulePath";
"qualifiedExeName" -> "unUnqualComponentName";
"qualifiedExeName" -> "x";
"quote" -> "s";
"rawSystem" -> "createProcess";
"rawSystemExit" -> "debug";
"rawSystemExit" -> "printRawCommandAndArgs";
"rawSystemExit" -> "rawSystem";
"rawSystemExit" -> "withFrozenCallStack";
"rawSystemExitCode" -> "debug";
"rawSystemExitCode" -> "printRawCommandAndArgs";
"rawSystemExitCode" -> "rawSystem";
"rawSystemExitCode" -> "withFrozenCallStack";
"rawSystemExitWithEnv" -> "createProcess";
"rawSystemExitWithEnv" -> "debug";
"rawSystemExitWithEnv" -> "printRawCommandAndArgsAndEnv";
"rawSystemExitWithEnv" -> "withFrozenCallStack";
"rawSystemIOWithEnv" -> "createProcessWithEnv";
"rawSystemIOWithEnv" -> "debug";
"rawSystemIOWithEnv" -> "withFrozenCallStack";
"rawSystemIOWithEnvAndAction" -> "createProcessWithEnv";
"rawSystemIOWithEnvAndAction" -> "debug";
"rawSystemIOWithEnvAndAction" -> "withFrozenCallStack";
"rawSystemStdInOut" -> "debug";
"rawSystemStdInOut" -> "null";
"rawSystemStdInOut" -> "printRawCommandAndArgs";
"rawSystemStdInOut" -> "runInteractiveProcess";
"rawSystemStdInOut" -> "waitCatch";
"rawSystemStdInOut" -> "withAsyncNF";
"rawSystemStdInOut" -> "withFrozenCallStack";
"rawSystemStdInOut" -> "x";
"rawSystemStdout" -> "die\'";
"rawSystemStdout" -> "rawSystemStdInOut";
"rawSystemStdout" -> "withFrozenCallStack";
"rc_depends" -> "abstractUnitId";
"rc_depends" -> "ci_cname";
"rc_depends" -> "ci_id";
"rc_depends" -> "ci_pkgid";
"rc_depends" -> "computeCompatPackageId";
"rc_depends" -> "map";
"rc_depends" -> "ordNub";
"rc_depends" -> "prettyShow";
"rc_munged_id" -> "computeCompatPackageId";
"rc_munged_id" -> "installedUnitId";
"rc_munged_id" -> "libName";
"rc_munged_id" -> "map";
"rc_munged_id" -> "newSimpleUnitId";
"rc_munged_id" -> "ordNub";
"rc_munged_id" -> "rc_depends";
"rc_munged_id" -> "rc_pkgid";
"rc_munged_id" -> "rc_uid";
"readAndParseFile" -> "die\'";
"readAndParseFile" -> "parseString";
"readAndParseFile" -> "parser";
"readBuildTargets" -> "checkTargetExistsAsFile";
"readBuildTargets" -> "readUserBuildTargets";
"readBuildTargets" -> "reportBuildTargetProblems";
"readBuildTargets" -> "reportUserBuildTargetProblems";
"readBuildTargets" -> "resolveBuildTargets";
"readFields" -> "readFields\'";
"readFields" -> "s";
"readFields\'" -> "cabalStyleFile";
"readFields\'" -> "getLexerWarnings";
"readFields\'" -> "mkLexState";
"readFields\'" -> "mkLexState\'";
"readFields\'" -> "parser";
"readFields\'" -> "s";
"readGenericPackageDescription" -> "parseGenericPackageDescription";
"readGenericPackageDescription" -> "readAndParseFile";
"readGhcEnvironmentFile" -> "getImplInfo";
"readGhcEnvironmentFile" -> "ghcVersionImplInfo";
"readGhcEnvironmentFile" -> "ghcjsVersionImplInfo";
"readGhcEnvironmentFile" -> "parseGhcEnvironmentFile";
"readHookedBuildInfo" -> "parseHookedBuildInfo";
"readHookedBuildInfo" -> "readAndParseFile";
"readNubList" -> "l";
"readNubList" -> "toNubList";
"readPoint" -> "s";
"readTargetInfos" -> "checkBuildTargets";
"readTargetInfos" -> "readBuildTargets";
"readUTF8File" -> "f";
"readUTF8File" -> "fromUTF8LBS";
"readUTF8File" -> "ignoreBOM";
"readUnifRef" -> "liftST";
"readUnifRef" -> "s";
"readUserBuildTarget" -> "explicitEitherParsec";
"readUserBuildTarget" -> "s";
"readUserBuildTarget" -> "x";
"readUserBuildTargets" -> "map";
"readUserBuildTargets" -> "readUserBuildTarget";
"recache" -> "recacheInvocation";
"recache" -> "runProgramInvocation";
"recacheInvocation" -> "packageDbOpts";
"recacheInvocation" -> "programInvocation";
"recacheInvocation" -> "verbosityOpts";
"reclassify" -> "f";
"reclassify" -> "internalError";
"reclassify" -> "l";
"reconfigurePrograms" -> "configurePrograms";
"reconfigurePrograms" -> "lookupKnownProgram";
"reconfigurePrograms" -> "userSpecifyArgss";
"reconfigurePrograms" -> "userSpecifyPaths";
"reconstructGlob" -> "reconstructGlob";
"recoverWith" -> "s";
"recoverWith" -> "x";
"reexportedModules" -> "f";
"reexportedModules" -> "s";
"reexportedModules" -> "x";
"reexportedModulesSupported" -> "ghcSupported";
"regScriptFileName" -> "buildOS";
"register" -> "die\'";
"register" -> "fromFlag";
"register" -> "generateOne";
"register" -> "map";
"register" -> "mapAccumM";
"register" -> "neededTargetsInBuildOrder\'";
"register" -> "readTargetInfos";
"register" -> "recache";
"register" -> "registerAll";
"register" -> "registerInvocation";
"register" -> "registrationPackageDB";
"register" -> "runProgramInvocation";
"register" -> "writeRegistrationFileDirectly";
"registerAction" -> "findDistPrefOrDefault";
"registerAction" -> "fromFlag";
"registerAction" -> "getBuildConfig";
"registerAction" -> "hookedAction";
"registerAction" -> "maybeToFlag";
"registerAction" -> "noExtraFlags";
"registerAction" -> "rawSystemExit";
"registerAction" -> "toFlag";
"registerAll" -> "compilerFlavor";
"registerAll" -> "deletePackageDB";
"registerAll" -> "flagToMaybe";
"registerAll" -> "fromFlag";
"registerAll" -> "info";
"registerAll" -> "length";
"registerAll" -> "notice";
"registerAll" -> "prettyShow";
"registerAll" -> "registerPackage";
"registerAll" -> "setupMessage\'";
"registerAll" -> "withHcPkg";
"registerAll" -> "writeHcPkgRegisterScript";
"registerAll" -> "writeUTF8File";
"registerCommand" -> "choiceOpt";
"registerCommand" -> "defaultRegisterFlags";
"registerCommand" -> "flagToList";
"registerCommand" -> "optArg\'";
"registerCommand" -> "option";
"registerCommand" -> "optionDistPref";
"registerCommand" -> "optionVerbosity";
"registerCommand" -> "trueArg";
"registerInvocation" -> "packageDbStackOpts";
"registerInvocation" -> "programInvocation";
"registerInvocation" -> "showInstalledPackageInfo";
"registerInvocation" -> "verbosityOpts";
"registerPackage" -> "compilerFlavor";
"registerPackage" -> "createDirectoryIfMissingVerbose";
"registerPackage" -> "die\'";
"registerPackage" -> "getGlobalPackageDir";
"registerPackage" -> "getUserPackageDir";
"registerPackage" -> "haskellSuitePkgProgram";
"registerPackage" -> "hcPkgInfo";
"registerPackage" -> "installedPkgConfig";
"registerPackage" -> "packageDbOpt";
"registerPackage" -> "prettyShow";
"registerPackage" -> "programInvocation";
"registerPackage" -> "registrationPackageDB";
"registerPackage" -> "requireProgram";
"registerPackage" -> "runProgramInvocation";
"registerPackage" -> "showInstalledPackageInfo";
"registerPackage" -> "sourcePackageId";
"registerPackage" -> "uhcPackageDir";
"registerPackage" -> "writeUTF8File";
"registrationPackageDB" -> "safeLast";
"relaxHeadInterval" -> "anaVersionRange";
"relaxHeadInterval" -> "anyVersion";
"relaxHeadInterval" -> "asVersionIntervals";
"relaxHeadInterval" -> "cataVersionRange";
"relaxHeadInterval" -> "earlierVersion";
"relaxHeadInterval" -> "embedVersionRange";
"relaxHeadInterval" -> "foldVersionRange";
"relaxHeadInterval" -> "fromVersionIntervals";
"relaxHeadInterval" -> "hasLowerBound";
"relaxHeadInterval" -> "hasUpperBound";
"relaxHeadInterval" -> "hyloVersionRange";
"relaxHeadInterval" -> "intersectVersionIntervals";
"relaxHeadInterval" -> "intersectVersionRanges";
"relaxHeadInterval" -> "invertVersionIntervals";
"relaxHeadInterval" -> "isAnyVersion";
"relaxHeadInterval" -> "isAnyVersionLight";
"relaxHeadInterval" -> "isWildcardRange";
"relaxHeadInterval" -> "laterVersion";
"relaxHeadInterval" -> "majorBoundVersion";
"relaxHeadInterval" -> "majorUpperBound";
"relaxHeadInterval" -> "mkVersionIntervals";
"relaxHeadInterval" -> "noVersion";
"relaxHeadInterval" -> "normaliseVersionRange";
"relaxHeadInterval" -> "notThisVersion";
"relaxHeadInterval" -> "orEarlierVersion";
"relaxHeadInterval" -> "orLaterVersion";
"relaxHeadInterval" -> "projectVersionRange";
"relaxHeadInterval" -> "relaxHeadInterval";
"relaxHeadInterval" -> "relaxLastInterval";
"relaxHeadInterval" -> "stripParensVersionRange";
"relaxHeadInterval" -> "thisVersion";
"relaxHeadInterval" -> "toVersionIntervals";
"relaxHeadInterval" -> "unionVersionIntervals";
"relaxHeadInterval" -> "unionVersionRanges";
"relaxHeadInterval" -> "versionIntervals";
"relaxHeadInterval" -> "versionRangeParser";
"relaxHeadInterval" -> "wildcardUpperBound";
"relaxHeadInterval" -> "withinIntervals";
"relaxHeadInterval" -> "withinRange";
"relaxHeadInterval" -> "withinVersion";
"relaxHeadInterval" -> "zeroLowerBound";
"relaxLastInterval" -> "l";
"relocRegistrationInfo" -> "compilerFlavor";
"relocRegistrationInfo" -> "die\'";
"relocRegistrationInfo" -> "relocatableInstalledPackageInfo";
"relocatableInstalledPackageInfo" -> "absoluteComponentInstallDirs";
"relocatableInstalledPackageInfo" -> "generalInstalledPackageInfo";
"relocatableInstalledPackageInfo" -> "libBuildInfo";
"relocatableInstalledPackageInfo" -> "null";
"relocatableInstalledPackageInfo" -> "shortRelativePath";
"removeLowerBound" -> "fromVersionIntervals";
"removeLowerBound" -> "relaxHeadInterval";
"removeLowerBound" -> "toVersionIntervals";
"removeUpperBound" -> "fromVersionIntervals";
"removeUpperBound" -> "relaxLastInterval";
"removeUpperBound" -> "toVersionIntervals";
"renamePreModuleShape" -> "interpModuleRenaming";
"renamingPackageFlagsSupported" -> "ghcSupported";
"render" -> "autogenComponentModulesDir";
"render" -> "autogenPackageModulesDir";
"render" -> "autogenPathsModuleName";
"render" -> "cppHeaderName";
"render" -> "defaultDistPref";
"render" -> "dllExtension";
"render" -> "exeBuildDir";
"render" -> "exeExtension";
"render" -> "execWriter";
"render" -> "flibBuildDir";
"render" -> "generatePathsModule";
"render" -> "getExeSourceFiles";
"render" -> "getFLibSourceFiles";
"render" -> "getLibSourceFiles";
"render" -> "getSourceFiles";
"render" -> "haddockDirName";
"render" -> "haddockName";
"render" -> "haddockPref";
"render" -> "hscolourPref";
"render" -> "mkGenericSharedBundledLibName";
"render" -> "mkGenericSharedLibName";
"render" -> "mkGenericStaticLibName";
"render" -> "mkLibName";
"render" -> "mkProfLibName";
"render" -> "mkSharedLibName";
"render" -> "mkStaticLibName";
"render" -> "objExtension";
"render" -> "pkgPathEnvVar";
"render" -> "prettyShow";
"render" -> "srcPref";
"render" -> "staticLibExtension";
"render" -> "tell";
"renderArgs" -> "createDirectoryIfMissingVerbose";
"renderArgs" -> "f";
"renderArgs" -> "fromFlag";
"renderArgs" -> "intercalate";
"renderArgs" -> "map";
"renderArgs" -> "mkVersion";
"renderArgs" -> "packageName";
"renderArgs" -> "prettyShow";
"renderArgs" -> "renderPureArgs";
"renderArgs" -> "unDir";
"renderArgs" -> "withResponseFile";
"renderArgs" -> "withTempFileEx";
"renderBuildTarget" -> "componentKind";
"renderBuildTarget" -> "componentStringName";
"renderBuildTarget" -> "f";
"renderBuildTarget" -> "prettyShow";
"renderBuildTarget" -> "showComponentKindShort";
"renderErrMsg" -> "s";
"renderField" -> "fromUTF8BS";
"renderField" -> "length";
"renderField" -> "lines\'";
"renderField" -> "map";
"renderField" -> "null";
"renderField" -> "renderFields";
"renderFields" -> "flattenBlocks";
"renderFields" -> "map";
"renderFields" -> "renderField";
"renderGhcEnvironmentFile" -> "map";
"renderGhcEnvironmentFile" -> "renderGhcEnvironmentFileEntry";
"renderGhcEnvironmentFileEntry" -> "buildExe";
"renderGhcEnvironmentFileEntry" -> "buildFLib";
"renderGhcEnvironmentFileEntry" -> "buildLib";
"renderGhcEnvironmentFileEntry" -> "componentCcGhcOptions";
"renderGhcEnvironmentFileEntry" -> "componentGhcOptions";
"renderGhcEnvironmentFileEntry" -> "configure";
"renderGhcEnvironmentFileEntry" -> "getGhcInfo";
"renderGhcEnvironmentFileEntry" -> "getGlobalPackageDB";
"renderGhcEnvironmentFileEntry" -> "getImplInfo";
"renderGhcEnvironmentFileEntry" -> "getInstalledPackages";
"renderGhcEnvironmentFileEntry" -> "getInstalledPackagesMonitorFiles";
"renderGhcEnvironmentFileEntry" -> "getLibDir";
"renderGhcEnvironmentFileEntry" -> "getPackageDBContents";
"renderGhcEnvironmentFileEntry" -> "hcPkgInfo";
"renderGhcEnvironmentFileEntry" -> "installExe";
"renderGhcEnvironmentFileEntry" -> "installFLib";
"renderGhcEnvironmentFileEntry" -> "installLib";
"renderGhcEnvironmentFileEntry" -> "intercalate";
"renderGhcEnvironmentFileEntry" -> "isDynamic";
"renderGhcEnvironmentFileEntry" -> "libAbiHash";
"renderGhcEnvironmentFileEntry" -> "map";
"renderGhcEnvironmentFileEntry" -> "parseGhcEnvironmentFile";
"renderGhcEnvironmentFileEntry" -> "pkgRoot";
"renderGhcEnvironmentFileEntry" -> "prettyShow";
"renderGhcEnvironmentFileEntry" -> "readGhcEnvironmentFile";
"renderGhcEnvironmentFileEntry" -> "registerPackage";
"renderGhcEnvironmentFileEntry" -> "replExe";
"renderGhcEnvironmentFileEntry" -> "replFLib";
"renderGhcEnvironmentFileEntry" -> "replLib";
"renderGhcEnvironmentFileEntry" -> "runCmd";
"renderGhcEnvironmentFileEntry" -> "startInterpreter";
"renderGhcOptions" -> "compilerCompatVersion";
"renderGhcOptions" -> "compilerFlavor";
"renderGhcOptions" -> "flagToList";
"renderGhcOptions" -> "flagToMaybe";
"renderGhcOptions" -> "fromFlagOrDefault";
"renderGhcOptions" -> "getImplInfo";
"renderGhcOptions" -> "intercalate";
"renderGhcOptions" -> "map";
"renderGhcOptions" -> "mkVersion";
"renderGhcOptions" -> "null";
"renderGhcOptions" -> "packageDbArgs";
"renderGhcOptions" -> "packageKeySupported";
"renderGhcOptions" -> "parmakeSupported";
"renderGhcOptions" -> "prettyShow";
"renderGhcOptions" -> "s";
"renderGhcOptions" -> "space";
"renderGhcOptions" -> "unitIdSupported";
"renderGhcOptions" -> "verbosityOpts";
"renderJson" -> "intercalate";
"renderJson" -> "map";
"renderJson" -> "render";
"renderJson" -> "renderJson";
"renderJson" -> "s";
"renderJson" -> "showString\'";
"renderJson" -> "surround";
"renderPureArgs" -> "f";
"renderPureArgs" -> "flagToMaybe";
"renderPureArgs" -> "fromFlag";
"renderPureArgs" -> "intercalate";
"renderPureArgs" -> "l";
"renderPureArgs" -> "map";
"renderPureArgs" -> "mkVersion";
"renderPureArgs" -> "pkgName";
"renderPureArgs" -> "pkgVersion";
"renderPureArgs" -> "prettyShow";
"renderPureArgs" -> "renderGhcOptions";
"renderPureArgs" -> "unDir";
"renderPureArgs" -> "x";
"repl" -> "addInternalBuildTools";
"repl" -> "allTargetsInBuildOrder\'";
"repl" -> "buildComponent";
"repl" -> "componentBuildInfo";
"repl" -> "componentInitialBuildSteps";
"repl" -> "createInternalPackageDB";
"repl" -> "debug";
"repl" -> "die\'";
"repl" -> "fromFlag";
"repl" -> "intercalate";
"repl" -> "map";
"repl" -> "neededTargetsInBuildOrder\'";
"repl" -> "readTargetInfos";
"repl" -> "replComponent";
"repl" -> "safeInit";
"repl" -> "showComponentName";
"replAction" -> "findDistPrefOrDefault";
"replAction" -> "fromFlag";
"replAction" -> "getBuildConfig";
"replAction" -> "reconfigurePrograms";
"replAction" -> "sanityCheckHookedBuildInfo";
"replAction" -> "toFlag";
"replAction" -> "updatePackageDescription";
"replCommand" -> "defaultReplFlags";
"replCommand" -> "liftOption";
"replCommand" -> "map";
"replCommand" -> "option";
"replCommand" -> "optionDistPref";
"replCommand" -> "optionVerbosity";
"replCommand" -> "programDbOption";
"replCommand" -> "programDbOptions";
"replCommand" -> "programDbPaths";
"replCommand" -> "replOptions";
"replCommand" -> "trueArg";
"replCommand" -> "wrapText";
"replComponent" -> "benchmarkExeV10asExe";
"replComponent" -> "benchmarkInterface";
"replComponent" -> "die\'";
"replComponent" -> "libBuildInfo";
"replComponent" -> "preprocessComponent";
"replComponent" -> "preprocessExtras";
"replComponent" -> "prettyShow";
"replComponent" -> "replExe";
"replComponent" -> "replFLib";
"replComponent" -> "replLib";
"replComponent" -> "test";
"replComponent" -> "testInterface";
"replComponent" -> "testSuiteExeV10AsExe";
"replComponent" -> "testSuiteLibV09AsLibAndExe";
"replExe" -> "compilerFlavor";
"replExe" -> "die\'";
"replExe" -> "gbuild";
"replFLib" -> "compilerFlavor";
"replFLib" -> "die\'";
"replFLib" -> "gbuild";
"replLib" -> "buildOrReplLib";
"replLib" -> "compilerFlavor";
"replLib" -> "die\'";
"replOptions" -> "option";
"replOptions" -> "reqArg";
"replOptions" -> "succeedReadE";
"replacementChar" -> "incPos";
"replacementChar" -> "positionCol";
"replacementChar" -> "positionRow";
"replacementChar" -> "retPos";
"replacementChar" -> "showPos";
"replacementChar" -> "zeroPos";
"repoBranch" -> "f";
"repoBranch" -> "s";
"repoBranch" -> "x";
"repoKind" -> "f";
"repoKind" -> "s";
"repoKind" -> "x";
"repoLocation" -> "f";
"repoLocation" -> "s";
"repoLocation" -> "x";
"repoModule" -> "f";
"repoModule" -> "s";
"repoModule" -> "x";
"repoSubdir" -> "emptyTestSuite";
"repoSubdir" -> "f";
"repoSubdir" -> "l";
"repoSubdir" -> "s";
"repoSubdir" -> "testBuildInfo";
"repoSubdir" -> "testInterface";
"repoSubdir" -> "testModules";
"repoSubdir" -> "testModulesAutogen";
"repoSubdir" -> "testName";
"repoSubdir" -> "testType";
"repoSubdir" -> "unUnqualComponentName";
"repoSubdir" -> "x";
"repoTag" -> "f";
"repoTag" -> "s";
"repoTag" -> "x";
"repoType" -> "f";
"repoType" -> "s";
"repoType" -> "x";
"repoTypeAliases" -> "classifyRepoKind";
"repoTypeAliases" -> "isIdent";
"reportBuildTargetProblems" -> "die\'";
"reportBuildTargetProblems" -> "intercalate";
"reportBuildTargetProblems" -> "showUserBuildTarget";
"reportFailedDependencies" -> "die\'";
"reportFailedDependencies" -> "hackageUrl";
"reportFailedDependencies" -> "intercalate";
"reportFailedDependencies" -> "map";
"reportFailedDependencies" -> "prettyLibraryNameComponent";
"reportFailedDependencies" -> "prettyShow";
"reportFailedDependencies" -> "simplifyDependency";
"reportProgram" -> "info";
"reportProgram" -> "prettyShow";
"reportSelectedDependencies" -> "info";
"reportSelectedDependencies" -> "prettyShow";
"reportSelectedDependencies" -> "simplifyDependency";
"reportUserBuildTargetProblems" -> "die\'";
"repr" -> "readPoint";
"repr" -> "repr";
"repr" -> "s";
"repr" -> "writePoint";
"reqArg" -> "set";
"reqArgFlag" -> "flagToList";
"reqArgFlag" -> "reqArg";
"reqArgFlag" -> "succeedReadE";
"reqArg\'" -> "reqArg";
"reqArg\'" -> "succeedReadE";
"requireProgram" -> "die\'";
"requireProgram" -> "needProgram";
"requireProgramVersion" -> "defaultProgramSearchPath";
"requireProgramVersion" -> "die\'";
"requireProgramVersion" -> "findExecutable";
"requireProgramVersion" -> "findProgramOnSearchPath";
"requireProgramVersion" -> "getSystemSearchPath";
"requireProgramVersion" -> "lookupProgramVersion";
"requireProgramVersion" -> "programSearchPathAsPATHVar";
"requiredSignatures" -> "instantiatedWith";
"requiredSignatures" -> "openModuleSubstFreeHoles";
"resolveBuildTarget" -> "disambiguateBuildTargets";
"resolveBuildTarget" -> "findMatch";
"resolveBuildTarget" -> "matchBuildTarget";
"resolveBuildTarget" -> "null";
"resolveBuildTargets" -> "map";
"resolveBuildTargets" -> "resolveBuildTarget";
"resolveWithFlags" -> "addBuildableConditionPDTagged";
"resolveWithFlags" -> "build";
"resolveWithFlags" -> "constrainBy";
"resolveWithFlags" -> "fromDepMap";
"resolveWithFlags" -> "fromDepMapUnion";
"resolveWithFlags" -> "insertFlagAssignment";
"resolveWithFlags" -> "lookupFlagAssignment";
"resolveWithFlags" -> "map";
"resolveWithFlags" -> "mapTreeConds";
"resolveWithFlags" -> "mapTreeConstrs";
"resolveWithFlags" -> "null";
"resolveWithFlags" -> "overallDependencies";
"resolveWithFlags" -> "simplifyCondTree";
"resolveWithFlags" -> "simplifyWithSysParams";
"resolveWithFlags" -> "toDepMap";
"resolveWithFlags" -> "toDepMapUnion";
"restoreProgramDb" -> "addKnownPrograms";
"resultString" -> "l";
"resultString" -> "suiteError";
"resultString" -> "suiteFailed";
"returnLex" -> "s";
"revClosure" -> "decodeVertexForest";
"revNeighbors" -> "map";
"revTopSort" -> "map";
"reverseDependencyClosure" -> "dependencyGraph";
"reverseDependencyClosure" -> "map";
"reverseTopologicalOrder" -> "dependencyGraph";
"reverseTopologicalOrder" -> "map";
"rewriteFileEx" -> "rewriteFileLBS";
"rewriteFileEx" -> "toUTF8LBS";
"rewriteFileLBS" -> "annotateIO";
"rewriteFileLBS" -> "catchIO";
"rewriteFileLBS" -> "writeFileAtomic";
"rpmvercmp" -> "compareInt";
"rpmvercmp" -> "compareStr";
"rpmvercmp" -> "dropNonAlnum8";
"rpmvercmp" -> "isAlpha8";
"rpmvercmp" -> "isDigit8";
"rpmvercmp" -> "null";
"rpmvercmp" -> "x";
"runCmd" -> "explainGlobSyntaxError";
"runCmd" -> "fileGlobMatches";
"runCmd" -> "ghcjsProgram";
"runCmd" -> "lookupProgram";
"runCmd" -> "matchDirFileGlob";
"runCmd" -> "matchDirFileGlobWithDie";
"runCmd" -> "parseFileGlob";
"runCmd" -> "programPath";
"runCmd" -> "runDirFileGlob";
"runConfigureScript" -> "badAutoconfCharacters";
"runConfigureScript" -> "buildPlatform";
"runConfigureScript" -> "configureArgs";
"runConfigureScript" -> "configureCCompiler";
"runConfigureScript" -> "configureProgram";
"runConfigureScript" -> "die\'";
"runConfigureScript" -> "emptyProgramDb";
"runConfigureScript" -> "getEnvironment";
"runConfigureScript" -> "getShortPathName";
"runConfigureScript" -> "intercalate";
"runConfigureScript" -> "lookup";
"runConfigureScript" -> "lookupProgram";
"runConfigureScript" -> "makeAbsolute";
"runConfigureScript" -> "map";
"runConfigureScript" -> "modifyProgramSearchPath";
"runConfigureScript" -> "null";
"runConfigureScript" -> "programInvocation";
"runConfigureScript" -> "runProgramInvocation";
"runConfigureScript" -> "simpleProgram";
"runConfigureScript" -> "warn";
"runDbProgram" -> "die\'";
"runDbProgram" -> "lookupProgram";
"runDbProgram" -> "runProgram";
"runDirFileGlob" -> "checkExt";
"runDirFileGlob" -> "debug";
"runDirFileGlob" -> "getDirectoryContentsRecursive";
"runDirFileGlob" -> "null";
"runDirFileGlob" -> "reconstructGlob";
"runDirFileGlob" -> "splitConstantPrefix";
"runDirFileGlob" -> "warn";
"runFieldParser" -> "fieldLinesToStream";
"runFieldParser" -> "map";
"runFieldParser" -> "runFieldParser\'";
"runFieldParser\'" -> "parseFatalFailure";
"runFieldParser\'" -> "parseWarning";
"runFieldParser\'" -> "zeroPos";
"runGHC" -> "ghcInvocation";
"runGHC" -> "runProgramInvocation";
"runHaddock" -> "notice";
"runHaddock" -> "null";
"runHaddock" -> "renderArgs";
"runHaddock" -> "runProgram";
"runHaddock" -> "warn";
"runInteractiveProcess" -> "createProcess";
"runLogProgress" -> "dieNoWrap";
"runLogProgress" -> "foldProgress";
"runLogProgress" -> "render";
"runParseResult" -> "emptyPRState";
"runParseResult" -> "f";
"runParseResult" -> "s";
"runParseResult" -> "x";
"runParseResult" -> "zeroPos";
"runParsecParser" -> "cabalSpecLatest";
"runParsecParser" -> "runParsecParser\'";
"runParsecParser\'" -> "map";
"runParsecParser\'" -> "postprocess";
"runProgram" -> "programInvocation";
"runProgram" -> "runProgramInvocation";
"runProgramInvocation" -> "die\'";
"runProgramInvocation" -> "encodeToIOData";
"runProgramInvocation" -> "getEffectiveEnvironment";
"runProgramInvocation" -> "getExtraPathEnv";
"runProgramInvocation" -> "rawSystemExit";
"runProgramInvocation" -> "rawSystemIOWithEnv";
"runProgramInvocation" -> "rawSystemStdInOut";
"runSnocList" -> "annotateCallStackIO";
"runSnocList" -> "callStack";
"runSnocList" -> "parentSrcLocPrefix";
"runSnocList" -> "prettyCallStack";
"runSnocList" -> "withFrozenCallStack";
"runSnocList" -> "withLexicalCallStack";
"runStrip" -> "buildOS";
"runStrip" -> "lookupProgram";
"runStrip" -> "runProgram";
"runStrip" -> "stripProgram";
"runStrip" -> "warn";
"runTest" -> "addLibraryPath";
"runTest" -> "build";
"runTest" -> "createPipe";
"runTest" -> "createProcessWithEnv";
"runTest" -> "debug";
"runTest" -> "die\'";
"runTest" -> "exeExtension";
"runTest" -> "f";
"runTest" -> "fromFlag";
"runTest" -> "getEnvironment";
"runTest" -> "guessWay";
"runTest" -> "l";
"runTest" -> "map";
"runTest" -> "markupTest";
"runTest" -> "normal";
"runTest" -> "notice";
"runTest" -> "package";
"runTest" -> "pkgPathEnvVar";
"runTest" -> "prettyShow";
"runTest" -> "rawSystemIOWithEnvAndAction";
"runTest" -> "s";
"runTest" -> "stubName";
"runTest" -> "suitePassed";
"runTest" -> "summarizeSuiteFinish";
"runTest" -> "summarizeSuiteStart";
"runTest" -> "testName";
"runTest" -> "testOption";
"runTest" -> "testSuiteLogPath";
"runTest" -> "tixDir";
"runTest" -> "tixFilePath";
"runTest" -> "unUnqualComponentName";
"runUnifyM" -> "f";
"runUnifyM" -> "map";
"runUnifyM" -> "null";
"runUnifyM" -> "renderErrMsg";
"runUnifyM" -> "s";
"runUnifyM" -> "x";
"runghcProgram" -> "findProgramVersion";
"runghcProgram" -> "simpleProgram";
"s" -> "f";
"s" -> "l";
"s" -> "pretextPeek";
"s" -> "pretextPeeks";
"s" -> "pretextSell";
"s" -> "s";
"s" -> "set";
"safeHead" -> "x";
"safeInit" -> "safeInit";
"safeInit" -> "x";
"safeLast" -> "x";
"sanityCheckHookedBuildInfo" -> "die\'";
"sanityCheckHookedBuildInfo" -> "exeName";
"sanityCheckHookedBuildInfo" -> "executables";
"sanityCheckHookedBuildInfo" -> "library";
"sanityCheckHookedBuildInfo" -> "map";
"sanityCheckHookedBuildInfo" -> "prettyShow";
"satisfyRange" -> "s";
"scanSpecVersion" -> "benchmarkFieldGrammar";
"scanSpecVersion" -> "buildInfoFieldGrammar";
"scanSpecVersion" -> "executableFieldGrammar";
"scanSpecVersion" -> "flagFieldGrammar";
"scanSpecVersion" -> "foreignLibFieldGrammar";
"scanSpecVersion" -> "libraryFieldGrammar";
"scanSpecVersion" -> "packageDescriptionFieldGrammar";
"scanSpecVersion" -> "ppGenericPackageDescription";
"scanSpecVersion" -> "setupBInfoFieldGrammar";
"scanSpecVersion" -> "showGenericPackageDescription";
"scanSpecVersion" -> "showHookedBuildInfo";
"scanSpecVersion" -> "showPackageDescription";
"scanSpecVersion" -> "simpleParsecBS";
"scanSpecVersion" -> "sourceRepoFieldGrammar";
"scanSpecVersion" -> "testSuiteFieldGrammar";
"scanSpecVersion" -> "versionNumbers";
"scanSpecVersion" -> "writeGenericPackageDescription";
"scanSpecVersion" -> "writeHookedBuildInfo";
"scanSpecVersion" -> "writePackageDescription";
"sdist" -> "createArchive";
"sdist" -> "createDirectoryIfMissingVerbose";
"sdist" -> "findDistPrefOrDefault";
"sdist" -> "flagToMaybe";
"sdist" -> "fromFlag";
"sdist" -> "info";
"sdist" -> "listPackageSources";
"sdist" -> "notice";
"sdist" -> "overwriteSnapshotPackageDesc";
"sdist" -> "prepareTree";
"sdist" -> "printPackageProblems";
"sdist" -> "setupMessage";
"sdist" -> "snapshotPackage";
"sdist" -> "tarBallName";
"sdist" -> "withTempDirectory";
"sdistAction" -> "confPkgDescr";
"sdistAction" -> "emptyUserHooks";
"sdistAction" -> "flattenPackageDescription";
"sdistAction" -> "fromFlag";
"sdistAction" -> "knownSuffixHandlers";
"sdistAction" -> "noExtraFlags";
"sdistAction" -> "rawSystemExit";
"sdistAction" -> "sdist";
"sdistAction" -> "srcPref";
"sdistCommand" -> "defaultSDistFlags";
"sdistCommand" -> "option";
"sdistCommand" -> "optionDistPref";
"sdistCommand" -> "optionVerbosity";
"sdistCommand" -> "reqArgFlag";
"sdistCommand" -> "trueArg";
"searchByName" -> "find";
"searchByName" -> "lowercase";
"searchByName" -> "map";
"searchByName" -> "mkPackageName";
"searchByName" -> "unPackageName";
"searchByNameSubstring" -> "lowercase";
"searchByNameSubstring" -> "searchWithPredicate";
"searchWithPredicate" -> "unPackageName";
"sectionArg" -> "tokOther";
"sectionArg" -> "tokStr";
"sectionArg" -> "tokSym\'";
"sectionArgsToString" -> "fromUTF8BS";
"sectionArgsToString" -> "map";
"sectionArgsToString" -> "showTokenStr";
"sectionLayoutOrBraces" -> "closeBrace";
"sectionLayoutOrBraces" -> "elements";
"sectionLayoutOrBraces" -> "openBrace";
"sectionLayoutOrBraces" -> "tokIndent";
"sectionLayoutOrBraces" -> "zeroIndentLevel";
"sectionizeFields" -> "f";
"sectionizeFields" -> "fieldlinesToBS";
"sectionizeFields" -> "getName";
"sectionizeFields" -> "libFieldNames";
"sectionizeFields" -> "map";
"selectDependency" -> "ipiToPreExistingComponent";
"selectDependency" -> "packageName";
"selectDependency" -> "packageVersion";
"selectDependency" -> "safeHead";
"sepBy" -> "sepByNonEmpty";
"sepBy" -> "toList";
"sepEndBy" -> "sepEndByNonEmpty";
"sepEndBy" -> "toList";
"sepEndByNonEmpty" -> "sepEndBy";
"set" -> "l";
"set" -> "over";
"set" -> "s";
"set" -> "x";
"setEnv" -> "setEnv_";
"setEnv_" -> "callStack";
"setFileExecutable" -> "setFileExecutable";
"setFileMode" -> "s";
"setFileOrdinary" -> "setFileMode";
"setInput" -> "s";
"setLexerMode" -> "getInput";
"setLexerMode" -> "mkLexState\'";
"setLexerMode" -> "setInput";
"setMaybePackageName" -> "sourcePackageId";
"setMungedPackageName" -> "sourceLibName";
"setMungedPackageName" -> "sourcePackageId";
"setPos" -> "s";
"setStartCode" -> "s";
"setUnitId" -> "installedComponentId_";
"setUnitId" -> "installedUnitId";
"setUnitId" -> "mkComponentId";
"setUnitId" -> "mkLegacyUnitId";
"setUnitId" -> "prettyShow";
"setUnitId" -> "sourcePackageId";
"setUnitId" -> "unUnitId";
"setupBInfoFieldGrammar" -> "alaList";
"setupBuildInfo" -> "f";
"setupBuildInfo" -> "s";
"setupBuildInfo" -> "x";
"setupDepends" -> "f";
"setupDepends" -> "s";
"setupDepends" -> "x";
"setupMessage" -> "noticeNoWrap";
"setupMessage" -> "prettyShow";
"setupMessage" -> "withFrozenCallStack";
"setupMessage\'" -> "expandOpenUnitId";
"setupMessage\'" -> "expandUnitId";
"setupMessage\'" -> "noticeDoc";
"setupMessage\'" -> "null";
"setupMessage\'" -> "showComponentName";
"setupMessage\'" -> "withFrozenCallStack";
"shGetFolderPath" -> "s";
"shapeInstalledPackage" -> "installedOpenUnitId";
"shapeInstalledPackage" -> "ipiToPreExistingComponent";
"shapeInstalledPackage" -> "map";
"shapeInstalledPackage" -> "requiredSignatures";
"sharedOptionsFieldGrammar" -> "alaList\'";
"sharedOptionsFieldGrammar" -> "f";
"sharedOptionsFieldGrammar" -> "lookupLens";
"shortOpt" -> "errAmbig";
"shortOpt" -> "errReq";
"shortOpt" -> "f";
"shortOpt" -> "s";
"shortRelativePath" -> "map";
"shortRelativePath" -> "x";
"showBuildInfo" -> "fromFlag";
"showBuildInfo" -> "map";
"showBuildInfo" -> "mkBuildInfo";
"showBuildInfo" -> "neededTargetsInBuildOrder\'";
"showBuildInfo" -> "readTargetInfos";
"showBuildInfo" -> "renderJson";
"showBuildInfoAction" -> "findDistPrefOrDefault";
"showBuildInfoAction" -> "fromFlag";
"showBuildInfoAction" -> "getBuildConfig";
"showBuildInfoAction" -> "maybeToFlag";
"showBuildInfoAction" -> "reconfigurePrograms";
"showBuildInfoAction" -> "showBuildInfo";
"showBuildInfoAction" -> "toFlag";
"showBuildInfoAction" -> "updatePackageDescription";
"showBuildInfoCommand" -> "defaultShowBuildFlags";
"showBuildInfoCommand" -> "option";
"showBuildInfoCommand" -> "parseBuildFlagsForShowBuildInfoFlags";
"showBuildInfoCommand" -> "programFlagsDescription";
"showBuildInfoCommand" -> "reqArg\'";
"showBuildInfoCommand" -> "usageAlternatives";
"showBuildInfoCommand" -> "wrapText";
"showBuildTarget" -> "showBuildTarget\'";
"showBuildTarget\'" -> "renderBuildTarget";
"showBuildTarget\'" -> "showUserBuildTarget";
"showCompilerId" -> "prettyShow";
"showCompilerIdWithAbi" -> "prettyShow";
"showComponentName" -> "prettyShow";
"showComponentName" -> "showLibraryName";
"showExposedModules" -> "map";
"showFields" -> "showFields\'";
"showFields\'" -> "renderFields";
"showFilePath" -> "showToken";
"showFlagAssignment" -> "dispFlagAssignment";
"showFlagAssignment" -> "prettyShow";
"showFlagValue" -> "dispFlagAssignment";
"showFlagValue" -> "f";
"showFlagValue" -> "parsecFlagAssignment";
"showFlagValue" -> "unFlagName";
"showForGHC" -> "silent";
"showFreeText" -> "l";
"showFreeText" -> "lines_";
"showFreeText" -> "null";
"showFreeText" -> "s";
"showFreeTextV3" -> "l";
"showFreeTextV3" -> "lines_";
"showFreeTextV3" -> "s";
"showFullInstalledPackageInfo" -> "cabalSpecLatest";
"showFullInstalledPackageInfo" -> "ipiFieldGrammar";
"showFullInstalledPackageInfo" -> "prettyFieldGrammar";
"showGenericPackageDescription" -> "packageDescription";
"showGenericPackageDescription" -> "ppGenericPackageDescription";
"showGenericPackageDescription" -> "showFields";
"showGenericPackageDescription" -> "specVersion";
"showHeader" -> "currentCabalId";
"showHeader" -> "currentCompilerId";
"showHeader" -> "prettyShow";
"showHeader" -> "toUTF8LBS";
"showHookedBuildInfo" -> "buildInfoFieldGrammar";
"showHookedBuildInfo" -> "cabalSpecLatest";
"showHookedBuildInfo" -> "prettyFieldGrammar";
"showHookedBuildInfo" -> "showFields";
"showInstalledPackageInfo" -> "pkgRoot";
"showInstalledPackageInfo" -> "showFullInstalledPackageInfo";
"showInstalledPackageInfoField" -> "fieldDescrPretty";
"showInstalledPackageInfoField" -> "ipiFieldGrammar";
"showInstalledPackageInfoField" -> "ppField";
"showInstalledPackageInfoField" -> "toUTF8BS";
"showLibraryName" -> "prettyShow";
"showMD5" -> "length";
"showMD5" -> "s";
"showPError" -> "fieldLineStreamEnd";
"showPError" -> "fieldLineStreamFromBS";
"showPError" -> "fieldLineStreamFromString";
"showPError" -> "showPos";
"showPWarning" -> "defaultStyle";
"showPWarning" -> "flatStyle";
"showPWarning" -> "prettyShow";
"showPWarning" -> "showFilePath";
"showPWarning" -> "showFreeText";
"showPWarning" -> "showFreeTextV3";
"showPWarning" -> "showPos";
"showPWarning" -> "showToken";
"showPWarning" -> "showTokenStr";
"showPackageDbList" -> "map";
"showPackageDescription" -> "pdToGpd";
"showPackageDescription" -> "showGenericPackageDescription";
"showPkgName" -> "fixchar";
"showPkgName" -> "map";
"showPkgName" -> "unPackageName";
"showProfDetailLevel" -> "ccLdOptionsBuildInfo";
"showProfDetailLevel" -> "checkForeignDeps";
"showProfDetailLevel" -> "checkPersistBuildConfigOutdated";
"showProfDetailLevel" -> "compilerVersion";
"showProfDetailLevel" -> "computeCompatPackageKey";
"showProfDetailLevel" -> "computeComponentId";
"showProfDetailLevel" -> "computeEffectiveProfiling";
"showProfDetailLevel" -> "configCompilerAuxEx";
"showProfDetailLevel" -> "configCompilerEx";
"showProfDetailLevel" -> "configure";
"showProfDetailLevel" -> "defaultStyle";
"showProfDetailLevel" -> "doesPathExist";
"showProfDetailLevel" -> "findDistPref";
"showProfDetailLevel" -> "findDistPrefOrDefault";
"showProfDetailLevel" -> "getConfigStateFile";
"showProfDetailLevel" -> "getInstalledPackages";
"showProfDetailLevel" -> "getInstalledPackagesMonitorFiles";
"showProfDetailLevel" -> "getInternalLibraries";
"showProfDetailLevel" -> "getPackageDBContents";
"showProfDetailLevel" -> "getPersistBuildConfig";
"showProfDetailLevel" -> "interpretPackageDbFlags";
"showProfDetailLevel" -> "localBuildInfoFile";
"showProfDetailLevel" -> "maybeGetPersistBuildConfig";
"showProfDetailLevel" -> "platformDefines";
"showProfDetailLevel" -> "prettyShow";
"showProfDetailLevel" -> "render";
"showProfDetailLevel" -> "simpleParsec";
"showProfDetailLevel" -> "tryGetConfigStateFile";
"showProfDetailLevel" -> "tryGetPersistBuildConfig";
"showProfDetailLevel" -> "writePersistBuildConfig";
"showProfDetailLevelFlag" -> "showProfDetailLevel";
"showSimpleInstalledPackageInfoField" -> "fieldDescrPretty";
"showSimpleInstalledPackageInfoField" -> "ipiFieldGrammar";
"showSimpleInstalledPackageInfoField" -> "toUTF8BS";
"showString\'" -> "x";
"showToken" -> "showTokenStr";
"showTokenStr" -> "null";
"showUserBuildTarget" -> "intercalate";
"signatures" -> "f";
"signatures" -> "s";
"signatures" -> "x";
"signedIntegral" -> "integral";
"silent" -> "mkVerbosity";
"simpleConfiguredProgram" -> "abiHash";
"simpleConfiguredProgram" -> "absoluteInstalledPackageInfo";
"simpleConfiguredProgram" -> "createPackageDB";
"simpleConfiguredProgram" -> "deletePackageDB";
"simpleConfiguredProgram" -> "doesPackageDBExist";
"simpleConfiguredProgram" -> "generalInstalledPackageInfo";
"simpleConfiguredProgram" -> "generateRegistrationInfo";
"simpleConfiguredProgram" -> "initPackageDB";
"simpleConfiguredProgram" -> "inplaceInstalledPackageInfo";
"simpleConfiguredProgram" -> "internalPackageDBPath";
"simpleConfiguredProgram" -> "invokeHcPkg";
"simpleConfiguredProgram" -> "register";
"simpleConfiguredProgram" -> "registerPackage";
"simpleConfiguredProgram" -> "unregister";
"simpleGhcEnvironmentFile" -> "map";
"simpleLicenseExpression" -> "cabalSpecVersionToSPDXListVersion";
"simpleLicenseExpression" -> "idstring";
"simpleLicenseExpression" -> "isPrefixOfMaybe";
"simpleLicenseExpression" -> "l";
"simpleLicenseExpression" -> "licenseIdMigrationMessage";
"simpleLicenseExpression" -> "mkLicenseId";
"simpleLicenseExpression" -> "mkLicenseRef";
"simpleParse" -> "mkAbiHash";
"simpleParse" -> "simpleParsec";
"simpleParse" -> "unAbiHash";
"simpleParsec" -> "fieldLineStreamFromString";
"simpleParsec" -> "lexemeParsec";
"simpleParsec" -> "runParsecParser";
"simpleParsecBS" -> "fieldLineStreamFromBS";
"simpleParsecBS" -> "lexemeParsec";
"simpleParsecBS" -> "runParsecParser";
"simpleParsecW\'" -> "fieldLineStreamFromString";
"simpleParsecW\'" -> "lexemeParsec";
"simpleParsecW\'" -> "liftParsec";
"simpleParsecW\'" -> "null";
"simpleParsecW\'" -> "runParsecParser\'";
"simpleParsecW\'" -> "x";
"simpleParsec\'" -> "fieldLineStreamFromString";
"simpleParsec\'" -> "lexemeParsec";
"simpleParsec\'" -> "runParsecParser\'";
"simpleProgram" -> "findProgramOnSearchPath";
"simpleProgramInvocation" -> "emptyProgramInvocation";
"simpleUserHooks" -> "allSuffixHandlers";
"simpleUserHooks" -> "checkForeignDeps";
"simpleUserHooks" -> "clean";
"simpleUserHooks" -> "configure";
"simpleUserHooks" -> "defaultBenchHook";
"simpleUserHooks" -> "defaultBuildHook";
"simpleUserHooks" -> "defaultInstallHook";
"simpleUserHooks" -> "defaultRegHook";
"simpleUserHooks" -> "defaultReplHook";
"simpleUserHooks" -> "defaultTestHook";
"simpleUserHooks" -> "emptyUserHooks";
"simpleUserHooks" -> "f";
"simpleUserHooks" -> "fromFlag";
"simpleUserHooks" -> "haddock";
"simpleUserHooks" -> "hscolour";
"simpleUserHooks" -> "install";
"simpleUserHooks" -> "l";
"simpleUserHooks" -> "lessVerbose";
"simpleUserHooks" -> "unregister";
"simplifyCondTree" -> "simplifyCondTree";
"simplifyCondTree" -> "simplifyCondition";
"simplifyCondition" -> "depLibraries";
"simplifyCondition" -> "depPkgName";
"simplifyCondition" -> "depVerRange";
"simplifyCondition" -> "mainLibSet";
"simplifyCondition" -> "mkDependency";
"simplifyCondition" -> "simplifyDependency";
"simplifyDependency" -> "constrainBy";
"simplifyDependency" -> "fromDepMap";
"simplifyDependency" -> "intersectVersionRangesAndJoinComponents";
"simplifyDependency" -> "simplifyVersionRange";
"simplifyDependency" -> "toDepMap";
"simplifyPackageVersionConstraint" -> "anyPkgconfigVersion";
"simplifyPackageVersionConstraint" -> "mkPkgconfigName";
"simplifyPackageVersionConstraint" -> "simplifyVersionRange";
"simplifyPackageVersionConstraint" -> "unPkgconfigName";
"simplifyVersionRange" -> "fromVersionIntervals";
"simplifyVersionRange" -> "null";
"simplifyVersionRange" -> "toVersionIntervals";
"simplifyVersionRange" -> "unVersionIntervals";
"simplifyWindows" -> "emptyToCurDir";
"simplifyWindows" -> "expandDots";
"simplifyWindows" -> "normalisePathSeps";
"simplifyWindows" -> "normaliseTrailingSep";
"simplifyWindows" -> "null";
"simplifyWindows" -> "pathSeparator";
"simplifyWindows" -> "s";
"simplifyWithSysParams" -> "f";
"simplifyWithSysParams" -> "simplifyCondition";
"simplifyWithSysParams" -> "withinRange";
"singletonF" -> "f";
"singletonF" -> "s";
"size" -> "toMap";
"sizeError" -> "f";
"sizeError" -> "s";
"sizeError" -> "size";
"skipSpaces1" -> "copyExecutableFile";
"skipSpaces1" -> "copyFile";
"skipSpaces1" -> "copyFileChanged";
"skipSpaces1" -> "copyOrdinaryFile";
"skipSpaces1" -> "filesEqual";
"skipSpaces1" -> "pathSeparator";
"skipSpaces1" -> "setDirOrdinary";
"skipSpaces1" -> "setFileExecutable";
"skipSpaces1" -> "setFileOrdinary";
"skipSpaces1" -> "space";
"snapshotPackage" -> "package";
"snapshotPackage" -> "pkgVersion";
"snapshotPackage" -> "snapshotVersion";
"snapshotVersion" -> "alterVersion";
"snapshotVersion" -> "dateToSnapshotNumber";
"snoc" -> "doesPathExist";
"snoc" -> "empty";
"snoc" -> "listDirectory";
"snoc" -> "makeAbsolute";
"snoc" -> "singleton";
"snoc" -> "x";
"sourceComponentName" -> "sourceLibName";
"sourceLibName" -> "f";
"sourceLibName" -> "s";
"sourceLibName" -> "x";
"sourcePackageId" -> "f";
"sourcePackageId" -> "s";
"sourcePackageId" -> "x";
"sourceRepoFieldGrammar" -> "optionalField";
"sourceRepos" -> "f";
"sourceRepos" -> "s";
"sourceRepos" -> "x";
"spaces" -> "space";
"spanMaybe" -> "spanMaybe";
"spanMaybe" -> "x";
"specHasElif" -> "cancel";
"specHasElif" -> "uninterruptibleCancel";
"specHasElif" -> "wait";
"specHasElif" -> "waitCatch";
"specHasElif" -> "withAsync";
"specHasElif" -> "withAsyncNF";
"specVersion" -> "f";
"specVersion" -> "s";
"specVersion" -> "x";
"splitArgs" -> "s";
"splitArgs" -> "space";
"splitConstantPrefix" -> "haddock";
"splitConstantPrefix" -> "haddockPackagePaths";
"splitConstantPrefix" -> "hscolour";
"splitConstantPrefix" -> "unfoldr\'";
"stability" -> "f";
"stability" -> "s";
"stability" -> "x";
"stage1" -> "cataVersionRange";
"stage1" -> "intersectInterval";
"stage1" -> "isVersion0";
"stage1" -> "majorUpperBound";
"stage1" -> "nonEmptyInterval";
"stage1" -> "stage2and3";
"stage1" -> "zeroLowerBound";
"stage2" -> "lowerboundCmp";
"stage2and3" -> "stage2";
"stage2and3" -> "stage3";
"stage3" -> "stage3go";
"stage3go" -> "doesNotTouch";
"stage3go" -> "stage3go";
"stage3go" -> "unionUpper";
"standardPP" -> "mkSimplePreProcessor";
"standardPP" -> "runDbProgram";
"startInterpreter" -> "checkPackageDbStack";
"startInterpreter" -> "compilerFlavor";
"startInterpreter" -> "die\'";
"startInterpreter" -> "ghcProgram";
"startInterpreter" -> "ghcjsProgram";
"startInterpreter" -> "requireProgram";
"startInterpreter" -> "runGHC";
"startInterpreter" -> "toFlag";
"stateCommonStanzas" -> "f";
"stateGpd" -> "f";
"stateGpd" -> "x";
"staticLibExtension" -> "buildTargetComponentName";
"staticLibExtension" -> "readBuildTargets";
"staticLibExtension" -> "readTargetInfos";
"staticLibExtension" -> "readUserBuildTargets";
"staticLibExtension" -> "reportBuildTargetProblems";
"staticLibExtension" -> "reportUserBuildTargetProblems";
"staticLibExtension" -> "resolveBuildTargets";
"staticLibExtension" -> "showBuildTarget";
"staticLibExtension" -> "showUserBuildTarget";
"std_flags" -> "std_flags";
"stringLiteral" -> "escapeCode";
"stringLookup_3_0" -> "licenseExceptionId";
"stringLookup_3_0" -> "licenseExceptionIdList";
"stringLookup_3_0" -> "licenseId";
"stringLookup_3_0" -> "licenseIdList";
"stringLookup_3_0" -> "map";
"stringLookup_3_10" -> "licenseExceptionId";
"stringLookup_3_10" -> "licenseExceptionIdList";
"stringLookup_3_10" -> "licenseId";
"stringLookup_3_10" -> "licenseIdList";
"stringLookup_3_10" -> "map";
"stringLookup_3_2" -> "licenseExceptionId";
"stringLookup_3_2" -> "licenseExceptionIdList";
"stringLookup_3_2" -> "licenseId";
"stringLookup_3_2" -> "licenseIdList";
"stringLookup_3_2" -> "map";
"stringLookup_3_6" -> "licenseExceptionId";
"stringLookup_3_6" -> "licenseExceptionIdList";
"stringLookup_3_6" -> "licenseId";
"stringLookup_3_6" -> "licenseIdList";
"stringLookup_3_6" -> "map";
"stringLookup_3_9" -> "licenseExceptionId";
"stringLookup_3_9" -> "licenseExceptionIdList";
"stringLookup_3_9" -> "licenseId";
"stringLookup_3_9" -> "licenseIdList";
"stringLookup_3_9" -> "map";
"stripExe" -> "runStrip";
"stripExtension" -> "x";
"stripExtractVersion" -> "combineObjectFiles";
"stripExtractVersion" -> "defaultTempFileOptions";
"stripExtractVersion" -> "fromFlagOrDefault";
"stripExtractVersion" -> "multiStageProgramInvocation";
"stripExtractVersion" -> "programInvocation";
"stripExtractVersion" -> "runProgramInvocation";
"stripExtractVersion" -> "safeTail";
"stripExtractVersion" -> "withResponseFile";
"stripExtractVersion" -> "x";
"stripLib" -> "lookupProgram";
"stripLib" -> "mkVersion";
"stripLib" -> "orLaterVersion";
"stripLib" -> "programPath";
"stripLib" -> "runStrip";
"stripLib" -> "simpleConfiguredProgram";
"stripLib" -> "simpleProgram";
"stripLib" -> "stripProgram";
"stripLib" -> "suppressOverrideArgs";
"stripLib" -> "warn";
"stripLib" -> "withinRange";
"stripProgram" -> "findProgramVersion";
"stripProgram" -> "lessVerbose";
"stripProgram" -> "simpleProgram";
"stripProgram" -> "stripExtractVersion";
"stronglyConnComp" -> "decode";
"stronglyConnComp" -> "map";
"structureBuilder" -> "genericStructure";
"structureBuilder" -> "hashStructure";
"structureBuilder" -> "insert";
"structureBuilder" -> "s";
"structuredDecodeFileOrFail" -> "binaryGetMD5";
"structuredDecodeFileOrFail" -> "binaryPutMD5";
"structuredDecodeFileOrFail" -> "f";
"structuredDecodeFileOrFail" -> "showMD5";
"structuredDecodeFileOrFail" -> "structuredDecodeOrFailIO";
"structuredDecodeOrFailIO" -> "structuredDecode";
"structuredEncode" -> "x";
"structuredEncodeFile" -> "f";
"structuredEncodeFile" -> "structuredEncode";
"stubFilePath" -> "stubName";
"stubMain" -> "f";
"stubMain" -> "s";
"stubMain" -> "stubRunTests";
"stubMain" -> "stubWriteLog";
"stubMain" -> "testName";
"stubName" -> "unUnqualComponentName";
"stubRunTests" -> "l";
"stubRunTests" -> "normal";
"stubRunTests" -> "summarizeTest";
"stubRunTests" -> "testName";
"stubWriteLog" -> "countTestResults";
"stubWriteLog" -> "f";
"stubWriteLog" -> "localPackageLog";
"stubWriteLog" -> "package";
"stubWriteLog" -> "suiteError";
"stubWriteLog" -> "suiteFailed";
"stubWriteLog" -> "suitePassed";
"stubWriteLog" -> "summarizePackage";
"stubWriteLog" -> "summarizeSuiteFinish";
"stubWriteLog" -> "summarizeSuiteStart";
"stubWriteLog" -> "summarizeTest";
"stubWriteLog" -> "testSuiteLogPath";
"stubWriteLog" -> "testSuites";
"subLibraries" -> "f";
"subLibraries" -> "s";
"subLibraries" -> "x";
"substPathTemplate" -> "allPackages";
"substPathTemplate" -> "allPackagesByName";
"substPathTemplate" -> "allPackagesBySourcePackageId";
"substPathTemplate" -> "allPackagesBySourcePackageIdAndLibName";
"substPathTemplate" -> "brokenPackages";
"substPathTemplate" -> "compilerInfo";
"substPathTemplate" -> "components";
"substPathTemplate" -> "deletePackageName";
"substPathTemplate" -> "deleteSourcePackageId";
"substPathTemplate" -> "deleteUnitId";
"substPathTemplate" -> "dependencyClosure";
"substPathTemplate" -> "dependencyCycles";
"substPathTemplate" -> "dependencyGraph";
"substPathTemplate" -> "dependencyInconsistencies";
"substPathTemplate" -> "fromList";
"substPathTemplate" -> "fromPathTemplate";
"substPathTemplate" -> "initialPathTemplateEnv";
"substPathTemplate" -> "insert";
"substPathTemplate" -> "lookup";
"substPathTemplate" -> "lookupComponentId";
"substPathTemplate" -> "lookupDependency";
"substPathTemplate" -> "lookupInternalDependency";
"substPathTemplate" -> "lookupPackageId";
"substPathTemplate" -> "lookupPackageName";
"substPathTemplate" -> "lookupSourcePackageId";
"substPathTemplate" -> "lookupUnitId";
"substPathTemplate" -> "merge";
"substPathTemplate" -> "moduleNameIndex";
"substPathTemplate" -> "reverseDependencyClosure";
"substPathTemplate" -> "reverseTopologicalOrder";
"substPathTemplate" -> "searchByName";
"substPathTemplate" -> "searchByNameSubstring";
"substPathTemplate" -> "searchWithPredicate";
"substPathTemplate" -> "topologicalOrder";
"substTopDir" -> "f";
"substTopDir" -> "map";
"substTopDir" -> "x";
"substituteInstallDirTemplates" -> "substPathTemplate";
"succeedReadE" -> "f";
"suiteError" -> "countTestResults";
"suiteError" -> "l";
"suiteFailed" -> "countTestResults";
"suiteFailed" -> "l";
"suitePassed" -> "countTestResults";
"suitePassed" -> "l";
"summarizePackage" -> "countTestResults";
"summarizePackage" -> "length";
"summarizePackage" -> "map";
"summarizePackage" -> "notice";
"summarizePackage" -> "suitePassed";
"summarizePackage" -> "testSuites";
"summarizeSuiteFinish" -> "map";
"summarizeSuiteFinish" -> "prettyShow";
"summarizeSuiteFinish" -> "resultString";
"summarizeSuiteStart" -> "buildExe";
"summarizeSuiteStart" -> "buildLib";
"summarizeSuiteStart" -> "configure";
"summarizeSuiteStart" -> "getInstalledPackages";
"summarizeSuiteStart" -> "inplacePackageDbPath";
"summarizeSuiteStart" -> "installLib";
"summarizeSuiteStart" -> "registerPackage";
"summarizeTest" -> "notice";
"summarizeTest" -> "testName";
"synopsis" -> "f";
"synopsis" -> "s";
"synopsis" -> "x";
"takeFields" -> "defaultFreeTextFieldDefST";
"takeFields" -> "monoidalField";
"takeFields" -> "optionalField";
"takeFields" -> "optionalFieldDef";
"takeFields" -> "s";
"takeFields" -> "spanMaybe";
"takeFields" -> "uniqueField";
"takeWhileEndLE" -> "x";
"tarBallName" -> "prettyShow";
"tarProgram" -> "catchIO";
"tarProgram" -> "getProgramInvocationOutput";
"tarProgram" -> "programInvocation";
"tarProgram" -> "simpleProgram";
"targetPlatform" -> "lookup";
"targetPlatform" -> "platformFromTriple";
"tell" -> "classifyExtension";
"tell" -> "classifyLanguage";
"tell" -> "deprecatedExtensions";
"tell" -> "knownLanguages";
"tell" -> "s";
"test" -> "die\'";
"test" -> "fromFlag";
"test" -> "length";
"test" -> "localPackageLog";
"test" -> "lookup";
"test" -> "map";
"test" -> "markupPackage";
"test" -> "mkUnqualComponentName";
"test" -> "notice";
"test" -> "null";
"test" -> "packageLogPath";
"test" -> "prettyShow";
"test" -> "summarizePackage";
"test" -> "testName";
"test" -> "testSuites";
"test" -> "unUnqualComponentName";
"testAction" -> "findDistPrefOrDefault";
"testAction" -> "fromFlag";
"testAction" -> "getBuildConfig";
"testAction" -> "hookedActionWithArgs";
"testAction" -> "toFlag";
"testBuildInfo" -> "f";
"testBuildInfo" -> "knownTestTypes";
"testBuildInfo" -> "nullVersion";
"testBuildInfo" -> "s";
"testBuildInfo" -> "x";
"testCommand" -> "defaultTestFlags";
"testCommand" -> "testOptions\'";
"testCommand" -> "usageAlternatives";
"testCommand" -> "wrapText";
"testFillInDefaults" -> "biFillInDefaults";
"testFillInDefaults" -> "testBuildInfo";
"testInterface" -> "f";
"testInterface" -> "s";
"testInterface" -> "x";
"testModules" -> "test";
"testModules" -> "testBuildInfo";
"testModules" -> "testInterface";
"testModulesAutogen" -> "test";
"testModulesAutogen" -> "testBuildInfo";
"testName" -> "f";
"testName" -> "s";
"testName" -> "x";
"testOption" -> "compilerInfo";
"testOption" -> "fromPathTemplate";
"testOption" -> "initialPathTemplateEnv";
"testOption" -> "runTest";
"testOption" -> "simpleTestStub";
"testOption" -> "stubFilePath";
"testOption" -> "stubMain";
"testOption" -> "stubName";
"testOption" -> "stubWriteLog";
"testOption" -> "substPathTemplate";
"testOption" -> "toPathTemplate";
"testOption" -> "unUnqualComponentName";
"testOption" -> "writeSimpleTestStub";
"testOptions\'" -> "flagToList";
"testOptions\'" -> "fromPathTemplate";
"testOptions\'" -> "intercalate";
"testOptions\'" -> "knownTestShowDetails";
"testOptions\'" -> "map";
"testOptions\'" -> "option";
"testOptions\'" -> "optionDistPref";
"testOptions\'" -> "optionVerbosity";
"testOptions\'" -> "parsecToReadE";
"testOptions\'" -> "prettyShow";
"testOptions\'" -> "reqArg";
"testOptions\'" -> "reqArg\'";
"testOptions\'" -> "splitArgs";
"testOptions\'" -> "toFlag";
"testOptions\'" -> "toPathTemplate";
"testOptions\'" -> "trueArg";
"testOptions\'" -> "x";
"testStanzaBuildInfo" -> "f";
"testStanzaBuildInfo" -> "s";
"testStanzaBuildInfo" -> "x";
"testStanzaMainIs" -> "f";
"testStanzaMainIs" -> "s";
"testStanzaMainIs" -> "x";
"testStanzaTestModule" -> "f";
"testStanzaTestModule" -> "s";
"testStanzaTestModule" -> "x";
"testStanzaTestType" -> "f";
"testStanzaTestType" -> "s";
"testStanzaTestType" -> "x";
"testSuiteExeV10AsExe" -> "exeName";
"testSuiteExeV10AsExe" -> "exeScope";
"testSuiteExeV10AsExe" -> "modulePath";
"testSuiteExeV10AsExe" -> "test";
"testSuiteExeV10AsExe" -> "testBuildInfo";
"testSuiteExeV10AsExe" -> "testInterface";
"testSuiteExeV10AsExe" -> "testName";
"testSuiteFieldGrammar" -> "buildInfoFieldGrammar";
"testSuiteFieldGrammar" -> "optionalField";
"testSuiteFieldGrammar" -> "testStanzaBuildInfo";
"testSuiteFieldGrammar" -> "testStanzaMainIs";
"testSuiteFieldGrammar" -> "testStanzaTestModule";
"testSuiteFieldGrammar" -> "testStanzaTestType";
"testSuiteLibV09AsLibAndExe" -> "computeCompatPackageKey";
"testSuiteLibV09AsLibAndExe" -> "defaultRenaming";
"testSuiteLibV09AsLibAndExe" -> "exeName";
"testSuiteLibV09AsLibAndExe" -> "exeScope";
"testSuiteLibV09AsLibAndExe" -> "executables";
"testSuiteLibV09AsLibAndExe" -> "exposedModules";
"testSuiteLibV09AsLibAndExe" -> "inplaceInstalledPackageInfo";
"testSuiteLibV09AsLibAndExe" -> "libBuildInfo";
"testSuiteLibV09AsLibAndExe" -> "libExposed";
"testSuiteLibV09AsLibAndExe" -> "libName";
"testSuiteLibV09AsLibAndExe" -> "libVisibility";
"testSuiteLibV09AsLibAndExe" -> "mainLibSet";
"testSuiteLibV09AsLibAndExe" -> "map";
"testSuiteLibV09AsLibAndExe" -> "mkAbiHash";
"testSuiteLibV09AsLibAndExe" -> "mkComponentId";
"testSuiteLibV09AsLibAndExe" -> "mkPackageName";
"testSuiteLibV09AsLibAndExe" -> "mkUnitId";
"testSuiteLibV09AsLibAndExe" -> "mkUnqualComponentName";
"testSuiteLibV09AsLibAndExe" -> "modulePath";
"testSuiteLibV09AsLibAndExe" -> "package";
"testSuiteLibV09AsLibAndExe" -> "pkgName";
"testSuiteLibV09AsLibAndExe" -> "pkgVersion";
"testSuiteLibV09AsLibAndExe" -> "prettyShow";
"testSuiteLibV09AsLibAndExe" -> "reexportedModules";
"testSuiteLibV09AsLibAndExe" -> "signatures";
"testSuiteLibV09AsLibAndExe" -> "stubFilePath";
"testSuiteLibV09AsLibAndExe" -> "stubName";
"testSuiteLibV09AsLibAndExe" -> "subLibraries";
"testSuiteLibV09AsLibAndExe" -> "test";
"testSuiteLibV09AsLibAndExe" -> "testBuildInfo";
"testSuiteLibV09AsLibAndExe" -> "testInterface";
"testSuiteLibV09AsLibAndExe" -> "testName";
"testSuiteLibV09AsLibAndExe" -> "testSuites";
"testSuiteLibV09AsLibAndExe" -> "thisVersion";
"testSuiteLibV09AsLibAndExe" -> "unsafeMakeSymbolicPath";
"testSuiteLibV09AsLibAndExe" -> "unsafeMkDefUnitId";
"testSuiteLibV09AsLibAndExe" -> "x";
"testSuiteLogPath" -> "compilerInfo";
"testSuiteLogPath" -> "fromPathTemplate";
"testSuiteLogPath" -> "initialPathTemplateEnv";
"testSuiteLogPath" -> "resultString";
"testSuiteLogPath" -> "substPathTemplate";
"testSuiteLogPath" -> "toPathTemplate";
"testSuites" -> "f";
"testSuites" -> "s";
"testSuites" -> "x";
"testType" -> "test";
"testType" -> "testInterface";
"testedWith" -> "f";
"testedWith" -> "s";
"testedWith" -> "x";
"thenLex" -> "s";
"thenLex" -> "thenLex";
"thisPackageVersionConstraint" -> "thisVersion";
"tixDir" -> "hpcDir";
"tixFilePath" -> "tixDir";
"toComponentLocalBuildInfos" -> "broken";
"toComponentLocalBuildInfos" -> "dieProgress";
"toComponentLocalBuildInfos" -> "emptyInstalledPackageInfo";
"toComponentLocalBuildInfos" -> "installedUnitId";
"toComponentLocalBuildInfos" -> "intercalate";
"toComponentLocalBuildInfos" -> "map";
"toComponentLocalBuildInfos" -> "mkLegacyUnitId";
"toComponentLocalBuildInfos" -> "mkLinkedComponentsLocalBuildInfo";
"toComponentLocalBuildInfos" -> "packageName";
"toComponentLocalBuildInfos" -> "prettyShow";
"toComponentLocalBuildInfos" -> "warnProgress";
"toConfiguredComponent" -> "componentBuildInfo";
"toConfiguredComponent" -> "dieProgress";
"toConfiguredComponent" -> "getAllToolDependencies";
"toConfiguredComponent" -> "mkConfiguredComponent";
"toConfiguredComponent" -> "newPackageDepsBehaviour";
"toConfiguredComponent" -> "ordNub";
"toConfiguredComponent" -> "packageName";
"toConfiguredComponent" -> "showLibraryName";
"toConfiguredComponent\'" -> "componentName";
"toConfiguredComponent\'" -> "computeComponentId";
"toConfiguredComponent\'" -> "package";
"toConfiguredComponent\'" -> "toConfiguredComponent";
"toConfiguredComponents" -> "extendConfiguredComponentMap";
"toConfiguredComponents" -> "mapAccumM";
"toConfiguredComponents" -> "toConfiguredComponent\'";
"toDListOf" -> "l";
"toDListOf" -> "s";
"toDListOf" -> "x";
"toDepMap" -> "intersectVersionRangesAndJoinComponents";
"toDepMapUnion" -> "unionVersionRanges\'";
"toExtendedLengthPath" -> "simplifyWindows";
"toFilePath" -> "f";
"toFilePath" -> "map";
"toFilePath" -> "mungedName\'";
"toFilePath" -> "mungedVersion\'";
"toFilePath" -> "packageName";
"toFilePath" -> "packageVersion";
"toFilePath" -> "pathSeparator";
"toFilePath" -> "unModuleName";
"toGhcOptimisation" -> "toFlag";
"toGraph" -> "createTempDirectory";
"toGraph" -> "openNewBinaryFile";
"toLinkedComponent" -> "ambiguousReexportMsg";
"toLinkedComponent" -> "brokenReexportMsg";
"toLinkedComponent" -> "componentBuildInfo";
"toLinkedComponent" -> "convertInclude";
"toLinkedComponent" -> "convertModule";
"toLinkedComponent" -> "convertModuleScopeU";
"toLinkedComponent" -> "convertUnitIdU";
"toLinkedComponent" -> "dieProgress";
"toLinkedComponent" -> "exposedModules";
"toLinkedComponent" -> "failIfErrs";
"toLinkedComponent" -> "getSource";
"toLinkedComponent" -> "l";
"toLinkedComponent" -> "map";
"toLinkedComponent" -> "mixLink";
"toLinkedComponent" -> "mixLinkPreModuleShape";
"toLinkedComponent" -> "packageName";
"toLinkedComponent" -> "reexportedModules";
"toLinkedComponent" -> "renamePreModuleShape";
"toLinkedComponent" -> "runUnifyM";
"toLinkedComponent" -> "s";
"toLinkedComponent" -> "signatures";
"toLinkedComponent" -> "toPreModuleShape";
"toLinkedComponent" -> "unWithSource";
"toLinkedComponent" -> "x";
"toLinkedComponents" -> "addProgressCtx";
"toLinkedComponents" -> "cc_name";
"toLinkedComponents" -> "componentNameStanza";
"toLinkedComponents" -> "extendLinkedComponentMap";
"toLinkedComponents" -> "mapAccumM";
"toLinkedComponents" -> "toLinkedComponent";
"toList" -> "runDList";
"toList" -> "s";
"toList" -> "toMap";
"toListOf" -> "l";
"toListOf" -> "s";
"toListOf" -> "toDListOf";
"toNonEmpty" -> "panic";
"toNonEmpty" -> "s";
"toNonEmpty" -> "x";
"toNubList" -> "list";
"toNubList" -> "ordNub";
"toNubListR" -> "list";
"toNubListR" -> "ordNubRight";
"toPWarnings" -> "intercalate";
"toPWarnings" -> "map";
"toPWarnings" -> "showPos";
"toPackageIndex" -> "getLibDir\'";
"toPackageIndex" -> "ghcProgram";
"toPackageIndex" -> "ghcjsProgram";
"toPackageIndex" -> "lookupProgram";
"toPackageIndex" -> "map";
"toReadyComponents" -> "addErr";
"toReadyComponents" -> "addErrContext";
"toReadyComponents" -> "addErrContextM";
"toReadyComponents" -> "ci_id";
"toReadyComponents" -> "convertInclude";
"toReadyComponents" -> "convertModule";
"toReadyComponents" -> "convertModuleProvides";
"toReadyComponents" -> "convertModuleProvidesU";
"toReadyComponents" -> "convertModuleScopeU";
"toReadyComponents" -> "convertModuleSubst";
"toReadyComponents" -> "convertModuleSubstU";
"toReadyComponents" -> "convertModuleU";
"toReadyComponents" -> "convertUnitId";
"toReadyComponents" -> "convertUnitIdU";
"toReadyComponents" -> "emptyModuleScopeU";
"toReadyComponents" -> "failIfErrs";
"toReadyComponents" -> "failWith";
"toReadyComponents" -> "getUnifEnv";
"toReadyComponents" -> "includes";
"toReadyComponents" -> "lc_cid";
"toReadyComponents" -> "lc_insts";
"toReadyComponents" -> "lc_uid";
"toReadyComponents" -> "liftST";
"toReadyComponents" -> "map";
"toReadyComponents" -> "mkDefUnitId";
"toReadyComponents" -> "mkVersion";
"toReadyComponents" -> "newSimpleUnitId";
"toReadyComponents" -> "nonExistentPackageThisIsCabalBug";
"toReadyComponents" -> "null";
"toReadyComponents" -> "openUnitIdFreeHoles";
"toReadyComponents" -> "rc_munged_id";
"toReadyComponents" -> "runUnifyM";
"toReadyComponents" -> "s";
"toReadyComponents" -> "tryM";
"toReadyComponents" -> "unsafeMkDefUnitId";
"toSet" -> "s";
"toSetOf" -> "l";
"toSetOf" -> "s";
"toSetOf" -> "x";
"toShortText" -> "decodeStringUtf8";
"toUTF8BS" -> "encodeStringUtf8";
"toUTF8LBS" -> "encodeStringUtf8";
"toVersionIntervals" -> "cataVersionRange";
"toVersionIntervals" -> "checkInvariant";
"toVersionIntervals" -> "intersectVersionIntervals";
"toVersionIntervals" -> "isVersion0";
"toVersionIntervals" -> "majorUpperBound";
"toVersionIntervals" -> "minLowerBound";
"toVersionIntervals" -> "postprocess";
"toVersionIntervals" -> "stage1";
"toVersionIntervals" -> "unionVersionIntervals";
"tokCloseBrace" -> "getTokenWithPos";
"tokCloseBrace" -> "s";
"tokColon" -> "getToken";
"tokFieldLine" -> "getTokenWithPos";
"tokFieldLine" -> "mkName";
"tokFieldLine" -> "x";
"tokIndent" -> "getToken";
"tokOpenBrace" -> "getToken";
"tokOther" -> "getToken";
"tokOther" -> "x";
"tokStr" -> "getTokenWithPos";
"tokStr" -> "x";
"tokSym" -> "getTokenWithPos";
"tokSym" -> "x";
"tokSym\'" -> "getTokenWithPos";
"tokSym\'" -> "x";
"tokenizeQuotedWords" -> "knownLicenses";
"tokenizeQuotedWords" -> "licenseFromSPDX";
"tokenizeQuotedWords" -> "licenseToSPDX";
"tokenizeQuotedWords" -> "null";
"tokenizeQuotedWords" -> "runDList";
"tokenizeQuotedWords" -> "singleton";
"topHandler" -> "topHandlerWith";
"topHandlerWith" -> "displaySomeException";
"topHandlerWith" -> "ioeGetVerbatim";
"topHandlerWith" -> "l";
"topHandlerWith" -> "wrapText";
"topSort" -> "map";
"topologicalOrder" -> "dependencyGraph";
"topologicalOrder" -> "map";
"traceShow" -> "createProcess";
"traceShow" -> "enableProcessJobs";
"traceShow" -> "rawSystem";
"traceShow" -> "runInteractiveProcess";
"traceShowId" -> "x";
"traceWhen" -> "isVerboseCallStack";
"traceWhen" -> "verbose";
"transformAllBuildDepends" -> "f";
"transformAllBuildDepends" -> "map";
"transformAllBuildDepends" -> "over";
"transformAllBuildDepends" -> "traverseCondTreeC";
"transformAllBuildDependsN" -> "benchmarkFieldGrammar";
"transformAllBuildDependsN" -> "benchmarkStanzaBenchmarkModule";
"transformAllBuildDependsN" -> "benchmarkStanzaBenchmarkType";
"transformAllBuildDependsN" -> "benchmarkStanzaBuildInfo";
"transformAllBuildDependsN" -> "benchmarkStanzaMainIs";
"transformAllBuildDependsN" -> "buildInfoFieldGrammar";
"transformAllBuildDependsN" -> "executableFieldGrammar";
"transformAllBuildDependsN" -> "f";
"transformAllBuildDependsN" -> "flagFieldGrammar";
"transformAllBuildDependsN" -> "foreignLibFieldGrammar";
"transformAllBuildDependsN" -> "formatDependencyList";
"transformAllBuildDependsN" -> "formatExposedModules";
"transformAllBuildDependsN" -> "formatExtraSourceFiles";
"transformAllBuildDependsN" -> "formatHsSourceDirs";
"transformAllBuildDependsN" -> "formatMixinList";
"transformAllBuildDependsN" -> "formatOtherExtensions";
"transformAllBuildDependsN" -> "formatOtherModules";
"transformAllBuildDependsN" -> "libraryFieldGrammar";
"transformAllBuildDependsN" -> "over";
"transformAllBuildDependsN" -> "packageDescriptionFieldGrammar";
"transformAllBuildDependsN" -> "setupBInfoFieldGrammar";
"transformAllBuildDependsN" -> "sourceRepoFieldGrammar";
"transformAllBuildDependsN" -> "testStanzaBuildInfo";
"transformAllBuildDependsN" -> "testStanzaMainIs";
"transformAllBuildDependsN" -> "testStanzaTestModule";
"transformAllBuildDependsN" -> "testStanzaTestType";
"transformAllBuildDependsN" -> "testSuiteFieldGrammar";
"transformAllBuildDependsN" -> "traverseCondTreeC";
"transformAllBuildDependsN" -> "unvalidateBenchmark";
"transformAllBuildDependsN" -> "unvalidateTestSuite";
"transformAllBuildDependsN" -> "validateBenchmark";
"transformAllBuildDependsN" -> "validateTestSuite";
"transformAllBuildInfos" -> "over";
"transformCaret" -> "earlierVersion";
"transformCaret" -> "embedVersionRange";
"transformCaret" -> "hyloVersionRange";
"transformCaret" -> "intersectVersionRanges";
"transformCaret" -> "majorUpperBound";
"transformCaret" -> "orLaterVersion";
"transformCaret" -> "projectVersionRange";
"transformCaretLower" -> "earlierVersion";
"transformCaretLower" -> "embedVersionRange";
"transformCaretLower" -> "execWriter";
"transformCaretLower" -> "hyloVersionRange";
"transformCaretLower" -> "majorUpperBound";
"transformCaretLower" -> "prettyShow";
"transformCaretLower" -> "projectVersionRange";
"transformCaretLower" -> "tell";
"transformCaretLower" -> "x";
"transformCaretUpper" -> "embedVersionRange";
"transformCaretUpper" -> "hyloVersionRange";
"transformCaretUpper" -> "orLaterVersion";
"transformCaretUpper" -> "projectVersionRange";
"traverseCondBranchC" -> "f";
"traverseCondBranchC" -> "traverseCondTreeC";
"traverseCondBranchV" -> "f";
"traverseCondBranchV" -> "traverseCondTreeV";
"traverseCondTreeBuildInfo" -> "f";
"traverseCondTreeBuildInfo" -> "view";
"traverseCondTreeBuildInfo" -> "x";
"traverseCondTreeC" -> "f";
"traverseCondTreeC" -> "traverseCondBranchC";
"traverseCondTreeV" -> "f";
"traverseCondTreeV" -> "traverseCondBranchV";
"trueArg" -> "boolOpt\'";
"trusted" -> "f";
"trusted" -> "s";
"trusted" -> "x";
"tryEach" -> "exactMatches";
"tryFindPackageDesc" -> "die\'";
"tryFindPackageDesc" -> "findPackageDesc";
"tryFindPackageDescCwd" -> "die\'";
"tryFindPackageDescCwd" -> "findPackageDescCwd";
"tryGetBuildConfig" -> "getBuildConfig";
"tryGetConfigStateFile" -> "getConfigStateFile";
"tryGetPersistBuildConfig" -> "getPersistBuildConfig";
"tryM" -> "s";
"typeName" -> "f";
"typeName" -> "s";
"typeRep" -> "abiTagString";
"typeRep" -> "buildCompilerFlavor";
"typeRep" -> "buildCompilerId";
"typeRep" -> "classifyCompilerFlavor";
"typeRep" -> "defaultCompilerFlavor";
"typeRep" -> "knownCompilerFlavors";
"typeRep" -> "perCompilerFlavorToList";
"typeRep" -> "unknownCompilerInfo";
"typeVersion" -> "f";
"typeVersion" -> "s";
"uhcLanguageExtensions" -> "f";
"uhcPackageDbOptions" -> "map";
"uhcPackageDbOptions" -> "packageDbPaths";
"uhcPackageDbOptions" -> "x";
"uhcPackageDir" -> "uhcTarget";
"uhcPackageDir" -> "uhcTargetVariant";
"uhcPackageSubDir" -> "uhcPackageSubDir";
"uhcProgram" -> "findProgramVersion";
"uhcProgram" -> "simpleProgram";
"unAbiHash" -> "fromShortText";
"unComponentId" -> "ci_cname";
"unComponentId" -> "ci_id";
"unComponentId" -> "ci_pkgid";
"unComponentId" -> "fromShortText";
"unComponentId" -> "mkComponentId";
"unComponentId" -> "s";
"unComponentId" -> "unComponentId";
"unFlagName" -> "fromShortText";
"unFlagName" -> "lowercase";
"unFlagName" -> "mkFlagName";
"unFlagName" -> "s";
"unFlagName" -> "unFlagName";
"unModuleName" -> "fromShortText";
"unModuleName" -> "parsecModuleName";
"unModuleName" -> "s";
"unModuleName" -> "unModuleName";
"unPackageName" -> "fromShortText";
"unPackageName" -> "s";
"unPackageNameST" -> "s";
"unPkgconfigName" -> "fromShortText";
"unPkgconfigName" -> "s";
"unUnitId" -> "fromShortText";
"unUnitId" -> "s";
"unUnqualComponentName" -> "fromShortText";
"unUnqualComponentName" -> "s";
"unUnqualComponentNameST" -> "s";
"unWithSource" -> "x";
"unclassify" -> "internalError";
"unclassify" -> "s";
"unconfigureProgram" -> "updateConfiguredProgs";
"unconsChar" -> "f";
"unconsChar" -> "replacementChar";
"unescape" -> "map";
"unescapeArgs" -> "null";
"unescapeArgs" -> "unescape";
"unfoldrM" -> "f";
"unfoldr\'" -> "f";
"unfoldr\'" -> "unfoldr\'";
"unifiedIPIDRequired" -> "ghcSupported";
"unifyInner" -> "failWith";
"unifyInner" -> "liftST";
"unifyInner" -> "s";
"unifyInner" -> "unifyModule";
"unifyModule" -> "dispModuleSource";
"unifyModule" -> "emptyModuleScope";
"unifyModule" -> "failWith";
"unifyModule" -> "getSource";
"unifyModule" -> "liftST";
"unifyModule" -> "openModuleSubstFreeHoles";
"unifyModule" -> "unWithSource";
"unifyModule" -> "unifyUnitId";
"unifyModule" -> "x";
"unifyThunkWith" -> "convertModuleSubst";
"unifyThunkWith" -> "expandUnitId";
"unifyThunkWith" -> "getUnifEnv";
"unifyThunkWith" -> "s";
"unifyThunkWith" -> "unifyInner";
"unifyUnitId" -> "failWith";
"unifyUnitId" -> "liftST";
"unifyUnitId" -> "unifyInner";
"unifyUnitId" -> "unifyThunkWith";
"uninterruptibleCancel" -> "cancel";
"uninterruptibleCancel" -> "decode";
"uninterruptibleCancel" -> "decodeFileOrFail\'";
"uninterruptibleCancel" -> "decodeOrFailIO";
"uninterruptibleCancel" -> "encode";
"uninterruptibleCancel" -> "encodeFile";
"unintersperse" -> "null";
"unintersperse" -> "safeTail";
"union" -> "readPoint";
"union" -> "repr";
"union" -> "runProgramInvocation";
"union" -> "s";
"union" -> "unionInvocation";
"union" -> "writePoint";
"unionInterval" -> "doesNotTouch";
"unionInterval" -> "lower";
"unionInterval" -> "upper";
"unionInvocation" -> "prettyShow";
"unionInvocation" -> "programInvocation";
"unionInvocation" -> "stripExtractVersion";
"unionLeft" -> "unionRight";
"unionRight" -> "fromMap";
"unionRight" -> "toMap";
"unionUpper" -> "unionBound";
"unionVersionIntervals" -> "checkInvariant";
"unionVersionIntervals" -> "union";
"unionVersionIntervals" -> "unionInterval";
"unionVersionRanges\'" -> "unionVersionRanges";
"uniqueField" -> "l";
"uniqueField" -> "s";
"unitIdSupported" -> "ghcSupported";
"unitIdTarget" -> "unitIdTarget\'";
"unitIdTarget\'" -> "mkTargetInfo";
"unitedList" -> "f";
"unitedList" -> "s";
"unknownCompilerInfo" -> "defaultFreeTextFieldDefST";
"unknownCompilerInfo" -> "fieldGrammarKnownFieldList";
"unknownCompilerInfo" -> "monoidalField";
"unknownCompilerInfo" -> "optionalField";
"unknownCompilerInfo" -> "optionalFieldDef";
"unknownCompilerInfo" -> "parseFieldGrammar";
"unknownCompilerInfo" -> "partitionFields";
"unknownCompilerInfo" -> "prettyFieldGrammar";
"unknownCompilerInfo" -> "runFieldParser";
"unknownCompilerInfo" -> "runFieldParser\'";
"unknownCompilerInfo" -> "takeFields";
"unknownCompilerInfo" -> "uniqueField";
"unlit" -> "classify";
"unlit" -> "f";
"unlit" -> "inlines";
"unlit" -> "map";
"unlit" -> "reclassify";
"unlit" -> "unclassify";
"unpack\'" -> "containerStructure";
"unpack\'" -> "delete";
"unpack\'" -> "empty";
"unpack\'" -> "f";
"unpack\'" -> "fromNonEmpty";
"unpack\'" -> "insert";
"unpack\'" -> "length";
"unpack\'" -> "map";
"unpack\'" -> "member";
"unpack\'" -> "null";
"unpack\'" -> "s";
"unpack\'" -> "singleton";
"unpack\'" -> "toList";
"unpack\'" -> "toNonEmpty";
"unpack\'" -> "toSet";
"unpack\'" -> "x";
"unqualComponentNameToPackageName" -> "alterVersion";
"unqualComponentNameToPackageName" -> "map";
"unqualComponentNameToPackageName" -> "mkPackageNameST";
"unqualComponentNameToPackageName" -> "mkVersion";
"unqualComponentNameToPackageName" -> "mkVersion\'";
"unqualComponentNameToPackageName" -> "nullVersion";
"unqualComponentNameToPackageName" -> "toList";
"unqualComponentNameToPackageName" -> "unUnqualComponentNameST";
"unqualComponentNameToPackageName" -> "validVersion";
"unqualComponentNameToPackageName" -> "version0";
"unqualComponentNameToPackageName" -> "versionDigitParser";
"unqualComponentNameToPackageName" -> "versionNumbers";
"unqualComponentNameToPackageName" -> "x";
"unregScriptFileName" -> "buildOS";
"unregister" -> "buildOS";
"unregister" -> "fromFlag";
"unregister" -> "fromFlagOrDefault";
"unregister" -> "invocationAsSystemScript";
"unregister" -> "registrationPackageDB";
"unregister" -> "runProgramInvocation";
"unregister" -> "setupMessage";
"unregister" -> "unregScriptFileName";
"unregister" -> "unregisterInvocation";
"unregister" -> "withHcPkg";
"unregister" -> "writeFileAtomic";
"unregisterAction" -> "components";
"unregisterAction" -> "findDistPrefOrDefault";
"unregisterAction" -> "fromComponents";
"unregisterAction" -> "fromFlag";
"unregisterAction" -> "getBuildConfig";
"unregisterAction" -> "hookedAction";
"unregisterAction" -> "main";
"unregisterAction" -> "maybeToFlag";
"unregisterAction" -> "noExtraFlags";
"unregisterAction" -> "rawSystemExit";
"unregisterAction" -> "toFilePath";
"unregisterAction" -> "toFlag";
"unregisterAction" -> "validModuleComponent";
"unregisterCommand" -> "choiceOpt";
"unregisterCommand" -> "defaultRegisterFlags";
"unregisterCommand" -> "option";
"unregisterCommand" -> "optionDistPref";
"unregisterCommand" -> "optionVerbosity";
"unregisterCommand" -> "trueArg";
"unregisterInvocation" -> "packageDbOpts";
"unregisterInvocation" -> "prettyShow";
"unregisterInvocation" -> "programInvocation";
"unregisterInvocation" -> "verbosityOpts";
"unsafeMakeSymbolicPath" -> "failProgress";
"unsafeMakeSymbolicPath" -> "foldProgress";
"unsafeMakeSymbolicPath" -> "getSymbolicPath";
"unsafeMakeSymbolicPath" -> "isAbsoluteOnAnyPlatform";
"unsafeMakeSymbolicPath" -> "null";
"unsafeMakeSymbolicPath" -> "parsecToken";
"unsafeMakeSymbolicPath" -> "showFilePath";
"unsafeMakeSymbolicPath" -> "stepProgress";
"unsafeMkDefUnitId" -> "mkUnqualComponentName";
"unsafeMkDefUnitId" -> "packageNameToUnqualComponentName";
"unsafeMkDefUnitId" -> "unUnqualComponentName";
"unsafeMkDefUnitId" -> "unUnqualComponentNameST";
"unsafeMkDefUnitId" -> "unqualComponentNameToPackageName";
"unsetEnv" -> "eRROR_ENVVAR_NOT_FOUND";
"unsnoc" -> "unsnocNE";
"unsnoc" -> "x";
"unsnocNE" -> "x";
"unsupportedExtensions" -> "extensionToFlag\'";
"unsupportedForeignLibs" -> "checkForeignLibSupported";
"unsupportedLanguages" -> "languageToFlag";
"unvalidateBenchmark" -> "benchmarkBuildInfo";
"unvalidateBenchmark" -> "benchmarkInterface";
"unvalidateTestSuite" -> "benchmarkStanzaBuildInfo";
"unvalidateTestSuite" -> "testBuildInfo";
"unvalidateTestSuite" -> "testInterface";
"updateConfiguredProgs" -> "emptyProgramDb";
"updateConfiguredProgs" -> "s";
"updateConfiguredProgs" -> "typeRep";
"updatePackageDescription" -> "exeName";
"updatePackageDescription" -> "executables";
"updatePackageDescription" -> "libBuildInfo";
"updatePackageDescription" -> "library";
"updateProgram" -> "updateConfiguredProgs";
"usageAlternatives" -> "s";
"usageInfo" -> "fmtLong";
"usageInfo" -> "fmtShort";
"usageInfo" -> "intercalate";
"usageInfo" -> "length";
"usageInfo" -> "map";
"usageInfo" -> "wrapText";
"usageInfo" -> "x";
"usageInfo" -> "zipDefault";
"use" -> "l";
"use" -> "s";
"use" -> "view";
"userMaybeSpecifyPath" -> "userSpecifyPath";
"userSpecifyArgs" -> "updateConfiguredProgs";
"userSpecifyArgs" -> "updateUnconfiguredProgs";
"userSpecifyArgss" -> "userSpecifyArgs";
"userSpecifyPath" -> "updateUnconfiguredProgs";
"userSpecifyPaths" -> "userSpecifyPath";
"usesTemplateHaskellOrQQ" -> "allExtensions";
"validInterval" -> "l";
"validInterval" -> "nonEmptyVI";
"validInterval" -> "validVersion";
"validModuleComponent" -> "toShortText";
"validModuleComponent" -> "validModuleChar";
"validVersion" -> "asVersionIntervals";
"validVersion" -> "fromVersionIntervals";
"validVersion" -> "invariantVersionIntervals";
"validVersion" -> "normaliseVersionRange2";
"validVersion" -> "nullVersion";
"validVersion" -> "relaxHeadInterval";
"validVersion" -> "relaxLastInterval";
"validVersion" -> "toVersionIntervals";
"validVersion" -> "unVersionIntervals";
"validVersion" -> "versionNumbers";
"validateBenchmark" -> "benchmarkBuildInfo";
"validateBenchmark" -> "benchmarkInterface";
"validateBenchmark" -> "emptyBenchmark";
"validateBenchmark" -> "knownBenchmarkTypes";
"validateBenchmark" -> "parseFailure";
"validateBenchmark" -> "parseWarning";
"validateBenchmark" -> "prettyShow";
"validateTestSuite" -> "emptyTestSuite";
"validateTestSuite" -> "knownTestTypes";
"validateTestSuite" -> "parseFailure";
"validateTestSuite" -> "parseWarning";
"validateTestSuite" -> "prettyShow";
"validateTestSuite" -> "testBuildInfo";
"validateTestSuite" -> "testInterface";
"verbatimUserError" -> "ioeSetVerbatim";
"verbose" -> "mkVerbosity";
"verboseCallSite" -> "verboseFlag";
"verboseCallStack" -> "verboseFlag";
"verboseMarkOutput" -> "verboseFlag";
"verboseNoStderr" -> "verboseNoFlag";
"verboseNoTimestamp" -> "verboseNoFlag";
"verboseNoWrap" -> "verboseFlag";
"verboseStderr" -> "verboseFlag";
"verboseTimestamp" -> "verboseFlag";
"verboseUnmarkOutput" -> "verboseNoFlag";
"verbosityHandle" -> "isVerboseStderr";
"verbosityOpts" -> "deafening";
"verbosityOpts" -> "markup";
"verbosityOpts" -> "normal";
"verbosityOpts" -> "silent";
"verbosityOpts" -> "union";
"version0" -> "mkVersion";
"versionDigitParser" -> "f";
"versionDigitParser" -> "length";
"versionRangeParser" -> "anyVersion";
"versionRangeParser" -> "digit";
"versionRangeParser" -> "earlierVersion";
"versionRangeParser" -> "embedVersionRange";
"versionRangeParser" -> "f";
"versionRangeParser" -> "foldr1";
"versionRangeParser" -> "hyloVersionRange";
"versionRangeParser" -> "intersectVersionRanges";
"versionRangeParser" -> "laterVersion";
"versionRangeParser" -> "majorBoundVersion";
"versionRangeParser" -> "majorUpperBound";
"versionRangeParser" -> "mkVersion";
"versionRangeParser" -> "noVersion";
"versionRangeParser" -> "orEarlierVersion";
"versionRangeParser" -> "orLaterVersion";
"versionRangeParser" -> "prettyShow";
"versionRangeParser" -> "projectVersionRange";
"versionRangeParser" -> "thisVersion";
"versionRangeParser" -> "toList";
"versionRangeParser" -> "unionVersionRanges";
"versionRangeParser" -> "withinVersion";
"versionRangeParser" -> "x";
"versionRangeToPkgconfigVersionRange" -> "asVersionIntervals";
"versionRangeToPkgconfigVersionRange" -> "defaultSetupDepends";
"versionRangeToPkgconfigVersionRange" -> "isAnyVersion";
"versionRangeToPkgconfigVersionRange" -> "setupDepends";
"versionRangeToPkgconfigVersionRange" -> "versionToPkgconfigVersion";
"versionToPkgconfigVersion" -> "prettyShow";
"view" -> "l";
"view" -> "s";
"viewAsGetOpt" -> "readEOrFail";
"viewAsGetOpt" -> "set";
"wait" -> "waitCatch";
"wait" -> "x";
"waitCatch" -> "f";
"warn" -> "normal";
"warn" -> "withFrozenCallStack";
"warn" -> "withMetadata";
"warn" -> "wrapTextVerbosity";
"warnImport" -> "f";
"warnImport" -> "parseWarning";
"warnImport" -> "specHasCommonStanzas";
"warnInvalidSubsection" -> "parseFailure";
"warnMultipleSingularFields" -> "fieldlinesToBS";
"warnMultipleSingularFields" -> "fieldlinesToFreeText";
"warnMultipleSingularFields" -> "fieldlinesToFreeText3";
"warnMultipleSingularFields" -> "fromUTF8BS";
"warnMultipleSingularFields" -> "intercalate";
"warnMultipleSingularFields" -> "map";
"warnMultipleSingularFields" -> "namelessFieldAnn";
"warnMultipleSingularFields" -> "null";
"warnMultipleSingularFields" -> "parseFailure";
"warnMultipleSingularFields" -> "parseFatalFailure";
"warnMultipleSingularFields" -> "parseWarning";
"warnMultipleSingularFields" -> "parser";
"warnMultipleSingularFields" -> "runFieldParser";
"warnMultipleSingularFields" -> "s";
"warnMultipleSingularFields" -> "showCabalSpecVersion";
"warnMultipleSingularFields" -> "showPos";
"warnMultipleSingularFields" -> "unpack\'";
"warnMultipleSingularFields" -> "warnMultipleSingularFields";
"warnMultipleSingularFields" -> "x";
"warnMultipleSingularFields" -> "zeroPos";
"warnProgress" -> "formatMsg";
"warnProgress" -> "normal";
"warnProgress" -> "s";
"warnProgress" -> "stepProgress";
"wildcardUpperBound" -> "alterVersion";
"wildcardUpperBound" -> "unsnoc";
"wildcardUpperBound" -> "x";
"wipeMetadata" -> "alexProgram";
"wipeMetadata" -> "arProgram";
"wipeMetadata" -> "builtinPrograms";
"wipeMetadata" -> "c2hsProgram";
"wipeMetadata" -> "cppProgram";
"wipeMetadata" -> "cpphsProgram";
"wipeMetadata" -> "dieWithLocation\'";
"wipeMetadata" -> "doctestProgram";
"wipeMetadata" -> "gccProgram";
"wipeMetadata" -> "ghcPkgProgram";
"wipeMetadata" -> "ghcProgram";
"wipeMetadata" -> "ghcjsPkgProgram";
"wipeMetadata" -> "ghcjsProgram";
"wipeMetadata" -> "greencardProgram";
"wipeMetadata" -> "haddockProgram";
"wipeMetadata" -> "happyProgram";
"wipeMetadata" -> "haskellSuitePkgProgram";
"wipeMetadata" -> "haskellSuiteProgram";
"wipeMetadata" -> "hmakeProgram";
"wipeMetadata" -> "hpcProgram";
"wipeMetadata" -> "hsc2hsProgram";
"wipeMetadata" -> "hscolourProgram";
"wipeMetadata" -> "jhcProgram";
"wipeMetadata" -> "ldProgram";
"wipeMetadata" -> "pkgConfigProgram";
"wipeMetadata" -> "runghcProgram";
"wipeMetadata" -> "s";
"wipeMetadata" -> "size";
"wipeMetadata" -> "stripProgram";
"wipeMetadata" -> "tarProgram";
"wipeMetadata" -> "uhcProgram";
"withAllComponentsInBuildOrder" -> "f";
"withAllComponentsInBuildOrder" -> "withAllTargetsInBuildOrder\'";
"withAllTargetsInBuildOrder" -> "withAllTargetsInBuildOrder\'";
"withAllTargetsInBuildOrder\'" -> "allTargetsInBuildOrder\'";
"withAllTargetsInBuildOrder\'" -> "f";
"withAsync" -> "withAsyncUsing";
"withAsyncNF" -> "withAsyncUsing";
"withAsyncUsing" -> "catchAll";
"withAsyncUsing" -> "uninterruptibleCancel";
"withBenchLBI" -> "bench";
"withBenchLBI" -> "enabledBenchLBIs";
"withBenchLBI" -> "f";
"withBenchmark" -> "bench";
"withBenchmark" -> "benchmarkBuildInfo";
"withBenchmark" -> "benchmarks";
"withBenchmark" -> "f";
"withCallStackPrefix" -> "callStack";
"withCallStackPrefix" -> "isVerboseCallSite";
"withCallStackPrefix" -> "isVerboseMarkOutput";
"withCallStackPrefix" -> "parentSrcLocPrefix";
"withCallStackPrefix" -> "prettyCallStack";
"withCallStackPrefix" -> "s";
"withCallStackPrefix" -> "traceWhen";
"withCallStackPrefix" -> "withFrozenCallStack";
"withExe" -> "executables";
"withExe" -> "f";
"withExeLBI" -> "f";
"withExeLBI" -> "withAllTargetsInBuildOrder\'";
"withExt" -> "mkUnitId";
"withExt" -> "parseGhcEnvironmentFile";
"withExt" -> "readGhcEnvironmentFile";
"withForeignLib" -> "f";
"withForeignLib" -> "foreignLibBuildInfo";
"withForeignLib" -> "foreignLibs";
"withFrozenCallStack" -> "callStack";
"withFrozenCallStack" -> "x";
"withHcPkg" -> "compilerFlavor";
"withHcPkg" -> "die\'";
"withHcPkg" -> "f";
"withLexicalCallStack" -> "callStack";
"withLexicalCallStack" -> "f";
"withLexicalCallStack" -> "x";
"withLib" -> "allLibraries";
"withLib" -> "f";
"withLib" -> "libBuildInfo";
"withLibLBI" -> "f";
"withLibLBI" -> "withAllTargetsInBuildOrder\'";
"withMetadata" -> "clearMarkers";
"withMetadata" -> "isVerboseQuiet";
"withMetadata" -> "withCallStackPrefix";
"withMetadata" -> "withFrozenCallStack";
"withMetadata" -> "withOutputMarker";
"withMetadata" -> "withTimestamp";
"withMetadata" -> "withTrailingNewline";
"withMetadata" -> "x";
"withNeededTargetsInBuildOrder" -> "mkMixin";
"withNeededTargetsInBuildOrder" -> "normaliseMixin";
"withNeededTargetsInBuildOrder" -> "versionGuardMultilibs";
"withNeededTargetsInBuildOrder" -> "withNeededTargetsInBuildOrder\'";
"withNeededTargetsInBuildOrder\'" -> "f";
"withNeededTargetsInBuildOrder\'" -> "neededTargetsInBuildOrder\'";
"withOutputMarker" -> "isVerboseMarkOutput";
"withOutputMarker" -> "withTrailingNewline";
"withResponseFile" -> "debug";
"withResponseFile" -> "escapeResponseFileArg";
"withResponseFile" -> "f";
"withResponseFile" -> "map";
"withResponseFile" -> "withTempFileEx";
"withTempDirectory" -> "defaultTempFileOptions";
"withTempDirectory" -> "f";
"withTempDirectory" -> "withFrozenCallStack";
"withTempDirectory" -> "withLexicalCallStack";
"withTempDirectory" -> "withTempDirectoryEx";
"withTempDirectory" -> "x";
"withTempDirectoryEx" -> "createTempDirectory";
"withTempDirectoryEx" -> "f";
"withTempDirectoryEx" -> "handleDoesNotExist";
"withTempDirectoryEx" -> "withFrozenCallStack";
"withTempDirectoryEx" -> "withLexicalCallStack";
"withTempDirectoryEx" -> "x";
"withTempFile" -> "defaultTempFileOptions";
"withTempFile" -> "withTempFileEx";
"withTempFileEx" -> "handleDoesNotExist";
"withTempFileEx" -> "withLexicalCallStack";
"withTempFileEx" -> "x";
"withTest" -> "f";
"withTest" -> "test";
"withTest" -> "testBuildInfo";
"withTest" -> "testSuites";
"withTestLBI" -> "enabledTestLBIs";
"withTestLBI" -> "f";
"withTestLBI" -> "test";
"withTimestamp" -> "isVerboseTimestamp";
"withTimestamp" -> "length";
"withTimestamp" -> "map";
"withTrailingNewline" -> "x";
"withUTF8FileContents" -> "fromUTF8LBS";
"withUTF8FileContents" -> "ignoreBOM";
"withinRange" -> "foldVersionRange";
"withinVersion" -> "earlierVersion";
"withinVersion" -> "intersectVersionRanges";
"withinVersion" -> "orLaterVersion";
"withinVersion" -> "wildcardUpperBound";
"withoutWarnings" -> "s";
"wrapLine" -> "length";
"wrapText" -> "intercalate";
"wrapText" -> "length";
"wrapText" -> "map";
"wrapText" -> "wrapLine";
"wrapTextVerbosity" -> "isVerboseNoWrap";
"wrapTextVerbosity" -> "withTrailingNewline";
"wrapTextVerbosity" -> "wrapText";
"writeAutogenFiles" -> "autogenComponentModulesDir";
"writeAutogenFiles" -> "autogenPathsModuleName";
"writeAutogenFiles" -> "cppHeaderName";
"writeAutogenFiles" -> "createDirectoryIfMissingVerbose";
"writeAutogenFiles" -> "generateCabalMacrosHeader";
"writeAutogenFiles" -> "generatePackageVersionMacros";
"writeAutogenFiles" -> "generatePathsModule";
"writeAutogenFiles" -> "map";
"writeAutogenFiles" -> "prettyShow";
"writeAutogenFiles" -> "rewriteFileEx";
"writeGenericPackageDescription" -> "showGenericPackageDescription";
"writeGenericPackageDescription" -> "writeUTF8File";
"writeGhcEnvironmentFile" -> "ghcEnvironmentFileName";
"writeGhcEnvironmentFile" -> "renderGhcEnvironmentFile";
"writeGhcEnvironmentFile" -> "writeFileAtomic";
"writeHcPkgRegisterScript" -> "buildOS";
"writeHcPkgRegisterScript" -> "info";
"writeHcPkgRegisterScript" -> "invocationAsSystemScript";
"writeHcPkgRegisterScript" -> "map";
"writeHcPkgRegisterScript" -> "regScriptFileName";
"writeHcPkgRegisterScript" -> "setFileExecutable";
"writeHcPkgRegisterScript" -> "writeUTF8File";
"writeHookedBuildInfo" -> "showHookedBuildInfo";
"writeHookedBuildInfo" -> "writeFileAtomic";
"writePackageDescription" -> "showPackageDescription";
"writePackageDescription" -> "writeUTF8File";
"writePersistBuildConfig" -> "localBuildInfoFile";
"writePersistBuildConfig" -> "localPackage";
"writePersistBuildConfig" -> "showHeader";
"writePersistBuildConfig" -> "structuredEncode";
"writePersistBuildConfig" -> "writeFileAtomic";
"writePoint" -> "s";
"writeRegistrationFileDirectly" -> "die\'";
"writeRegistrationFileDirectly" -> "installedUnitId";
"writeRegistrationFileDirectly" -> "prettyShow";
"writeRegistrationFileDirectly" -> "showInstalledPackageInfo";
"writeRegistrationFileDirectly" -> "writeUTF8File";
"writeSimpleTestStub" -> "simpleTestStub";
"writeSimpleTestStub" -> "stubFilePath";
"writeUTF8File" -> "toUTF8LBS";
"writeUTF8File" -> "writeFileAtomic";
"writeUnifRef" -> "liftST";
"writeUnifRef" -> "s";
"writeUnifRef" -> "x";
"xargs" -> "length";
"xargs" -> "map";
"xargs" -> "null";
"xargs" -> "s";
"zdashcode" -> "s";
"zeroLowerBound" -> "version0";
"zipDefault" -> "map";
"zipDefault" -> "zipDefault";
}
