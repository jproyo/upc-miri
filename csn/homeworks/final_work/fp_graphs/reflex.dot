strict digraph deps {
"_unAppendMap" [style=solid];
"accumB" [style=solid];
"accumDyn" [style=solid];
"accumIncremental" [style=solid];
"accumMB" [style=solid];
"accumMDyn" [style=solid];
"accumMIncremental" [style=solid];
"accumMaybeB" [style=solid];
"accumMaybeDyn" [style=solid];
"accumMaybeIncremental" [style=solid];
"accumMaybeMB" [style=solid];
"accumMaybeMDyn" [style=solid];
"accumMaybeMIncremental" [style=solid];
"alignEventWithMaybe" [style=solid];
"applyPatch" [style=solid];
"attach" [style=solid];
"attachPromptlyDyn" [style=solid];
"attachPromptlyDynWith" [style=solid];
"attachPromptlyDynWithMaybe" [style=solid];
"attachWith" [style=solid];
"attachWithMaybe" [style=solid];
"batchOccurrences" [style=solid];
"clockLossy" [style=solid];
"coerceBehavior" [style=solid];
"coerceDynamic" [style=solid];
"coerceEvent" [style=solid];
"coerceIncremental" [style=solid];
"coincidencePatchIntMap" [style=solid];
"coincidencePatchMap" [style=solid];
"coincidencePatchMapWithMove" [style=solid];
"collectDynPure" [style=solid];
"constDyn" [style=solid];
"count" [style=solid];
"debounce" [style=solid];
"delay" [style=solid];
"demux" [style=solid];
"demuxed" [style=solid];
"difference" [style=solid];
"distributeDMapOverDynPure" [style=solid];
"distributeDMapOverDynPureG" [style=solid];
"distributeFHListOverDynPure" [style=solid];
"distributeIntMapOverDynPure" [style=solid];
"distributeListOverDyn" [style=solid];
"distributeListOverDynPure" [style=solid];
"distributeListOverDynWith" [style=solid];
"distributeMapOverDynPure" [style=solid];
"dmapToHList" [style=solid];
"dropWhileE" [style=solid];
"eitherDyn" [style=solid];
"empty" [style=solid];
"emptyFastWeak" [style=solid];
"factorDyn" [style=solid];
"factorEvent" [style=solid];
"fan" [style=solid];
"fanEither" [style=solid];
"fanMap" [style=solid];
"fanThese" [style=solid];
"ffilter" [style=solid];
"ffor" [style=solid];
"ffor2" [style=solid];
"ffor3" [style=solid];
"fforCheap" [style=solid];
"fforMaybe" [style=solid];
"fforMaybeCheap" [style=solid];
"fhlistToDMap" [style=solid];
"filterEventKey" [style=solid];
"filterLeft" [style=solid];
"filterRight" [style=solid];
"fmapCheap" [style=solid];
"fmapMaybe" [style=solid];
"fmapMaybeCheap" [style=solid];
"foldDyn" [style=solid];
"foldDynM" [style=solid];
"foldDynMaybe" [style=solid];
"foldDynMaybeM" [style=solid];
"forDynM" [style=solid];
"forIntersectionWithImmutable_" [style=solid];
"for_" [style=solid];
"foreign" [style=solid];
"formatCostCentreTree" [style=solid];
"gate" [style=solid];
"getCostCentreStack" [style=solid];
"getCostCentreTree" [style=solid];
"getCurrentTick" [style=solid];
"getFastWeakTicket" [style=solid];
"getFastWeakTicketValue" [style=solid];
"getFastWeakTicketWeak" [style=solid];
"getFastWeakValue" [style=solid];
"getFrozenAndClear" [style=solid];
"hBuild" [style=solid];
"hRevApp" [style=solid];
"hReverse" [style=solid];
"headTailE" [style=solid];
"holdUniqDyn" [style=solid];
"holdUniqDynBy" [style=solid];
"improvingMaybe" [style=solid];
"infixl" [style=solid];
"infixr" [style=solid];
"inhomogeneousPoisson" [style=solid];
"inhomogeneousPoissonFrom" [style=solid];
"insert" [style=solid];
"install" [style=solid];
"isEmpty" [style=solid];
"joinDynThroughIntMap" [style=solid];
"joinDynThroughMap" [style=solid];
"leftmost" [style=solid];
"list" [style=solid];
"listHoldWithKey" [style=solid];
"listViewWithKey" [style=solid];
"listViewWithKey\'" [style=solid];
"listWithKey" [style=solid];
"listWithKeyShallowDiff" [style=solid];
"lookup" [style=solid];
"makeInlinable" [style=solid];
"makeLensesWith" [style=solid];
"mapAccumB" [style=solid];
"mapAccumDyn" [style=solid];
"mapAccumIncremental" [style=solid];
"mapAccumMB" [style=solid];
"mapAccumMDyn" [style=solid];
"mapAccumMIncremental" [style=solid];
"mapAccumM_" [style=solid];
"mapAccumMaybeB" [style=solid];
"mapAccumMaybeDyn" [style=solid];
"mapAccumMaybeIncremental" [style=solid];
"mapAccumMaybeMB" [style=solid];
"mapAccumMaybeMDyn" [style=solid];
"mapAccumMaybeMIncremental" [style=solid];
"mapAccumMaybeM_" [style=solid];
"mapAccumMaybe_" [style=solid];
"mapAccum_" [style=solid];
"mapDynM" [style=solid];
"mapMaybeCheap" [style=solid];
"mapMaybeNoNull" [style=solid];
"mapWorkflow" [style=solid];
"mapWorkflowCheap" [style=solid];
"maybeDyn" [style=solid];
"merge" [style=solid];
"mergeIncremental" [style=solid];
"mergeIncrementalImpl" [style=solid];
"mergeIncrementalWithMove" [style=solid];
"mergeInt" [style=solid];
"mergeIntIncrementalImpl" [style=solid];
"mergeIntMap" [style=solid];
"mergeIntMapIncremental" [style=solid];
"mergeList" [style=solid];
"mergeMap" [style=solid];
"mergeMapIncremental" [style=solid];
"mergeMapIncrementalWithMove" [style=solid];
"mergeWith" [style=solid];
"mergeWithCheap" [style=solid];
"mergeWithCheap\'" [style=solid];
"mergeWithFoldCheap\'" [style=solid];
"mergeWith\'" [style=solid];
"mkFastWeakTicket" [style=solid];
"networkHold" [style=solid];
"networkView" [style=solid];
"new" [style=solid];
"newEmpty" [style=solid];
"nonEmptyDelete" [style=solid];
"numberOccurrences" [style=solid];
"numberOccurrencesFrom" [style=solid];
"numberOccurrencesFrom_" [style=solid];
"pattern" [style=solid];
"plugin" [style=solid];
"poissonLossy" [style=solid];
"poissonLossyFrom" [style=solid];
"profileEvent" [style=solid];
"profilingData" [style=solid];
"pushAlways" [style=solid];
"pushAlwaysCheap" [style=solid];
"remove" [style=solid];
"scanDyn" [style=solid];
"scanDynMaybe" [style=solid];
"selectViewListWithKey" [style=solid];
"selectViewListWithKey_" [style=solid];
"showProfilingData" [style=solid];
"showTree" [style=solid];
"showTreeWith" [style=solid];
"simpleList" [style=solid];
"singleton" [style=solid];
"size" [style=solid];
"slowHeadE" [style=solid];
"splitDynPure" [style=solid];
"splitE" [style=solid];
"switchDyn" [style=solid];
"switchHold" [style=solid];
"switchHoldPromptOnly" [style=solid];
"switchHoldPromptOnlyIncremental" [style=solid];
"switchHoldPromptly" [style=solid];
"switchPromptOnly" [style=solid];
"switchPromptly" [style=solid];
"switchPromptlyDyn" [style=solid];
"switcher" [style=solid];
"tag" [style=solid];
"tagCheap" [style=solid];
"tagMaybe" [style=solid];
"tagPromptlyDyn" [style=solid];
"tailE" [style=solid];
"takeDropWhileJustE" [style=solid];
"takeWhileE" [style=solid];
"takeWhileJustE" [style=solid];
"throttle" [style=solid];
"throttleBatchWithLag" [style=solid];
"tickInfo_alreadyElapsed" [style=solid];
"tickInfo_lastUTC" [style=solid];
"tickInfo_n" [style=solid];
"tickLossy" [style=solid];
"tickLossyFrom" [style=solid];
"tickLossyFromPostBuildTime" [style=solid];
"tickLossyFrom\'" [style=solid];
"toCostCentreTree" [style=solid];
"toList" [style=solid];
"toggle" [style=solid];
"traceDyn" [style=solid];
"traceDynWith" [style=solid];
"traceEvent" [style=solid];
"traceEventWith" [style=solid];
"traverse" [style=solid];
"traverse_" [style=solid];
"unsafeDynamic" [style=solid];
"unsafeFromRawJSVal" [style=solid];
"unsafeMapIncremental" [style=solid];
"unsafeToRawJSVal" [style=solid];
"untilReady" [style=solid];
"workflow" [style=solid];
"workflowView" [style=solid];
"writeProfilingData" [style=solid];
"zipDyn" [style=solid];
"zipDynWith" [style=solid];
"zipListWithEvent" [style=solid];
"accumB" -> "accumMaybeB";
"accumDyn" -> "accumMaybeDyn";
"accumIncremental" -> "accumMaybeIncremental";
"accumMB" -> "accumMaybeMB";
"accumMDyn" -> "accumMaybeMDyn";
"accumMIncremental" -> "accumMaybeMIncremental";
"accumMaybeB" -> "accumMaybeMB";
"accumMaybeDyn" -> "accumMaybeMDyn";
"accumMaybeIncremental" -> "accumMaybeMIncremental";
"alignEventWithMaybe" -> "merge";
"attach" -> "attachWith";
"attachPromptlyDyn" -> "attachPromptlyDynWith";
"attachPromptlyDynWith" -> "attachPromptlyDynWithMaybe";
"attachPromptlyDynWithMaybe" -> "attach";
"attachPromptlyDynWithMaybe" -> "fforMaybe";
"attachWith" -> "attachWithMaybe";
"batchOccurrences" -> "delay";
"batchOccurrences" -> "tag";
"clockLossy" -> "getCurrentTick";
"clockLossy" -> "tickLossy";
"coincidencePatchIntMap" -> "ffor";
"coincidencePatchIntMap" -> "fmapCheap";
"coincidencePatchIntMap" -> "leftmost";
"coincidencePatchIntMap" -> "mergeIntMap";
"coincidencePatchMap" -> "ffor";
"coincidencePatchMap" -> "fmapCheap";
"coincidencePatchMap" -> "leftmost";
"coincidencePatchMap" -> "mergeMap";
"coincidencePatchMapWithMove" -> "ffor";
"coincidencePatchMapWithMove" -> "fforCheap";
"coincidencePatchMapWithMove" -> "fmapCheap";
"coincidencePatchMapWithMove" -> "leftmost";
"coincidencePatchMapWithMove" -> "mergeMap";
"collectDynPure" -> "distributeFHListOverDynPure";
"collectDynPure" -> "emptyFastWeak";
"collectDynPure" -> "getFastWeakTicket";
"collectDynPure" -> "getFastWeakTicketValue";
"collectDynPure" -> "getFastWeakTicketWeak";
"collectDynPure" -> "getFastWeakValue";
"collectDynPure" -> "hBuild";
"collectDynPure" -> "mkFastWeakTicket";
"collectDynPure" -> "unsafeFromRawJSVal";
"collectDynPure" -> "unsafeToRawJSVal";
"count" -> "zipListWithEvent";
"debounce" -> "attachPromptlyDynWith";
"debounce" -> "attachWithMaybe";
"debounce" -> "count";
"debounce" -> "delay";
"delay" -> "ffor";
"demux" -> "attachWith";
"demux" -> "fan";
"difference" -> "alignEventWithMaybe";
"distributeDMapOverDynPure" -> "coerceDynamic";
"distributeDMapOverDynPure" -> "distributeDMapOverDynPureG";
"distributeDMapOverDynPureG" -> "constDyn";
"distributeDMapOverDynPureG" -> "new";
"distributeDMapOverDynPureG" -> "pushAlways";
"distributeFHListOverDynPure" -> "distributeDMapOverDynPure";
"distributeFHListOverDynPure" -> "dmapToHList";
"distributeFHListOverDynPure" -> "fhlistToDMap";
"distributeIntMapOverDynPure" -> "distributeDMapOverDynPure";
"distributeListOverDyn" -> "distributeListOverDynWith";
"distributeListOverDynPure" -> "distributeListOverDyn";
"distributeListOverDynWith" -> "distributeDMapOverDynPure";
"distributeMapOverDynPure" -> "distributeDMapOverDynPure";
"dropWhileE" -> "takeDropWhileJustE";
"eitherDyn" -> "coerceDynamic";
"eitherDyn" -> "factorDyn";
"factorDyn" -> "filterEventKey";
"factorEvent" -> "filterEventKey";
"factorEvent" -> "fmapCheap";
"fanMap" -> "fan";
"fforCheap" -> "fmapCheap";
"fforMaybeCheap" -> "mapMaybeCheap";
"filterEventKey" -> "takeWhileJustE";
"filterRight" -> "fmapCheap";
"filterRight" -> "fmapMaybe";
"filterRight" -> "leftmost";
"fmapMaybeCheap" -> "mapMaybeCheap";
"foldDyn" -> "accumDyn";
"foldDynM" -> "accumMDyn";
"foldDynMaybe" -> "accumMaybeDyn";
"foldDynMaybeM" -> "accumMaybeMDyn";
"forDynM" -> "mapDynM";
"forIntersectionWithImmutable_" -> "traverse_";
"for_" -> "traverse_";
"foreign" -> "fmapMaybe";
"foreign" -> "networkHold";
"foreign" -> "networkView";
"foreign" -> "untilReady";
"gate" -> "attachWithMaybe";
"getCostCentreTree" -> "profilingData";
"getCostCentreTree" -> "toCostCentreTree";
"getFastWeakTicketValue" -> "unsafeFromRawJSVal";
"getFastWeakValue" -> "unsafeFromRawJSVal";
"hBuild" -> "hReverse";
"hRevApp" -> "hRevApp";
"hReverse" -> "hRevApp";
"holdUniqDyn" -> "holdUniqDynBy";
"holdUniqDynBy" -> "new";
"holdUniqDynBy" -> "scanDynMaybe";
"improvingMaybe" -> "new";
"improvingMaybe" -> "scanDynMaybe";
"infixl" -> "tag";
"inhomogeneousPoisson" -> "inhomogeneousPoissonFrom";
"inhomogeneousPoissonFrom" -> "attachWithMaybe";
"insert" -> "unsafeToRawJSVal";
"install" -> "install";
"install" -> "makeInlinable";
"joinDynThroughIntMap" -> "distributeIntMapOverDynPure";
"joinDynThroughMap" -> "distributeMapOverDynPure";
"leftmost" -> "mergeWith";
"list" -> "listWithKey";
"listViewWithKey" -> "listViewWithKey\'";
"listViewWithKey" -> "mergeMap";
"listViewWithKey\'" -> "listWithKey";
"listWithKey" -> "attachWith";
"listWithKey" -> "fanMap";
"listWithKey" -> "foldDyn";
"listWithKey" -> "leftmost";
"listWithKey" -> "listHoldWithKey";
"listWithKey" -> "new";
"listWithKey" -> "tag";
"listWithKeyShallowDiff" -> "attachWith";
"listWithKeyShallowDiff" -> "fanMap";
"listWithKeyShallowDiff" -> "foldDyn";
"listWithKeyShallowDiff" -> "listHoldWithKey";
"mapAccumB" -> "mapAccumMaybeB";
"mapAccumDyn" -> "mapAccumMaybeDyn";
"mapAccumIncremental" -> "mapAccumMaybeIncremental";
"mapAccumMB" -> "mapAccumMaybeMB";
"mapAccumMDyn" -> "mapAccumMaybeMDyn";
"mapAccumMIncremental" -> "mapAccumMaybeMIncremental";
"mapAccumM_" -> "mapAccumMB";
"mapAccumMaybeB" -> "mapAccumMaybeMB";
"mapAccumMaybeDyn" -> "mapAccumMaybeMDyn";
"mapAccumMaybeIncremental" -> "mapAccumMaybeMIncremental";
"mapAccumMaybeM_" -> "accumMaybeMB";
"mapAccumMaybeM_" -> "accumMaybeMDyn";
"mapAccumMaybeM_" -> "mapAccumMaybeMB";
"mapAccumMaybeM_" -> "mapAccumMaybeMDyn";
"mapAccumMaybe_" -> "mapAccumMaybeB";
"mapAccum_" -> "mapAccumB";
"mapDynM" -> "pushAlways";
"mapWorkflow" -> "mapWorkflow";
"mapWorkflowCheap" -> "fmapCheap";
"mapWorkflowCheap" -> "mapWorkflowCheap";
"maybeDyn" -> "eitherDyn";
"merge" -> "coerceEvent";
"mergeIncremental" -> "coerceEvent";
"mergeIncrementalWithMove" -> "coerceEvent";
"mergeIntIncrementalImpl" -> "slowHeadE";
"mergeIntMap" -> "merge";
"mergeIntMapIncremental" -> "mergeIncremental";
"mergeIntMapIncremental" -> "unsafeMapIncremental";
"mergeList" -> "mergeWithFoldCheap\'";
"mergeMap" -> "merge";
"mergeMapIncremental" -> "mergeIncremental";
"mergeMapIncremental" -> "unsafeMapIncremental";
"mergeMapIncrementalWithMove" -> "mergeIncrementalWithMove";
"mergeMapIncrementalWithMove" -> "unsafeMapIncremental";
"mergeWith" -> "mergeWith\'";
"mergeWithCheap" -> "mergeWithCheap\'";
"mergeWithCheap\'" -> "mergeWithFoldCheap\'";
"mergeWithFoldCheap\'" -> "fmapCheap";
"mergeWithFoldCheap\'" -> "mergeInt";
"mergeWith\'" -> "mergeInt";
"mkFastWeakTicket" -> "unsafeToRawJSVal";
"networkView" -> "leftmost";
"networkView" -> "tagCheap";
"numberOccurrences" -> "numberOccurrencesFrom";
"numberOccurrencesFrom" -> "mapAccum_";
"numberOccurrencesFrom_" -> "mapAccum_";
"plugin" -> "install";
"poissonLossy" -> "poissonLossyFrom";
"poissonLossyFrom" -> "inhomogeneousPoissonFrom";
"profileEvent" -> "coerceBehavior";
"profileEvent" -> "coerceEvent";
"profileEvent" -> "mergeIncrementalImpl";
"profileEvent" -> "mergeIntIncrementalImpl";
"profileEvent" -> "profileEvent";
"profileEvent" -> "profilingData";
"remove" -> "accumB";
"remove" -> "accumDyn";
"remove" -> "accumIncremental";
"remove" -> "accumMB";
"remove" -> "accumMDyn";
"remove" -> "accumMIncremental";
"remove" -> "accumMaybeB";
"remove" -> "accumMaybeDyn";
"remove" -> "accumMaybeIncremental";
"remove" -> "accumMaybeMB";
"remove" -> "accumMaybeMDyn";
"remove" -> "accumMaybeMIncremental";
"remove" -> "alignEventWithMaybe";
"remove" -> "attach";
"remove" -> "attachWith";
"remove" -> "attachWithMaybe";
"remove" -> "coerceBehavior";
"remove" -> "coerceDynamic";
"remove" -> "coerceEvent";
"remove" -> "coerceIncremental";
"remove" -> "coincidencePatchIntMap";
"remove" -> "coincidencePatchMap";
"remove" -> "coincidencePatchMapWithMove";
"remove" -> "constDyn";
"remove" -> "difference";
"remove" -> "distributeDMapOverDynPure";
"remove" -> "distributeDMapOverDynPureG";
"remove" -> "distributeListOverDyn";
"remove" -> "distributeListOverDynWith";
"remove" -> "dropWhileE";
"remove" -> "empty";
"remove" -> "factorEvent";
"remove" -> "fan";
"remove" -> "fanEither";
"remove" -> "fanMap";
"remove" -> "fanThese";
"remove" -> "ffilter";
"remove" -> "ffor";
"remove" -> "ffor2";
"remove" -> "ffor3";
"remove" -> "fforCheap";
"remove" -> "fforMaybe";
"remove" -> "fforMaybeCheap";
"remove" -> "filterEventKey";
"remove" -> "filterLeft";
"remove" -> "filterRight";
"remove" -> "fmapCheap";
"remove" -> "fmapMaybe";
"remove" -> "fmapMaybeCheap";
"remove" -> "gate";
"remove" -> "headTailE";
"remove" -> "insert";
"remove" -> "leftmost";
"remove" -> "mapAccumB";
"remove" -> "mapAccumDyn";
"remove" -> "mapAccumIncremental";
"remove" -> "mapAccumMB";
"remove" -> "mapAccumMDyn";
"remove" -> "mapAccumMIncremental";
"remove" -> "mapAccumM_";
"remove" -> "mapAccumMaybeB";
"remove" -> "mapAccumMaybeDyn";
"remove" -> "mapAccumMaybeIncremental";
"remove" -> "mapAccumMaybeMB";
"remove" -> "mapAccumMaybeMDyn";
"remove" -> "mapAccumMaybeMIncremental";
"remove" -> "mapAccumMaybeM_";
"remove" -> "mapAccumMaybe_";
"remove" -> "mapAccum_";
"remove" -> "mapMaybeCheap";
"remove" -> "merge";
"remove" -> "mergeIncremental";
"remove" -> "mergeIncrementalWithMove";
"remove" -> "mergeInt";
"remove" -> "mergeIntMap";
"remove" -> "mergeIntMapIncremental";
"remove" -> "mergeList";
"remove" -> "mergeMap";
"remove" -> "mergeMapIncremental";
"remove" -> "mergeMapIncrementalWithMove";
"remove" -> "mergeWith";
"remove" -> "mergeWithCheap";
"remove" -> "mergeWithCheap\'";
"remove" -> "numberOccurrences";
"remove" -> "numberOccurrencesFrom";
"remove" -> "numberOccurrencesFrom_";
"remove" -> "pushAlways";
"remove" -> "pushAlwaysCheap";
"remove" -> "remove";
"remove" -> "singleton";
"remove" -> "slowHeadE";
"remove" -> "splitE";
"remove" -> "switchHold";
"remove" -> "switchHoldPromptOnly";
"remove" -> "switchHoldPromptOnlyIncremental";
"remove" -> "switchHoldPromptly";
"remove" -> "switchPromptOnly";
"remove" -> "switchPromptly";
"remove" -> "switcher";
"remove" -> "tag";
"remove" -> "tagCheap";
"remove" -> "tagMaybe";
"remove" -> "tailE";
"remove" -> "takeDropWhileJustE";
"remove" -> "takeWhileE";
"remove" -> "takeWhileJustE";
"remove" -> "traceEvent";
"remove" -> "traceEventWith";
"remove" -> "traverse";
"remove" -> "traverse_";
"remove" -> "unsafeDynamic";
"remove" -> "unsafeMapIncremental";
"remove" -> "zipDyn";
"remove" -> "zipDynWith";
"remove" -> "zipListWithEvent";
"scanDyn" -> "scanDynMaybe";
"selectViewListWithKey" -> "demux";
"selectViewListWithKey" -> "demuxed";
"selectViewListWithKey" -> "leftmost";
"selectViewListWithKey" -> "listWithKey";
"selectViewListWithKey" -> "switchPromptlyDyn";
"selectViewListWithKey_" -> "selectViewListWithKey";
"showProfilingData" -> "formatCostCentreTree";
"showProfilingData" -> "getCostCentreTree";
"showTreeWith" -> "applyPatch";
"showTreeWith" -> "empty";
"showTreeWith" -> "forIntersectionWithImmutable_";
"showTreeWith" -> "for_";
"showTreeWith" -> "getFrozenAndClear";
"showTreeWith" -> "insert";
"showTreeWith" -> "isEmpty";
"showTreeWith" -> "lookup";
"showTreeWith" -> "new";
"showTreeWith" -> "newEmpty";
"showTreeWith" -> "size";
"showTreeWith" -> "toList";
"simpleList" -> "attachPromptlyDyn";
"simpleList" -> "attachPromptlyDynWith";
"simpleList" -> "attachPromptlyDynWithMaybe";
"simpleList" -> "collectDynPure";
"simpleList" -> "constDyn";
"simpleList" -> "count";
"simpleList" -> "demux";
"simpleList" -> "demuxed";
"simpleList" -> "distributeDMapOverDynPure";
"simpleList" -> "distributeFHListOverDynPure";
"simpleList" -> "distributeIntMapOverDynPure";
"simpleList" -> "distributeListOverDynPure";
"simpleList" -> "distributeMapOverDynPure";
"simpleList" -> "eitherDyn";
"simpleList" -> "factorDyn";
"simpleList" -> "foldDyn";
"simpleList" -> "foldDynM";
"simpleList" -> "foldDynMaybe";
"simpleList" -> "foldDynMaybeM";
"simpleList" -> "forDynM";
"simpleList" -> "holdUniqDyn";
"simpleList" -> "holdUniqDynBy";
"simpleList" -> "improvingMaybe";
"simpleList" -> "joinDynThroughIntMap";
"simpleList" -> "joinDynThroughMap";
"simpleList" -> "list";
"simpleList" -> "mapDynM";
"simpleList" -> "maybeDyn";
"simpleList" -> "scanDyn";
"simpleList" -> "scanDynMaybe";
"simpleList" -> "splitDynPure";
"simpleList" -> "switchDyn";
"simpleList" -> "switchPromptlyDyn";
"simpleList" -> "tagPromptlyDyn";
"simpleList" -> "toggle";
"simpleList" -> "traceDyn";
"simpleList" -> "traceDynWith";
"simpleList" -> "unsafeDynamic";
"singleton" -> "empty";
"singleton" -> "insert";
"slowHeadE" -> "fmapCheap";
"switchHoldPromptOnly" -> "leftmost";
"switchHoldPromptOnlyIncremental" -> "alignEventWithMaybe";
"switchHoldPromptOnlyIncremental" -> "ffor";
"switchHoldPromptOnlyIncremental" -> "new";
"switchHoldPromptOnlyIncremental" -> "splitE";
"switchHoldPromptly" -> "leftmost";
"switchPromptOnly" -> "list";
"switchPromptOnly" -> "listHoldWithKey";
"switchPromptOnly" -> "listViewWithKey";
"switchPromptOnly" -> "listWithKey";
"switchPromptOnly" -> "listWithKeyShallowDiff";
"switchPromptOnly" -> "selectViewListWithKey";
"switchPromptOnly" -> "selectViewListWithKey_";
"switchPromptOnly" -> "simpleList";
"switchPromptOnly" -> "switchHoldPromptOnly";
"switchPromptly" -> "switchHoldPromptly";
"switchPromptlyDyn" -> "leftmost";
"tag" -> "pushAlways";
"tagCheap" -> "pushAlwaysCheap";
"tagPromptlyDyn" -> "attachPromptlyDynWith";
"tailE" -> "headTailE";
"takeDropWhileJustE" -> "fanEither";
"takeDropWhileJustE" -> "ffor";
"takeDropWhileJustE" -> "switchHold";
"takeDropWhileJustE" -> "switchHoldPromptOnly";
"takeWhileE" -> "takeWhileJustE";
"takeWhileJustE" -> "fanEither";
"takeWhileJustE" -> "ffor";
"takeWhileJustE" -> "switchHold";
"throttle" -> "delay";
"throttle" -> "mapAccumMaybeDyn";
"throttleBatchWithLag" -> "mapAccumMaybeDyn";
"tickInfo_alreadyElapsed" -> "mapWorkflow";
"tickInfo_alreadyElapsed" -> "mapWorkflowCheap";
"tickInfo_alreadyElapsed" -> "workflow";
"tickInfo_alreadyElapsed" -> "workflowView";
"tickLossy" -> "tickLossyFrom";
"tickLossyFrom" -> "tickLossyFrom\'";
"tickLossyFromPostBuildTime" -> "tickLossyFrom\'";
"tickLossyFrom\'" -> "getCurrentTick";
"tickLossyFrom\'" -> "leftmost";
"toCostCentreTree" -> "getCostCentreStack";
"toList" -> "empty";
"toList" -> "insert";
"toList" -> "isEmpty";
"toList" -> "remove";
"toList" -> "traverse";
"toList" -> "traverse_";
"toggle" -> "foldDyn";
"traceDyn" -> "traceDynWith";
"traceDynWith" -> "traceEventWith";
"traceEvent" -> "traceEventWith";
"traceEventWith" -> "mergeList";
"traceEventWith" -> "toList";
"traverse" -> "traverse_";
"traverse_" -> "unsafeFromRawJSVal";
"untilReady" -> "plugin";
"workflow" -> "networkHold";
"workflowView" -> "networkView";
"writeProfilingData" -> "formatCostCentreTree";
"writeProfilingData" -> "getCostCentreTree";
"zipDyn" -> "zipDynWith";
"zipDynWith" -> "constDyn";
"zipDynWith" -> "distributeListOverDynWith";
"zipDynWith" -> "zipDynWith";
"zipListWithEvent" -> "mapAccumMaybe_";
}
