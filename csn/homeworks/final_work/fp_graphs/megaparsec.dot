strict digraph deps {
"accHints" [style=solid];
"alphaNumChar" [style=solid];
"asciiChar" [style=solid];
"attachSourcePos" [style=solid];
"binDigitChar" [style=solid];
"categoryName" [style=solid];
"char" [style=solid];
"charCategory" [style=solid];
"charPretty" [style=solid];
"charPretty\'" [style=solid];
"char\'" [style=solid];
"controlChar" [style=solid];
"crlf" [style=solid];
"dbg" [style=solid];
"dbgLog" [style=solid];
"defaultTabWidth" [style=solid];
"digitChar" [style=solid];
"eol" [style=solid];
"errorBundlePretty" [style=solid];
"errorFancyLength" [style=solid];
"errorItemLength" [style=solid];
"errorOffset" [style=solid];
"expandTab" [style=solid];
"fixs" [style=solid];
"fixs\'" [style=solid];
"hexDigitChar" [style=solid];
"hspace" [style=solid];
"hspace1" [style=solid];
"initialPos" [style=solid];
"isHSpace" [style=solid];
"isSpace" [style=solid];
"latin1Char" [style=solid];
"letterChar" [style=solid];
"lexeme" [style=solid];
"longestMatch" [style=solid];
"lowerChar" [style=solid];
"mapParseError" [style=solid];
"markChar" [style=solid];
"mergeError" [style=solid];
"messageItemsPretty" [style=solid];
"mkPT" [style=solid];
"mkPos" [style=solid];
"nes" [style=solid];
"newline" [style=solid];
"numberChar" [style=solid];
"octDigitChar" [style=solid];
"orList" [style=solid];
"pAp" [style=solid];
"pBind" [style=solid];
"pEof" [style=solid];
"pFail" [style=solid];
"pGetParserState" [style=solid];
"pLabel" [style=solid];
"pLookAhead" [style=solid];
"pMap" [style=solid];
"pNotFollowedBy" [style=solid];
"pObserving" [style=solid];
"pParseError" [style=solid];
"pPlus" [style=solid];
"pPure" [style=solid];
"pTakeP" [style=solid];
"pTakeWhile1P" [style=solid];
"pTakeWhileP" [style=solid];
"pToken" [style=solid];
"pTokens" [style=solid];
"pTry" [style=solid];
"pUpdateParserState" [style=solid];
"pWithRecovery" [style=solid];
"pZero" [style=solid];
"parseErrorPretty" [style=solid];
"parseErrorTextPretty" [style=solid];
"pos1" [style=solid];
"printChar" [style=solid];
"punctuationChar" [style=solid];
"reachOffsetNoLine\'" [style=solid];
"reachOffset\'" [style=solid];
"refreshLastHint" [style=solid];
"runParsecT" [style=solid];
"separatorChar" [style=solid];
"setErrorOffset" [style=solid];
"showErrorFancy" [style=solid];
"showErrorItem" [style=solid];
"showStream" [style=solid];
"sourcePosPretty" [style=solid];
"space" [style=solid];
"space1" [style=solid];
"spaceChar" [style=solid];
"splitAtBL" [style=solid];
"splitAtTL" [style=solid];
"streamDelta" [style=solid];
"streamTake" [style=solid];
"string" [style=solid];
"stringPretty" [style=solid];
"string\'" [style=solid];
"symbol" [style=solid];
"symbolChar" [style=solid];
"symbol\'" [style=solid];
"tab" [style=solid];
"toChar" [style=solid];
"toHints" [style=solid];
"toLower" [style=solid];
"toUpper" [style=solid];
"unPos" [style=solid];
"upperChar" [style=solid];
"withHints" [style=solid];
"withParsecT" [style=solid];
"" -> "alphaNumChar";
"" -> "asciiChar";
"" -> "binDigitChar";
"" -> "char";
"" -> "char\'";
"" -> "controlChar";
"" -> "crlf";
"" -> "digitChar";
"" -> "eol";
"" -> "hexDigitChar";
"" -> "hspace";
"" -> "hspace1";
"" -> "letterChar";
"" -> "lowerChar";
"" -> "newline";
"" -> "octDigitChar";
"" -> "printChar";
"" -> "space";
"" -> "space1";
"" -> "spaceChar";
"" -> "string";
"" -> "string\'";
"" -> "tab";
"" -> "upperChar";
"alphaNumChar" -> "toChar";
"charCategory" -> "categoryName";
"charPretty" -> "charPretty\'";
"char\'" -> "char";
"char\'" -> "toLower";
"char\'" -> "toUpper";
"controlChar" -> "toChar";
"crlf" -> "string";
"dbg" -> "dbgLog";
"dbg" -> "streamDelta";
"dbg" -> "streamTake";
"dbgLog" -> "parseErrorPretty";
"dbgLog" -> "showStream";
"defaultTabWidth" -> "mkPos";
"eol" -> "crlf";
"eol" -> "newline";
"errorBundlePretty" -> "errorFancyLength";
"errorBundlePretty" -> "errorItemLength";
"errorBundlePretty" -> "errorOffset";
"errorBundlePretty" -> "parseErrorTextPretty";
"errorBundlePretty" -> "sourcePosPretty";
"errorBundlePretty" -> "unPos";
"expandTab" -> "unPos";
"fixs\'" -> "string";
"fixs\'" -> "string\'";
"hexDigitChar" -> "toChar";
"hspace" -> "isHSpace";
"hspace1" -> "isHSpace";
"initialPos" -> "pos1";
"isHSpace" -> "fixs";
"isHSpace" -> "fixs\'";
"isHSpace" -> "isSpace";
"letterChar" -> "toChar";
"longestMatch" -> "mkPT";
"longestMatch" -> "pEof";
"longestMatch" -> "pGetParserState";
"longestMatch" -> "pLabel";
"longestMatch" -> "pLookAhead";
"longestMatch" -> "pNotFollowedBy";
"longestMatch" -> "pObserving";
"longestMatch" -> "pParseError";
"longestMatch" -> "pTakeP";
"longestMatch" -> "pTakeWhile1P";
"longestMatch" -> "pTakeWhileP";
"longestMatch" -> "pToken";
"longestMatch" -> "pTokens";
"longestMatch" -> "pTry";
"longestMatch" -> "pUpdateParserState";
"longestMatch" -> "pWithRecovery";
"longestMatch" -> "runParsecT";
"lowerChar" -> "toChar";
"mergeError" -> "errorBundlePretty";
"mergeError" -> "errorOffset";
"messageItemsPretty" -> "orList";
"mkPT" -> "pPlus";
"mkPT" -> "pZero";
"newline" -> "char";
"orList" -> "accHints";
"orList" -> "pMap";
"orList" -> "refreshLastHint";
"orList" -> "runParsecT";
"orList" -> "toHints";
"orList" -> "withHints";
"orList" -> "withParsecT";
"pAp" -> "accHints";
"pAp" -> "pBind";
"pAp" -> "withHints";
"pBind" -> "accHints";
"pBind" -> "pFail";
"pBind" -> "withHints";
"pEof" -> "nes";
"pFail" -> "mkPT";
"pFail" -> "runParsecT";
"pLabel" -> "refreshLastHint";
"pMap" -> "pAp";
"pMap" -> "pBind";
"pMap" -> "pPure";
"pNotFollowedBy" -> "nes";
"pObserving" -> "toHints";
"pPlus" -> "longestMatch";
"pPlus" -> "toHints";
"pTakeWhile1P" -> "nes";
"pToken" -> "nes";
"pWithRecovery" -> "toHints";
"parseErrorPretty" -> "errorOffset";
"parseErrorPretty" -> "parseErrorTextPretty";
"parseErrorTextPretty" -> "messageItemsPretty";
"parseErrorTextPretty" -> "showErrorFancy";
"parseErrorTextPretty" -> "showErrorItem";
"pos1" -> "mkPos";
"printChar" -> "toChar";
"reachOffsetNoLine\'" -> "mkPos";
"reachOffsetNoLine\'" -> "pos1";
"reachOffsetNoLine\'" -> "unPos";
"reachOffset\'" -> "expandTab";
"reachOffset\'" -> "mkPos";
"reachOffset\'" -> "pos1";
"reachOffset\'" -> "unPos";
"showErrorFancy" -> "unPos";
"sourcePosPretty" -> "reachOffsetNoLine\'";
"sourcePosPretty" -> "reachOffset\'";
"sourcePosPretty" -> "splitAtBL";
"sourcePosPretty" -> "splitAtTL";
"sourcePosPretty" -> "stringPretty";
"sourcePosPretty" -> "unPos";
"space" -> "isSpace";
"space1" -> "isSpace";
"spaceChar" -> "isSpace";
"streamTake" -> "attachSourcePos";
"streamTake" -> "errorBundlePretty";
"streamTake" -> "errorOffset";
"streamTake" -> "mapParseError";
"streamTake" -> "mergeError";
"streamTake" -> "parseErrorPretty";
"streamTake" -> "parseErrorTextPretty";
"streamTake" -> "setErrorOffset";
"stringPretty" -> "charPretty";
"stringPretty" -> "charPretty\'";
"string\'" -> "dbg";
"symbol" -> "lexeme";
"symbol" -> "string";
"symbol\'" -> "defaultTabWidth";
"symbol\'" -> "initialPos";
"symbol\'" -> "lexeme";
"symbol\'" -> "mkPos";
"symbol\'" -> "pos1";
"symbol\'" -> "sourcePosPretty";
"symbol\'" -> "string\'";
"symbol\'" -> "unPos";
"tab" -> "char";
"toLower" -> "alphaNumChar";
"toLower" -> "asciiChar";
"toLower" -> "binDigitChar";
"toLower" -> "categoryName";
"toLower" -> "char";
"toLower" -> "charCategory";
"toLower" -> "char\'";
"toLower" -> "controlChar";
"toLower" -> "crlf";
"toLower" -> "digitChar";
"toLower" -> "eol";
"toLower" -> "hexDigitChar";
"toLower" -> "hspace";
"toLower" -> "hspace1";
"toLower" -> "latin1Char";
"toLower" -> "letterChar";
"toLower" -> "lowerChar";
"toLower" -> "markChar";
"toLower" -> "newline";
"toLower" -> "numberChar";
"toLower" -> "octDigitChar";
"toLower" -> "printChar";
"toLower" -> "punctuationChar";
"toLower" -> "separatorChar";
"toLower" -> "space";
"toLower" -> "space1";
"toLower" -> "spaceChar";
"toLower" -> "string";
"toLower" -> "string\'";
"toLower" -> "symbolChar";
"toLower" -> "tab";
"toLower" -> "upperChar";
"upperChar" -> "toChar";
"withParsecT" -> "lexeme";
"withParsecT" -> "mapParseError";
"withParsecT" -> "space";
"withParsecT" -> "symbol";
"withParsecT" -> "symbol\'";
}
