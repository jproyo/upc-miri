strict digraph deps {
"_Free" [style=solid];
"_Pure" [style=solid];
"_extract" [style=solid];
"_unwrap" [style=solid];
"altFTyCon" [style=solid];
"altTyCon" [style=solid];
"apFTyCon" [style=solid];
"apSeqTyCon" [style=solid];
"apTTyCon" [style=solid];
"apTyCon" [style=solid];
"captured" [style=solid];
"cofree" [style=solid];
"cofreeConstr" [style=solid];
"cofreeDataType" [style=solid];
"cofreeFConstr" [style=solid];
"cofreeFDataType" [style=solid];
"cofreeFTyCon" [style=solid];
"cofreeTConstr" [style=solid];
"cofreeTDataType" [style=solid];
"cofreeTTyCon" [style=solid];
"cofreeTyCon" [style=solid];
"coiter" [style=solid];
"coiterT" [style=solid];
"coiterTConstr" [style=solid];
"coiterTDataType" [style=solid];
"coiterTTyCon" [style=solid];
"coiterW" [style=solid];
"constructorNames" [style=solid];
"cutoff" [style=solid];
"cutoffI" [style=solid];
"delay" [style=solid];
"extractVars" [style=solid];
"findTypeOrFail" [style=solid];
"findValueOrFail" [style=solid];
"fold" [style=solid];
"foldF" [style=solid];
"foldFree" [style=solid];
"foldFreeT" [style=solid];
"foldM" [style=solid];
"free" [style=solid];
"freeConstr" [style=solid];
"freeDataType" [style=solid];
"freeFDataType" [style=solid];
"freeFTyCon" [style=solid];
"freeTConstr" [style=solid];
"freeTDataType" [style=solid];
"freeTTyCon" [style=solid];
"freeTyCon" [style=solid];
"fromF" [style=solid];
"fromFT" [style=solid];
"genFree" [style=solid];
"genFreeCon" [style=solid];
"headF" [style=solid];
"hoistASeq" [style=solid];
"hoistAlt" [style=solid];
"hoistAltF" [style=solid];
"hoistAp" [style=solid];
"hoistApF" [style=solid];
"hoistApT" [style=solid];
"hoistCofree" [style=solid];
"hoistF" [style=solid];
"hoistFT" [style=solid];
"hoistFree" [style=solid];
"hoistFreeT" [style=solid];
"hoistIterT" [style=solid];
"improve" [style=solid];
"improveT" [style=solid];
"infixl" [style=solid];
"infixr" [style=solid];
"intercalateT" [style=solid];
"interleave" [style=solid];
"interleave_" [style=solid];
"intersperseT" [style=solid];
"iter" [style=solid];
"iterA" [style=solid];
"iterAp" [style=solid];
"iterConstr" [style=solid];
"iterDataType" [style=solid];
"iterM" [style=solid];
"iterT" [style=solid];
"iterTM" [style=solid];
"joinApT" [style=solid];
"joinFT" [style=solid];
"joinFreeT" [style=solid];
"leaves" [style=solid];
"liftAlt" [style=solid];
"liftAltF" [style=solid];
"liftAp" [style=solid];
"liftApO" [style=solid];
"liftApT" [style=solid];
"liftCon" [style=solid];
"liftCon\'" [style=solid];
"liftDec" [style=solid];
"liftF" [style=solid];
"liftGadtC" [style=solid];
"liftIter" [style=solid];
"makeFree" [style=solid];
"makeFreeCon" [style=solid];
"makeFreeCon_" [style=solid];
"makeFree_" [style=solid];
"mapRet" [style=solid];
"melem" [style=solid];
"mkArg" [style=solid];
"mkOpName" [style=solid];
"never" [style=solid];
"params" [style=solid];
"partialIterT" [style=solid];
"pureConstr" [style=solid];
"rebaseASeq" [style=solid];
"reduceASeq" [style=solid];
"retract" [style=solid];
"retractAp" [style=solid];
"retractT" [style=solid];
"runAlt" [style=solid];
"runAp" [style=solid];
"runApF" [style=solid];
"runApT" [style=solid];
"runApT_" [style=solid];
"runAp_" [style=solid];
"runCofree" [style=solid];
"runCoiter" [style=solid];
"runF" [style=solid];
"runFree" [style=solid];
"runIter" [style=solid];
"section" [style=solid];
"shoots" [style=solid];
"splitAppT" [style=solid];
"tailF" [style=solid];
"telescoped" [style=solid];
"telescoped_" [style=solid];
"toF" [style=solid];
"toFT" [style=solid];
"toFreeT" [style=solid];
"transApF" [style=solid];
"transApT" [style=solid];
"transCofreeF" [style=solid];
"transCofreeT" [style=solid];
"transFT" [style=solid];
"transFreeF" [style=solid];
"transFreeT" [style=solid];
"traverseASeq" [style=solid];
"unfold" [style=solid];
"unfoldM" [style=solid];
"unifyCaptured" [style=solid];
"unifyT" [style=solid];
"untilJust" [style=solid];
"usesTV" [style=solid];
"wrapT" [style=solid];
"zipExprs" [style=solid];
"" -> "hoistAlt";
"" -> "liftAlt";
"" -> "runAlt";
"_Free" -> "freeTyCon";
"altFTyCon" -> "hoistAlt";
"altFTyCon" -> "liftAlt";
"altFTyCon" -> "runAlt";
"apFTyCon" -> "_extract";
"apFTyCon" -> "_unwrap";
"apFTyCon" -> "coiter";
"apFTyCon" -> "coiterW";
"apFTyCon" -> "hoistCofree";
"apFTyCon" -> "leaves";
"apFTyCon" -> "section";
"apFTyCon" -> "shoots";
"apFTyCon" -> "telescoped";
"apFTyCon" -> "telescoped_";
"apFTyCon" -> "unfold";
"apFTyCon" -> "unfoldM";
"apSeqTyCon" -> "hoistAp";
"apSeqTyCon" -> "liftAp";
"apSeqTyCon" -> "retractAp";
"apSeqTyCon" -> "runAp";
"apSeqTyCon" -> "runAp_";
"apTyCon" -> "apTyCon";
"apTyCon" -> "hoistASeq";
"apTyCon" -> "hoistAp";
"apTyCon" -> "liftAp";
"apTyCon" -> "rebaseASeq";
"apTyCon" -> "reduceASeq";
"apTyCon" -> "retractAp";
"apTyCon" -> "runAp";
"apTyCon" -> "runAp_";
"apTyCon" -> "traverseASeq";
"captured" -> "captured";
"cofreeConstr" -> "cofreeDataType";
"cofreeDataType" -> "cofreeConstr";
"cofreeDataType" -> "hoistCofree";
"cofreeFConstr" -> "cofreeTDataType";
"cofreeFDataType" -> "cofreeTConstr";
"cofreeFTyCon" -> "cofreeFConstr";
"cofreeFTyCon" -> "cofreeFDataType";
"cofreeFTyCon" -> "cofreeTConstr";
"cofreeFTyCon" -> "cofreeTDataType";
"cofreeTConstr" -> "cofreeFConstr";
"cofreeTDataType" -> "coiter";
"cofreeTDataType" -> "runCoiter";
"cofreeTDataType" -> "unfold";
"cofreeTyCon" -> "cofreeConstr";
"cofreeTyCon" -> "cofreeDataType";
"coiter" -> "coiter";
"coiterT" -> "cofreeFTyCon";
"coiterT" -> "cofreeTTyCon";
"coiterT" -> "coiterT";
"coiterTConstr" -> "coiterTDataType";
"coiterTDataType" -> "_Free";
"coiterTDataType" -> "_Pure";
"coiterTDataType" -> "coiterTConstr";
"coiterTDataType" -> "cutoff";
"coiterTDataType" -> "foldFree";
"coiterTDataType" -> "free";
"coiterTDataType" -> "hoistFree";
"coiterTDataType" -> "iter";
"coiterTDataType" -> "iterA";
"coiterTDataType" -> "iterM";
"coiterTDataType" -> "liftF";
"coiterTDataType" -> "retract";
"coiterTDataType" -> "toFreeT";
"coiterTDataType" -> "unfold";
"coiterTDataType" -> "unfoldM";
"coiterTTyCon" -> "coiterTConstr";
"coiterTTyCon" -> "coiterTDataType";
"coiterW" -> "coiterW";
"constructorNames" -> "constructorNames";
"cutoff" -> "cutoff";
"cutoff" -> "cutoffI";
"cutoff" -> "fromFT";
"cutoff" -> "toFT";
"cutoffI" -> "liftF";
"cutoffI" -> "runF";
"cutoffI" -> "wrapT";
"extractVars" -> "extractVars";
"fold" -> "fold";
"foldFree" -> "foldFree";
"foldFreeT" -> "foldFreeT";
"foldM" -> "foldM";
"free" -> "hoistFreeT";
"freeConstr" -> "freeTDataType";
"freeDataType" -> "_Free";
"freeDataType" -> "_Pure";
"freeDataType" -> "cutoff";
"freeDataType" -> "foldF";
"freeDataType" -> "foldFree";
"freeDataType" -> "free";
"freeDataType" -> "freeConstr";
"freeDataType" -> "fromF";
"freeDataType" -> "hoistF";
"freeDataType" -> "hoistFree";
"freeDataType" -> "improve";
"freeDataType" -> "iter";
"freeDataType" -> "iterA";
"freeDataType" -> "iterM";
"freeDataType" -> "liftF";
"freeDataType" -> "pureConstr";
"freeDataType" -> "retract";
"freeDataType" -> "toF";
"freeDataType" -> "toFreeT";
"freeDataType" -> "unfold";
"freeDataType" -> "unfoldM";
"freeFDataType" -> "freeTConstr";
"freeFTyCon" -> "freeConstr";
"freeFTyCon" -> "freeFDataType";
"freeFTyCon" -> "freeTConstr";
"freeFTyCon" -> "freeTDataType";
"freeFTyCon" -> "pureConstr";
"freeTConstr" -> "freeConstr";
"freeTConstr" -> "pureConstr";
"freeTDataType" -> "cutoff";
"freeTDataType" -> "free";
"freeTDataType" -> "fromF";
"freeTDataType" -> "fromFT";
"freeTDataType" -> "hoistFT";
"freeTDataType" -> "hoistFreeT";
"freeTDataType" -> "improve";
"freeTDataType" -> "improveT";
"freeTDataType" -> "intercalateT";
"freeTDataType" -> "intersperseT";
"freeTDataType" -> "iter";
"freeTDataType" -> "iterM";
"freeTDataType" -> "iterT";
"freeTDataType" -> "iterTM";
"freeTDataType" -> "joinFT";
"freeTDataType" -> "joinFreeT";
"freeTDataType" -> "liftF";
"freeTDataType" -> "partialIterT";
"freeTDataType" -> "retract";
"freeTDataType" -> "retractT";
"freeTDataType" -> "runF";
"freeTDataType" -> "runFree";
"freeTDataType" -> "toF";
"freeTDataType" -> "toFT";
"freeTDataType" -> "transFT";
"freeTDataType" -> "transFreeT";
"freeTyCon" -> "freeConstr";
"freeTyCon" -> "freeDataType";
"freeTyCon" -> "iterConstr";
"freeTyCon" -> "iterDataType";
"freeTyCon" -> "pureConstr";
"fromF" -> "runF";
"genFree" -> "liftDec";
"genFreeCon" -> "genFree";
"hoistASeq" -> "hoistASeq";
"hoistAlt" -> "altFTyCon";
"hoistAlt" -> "altTyCon";
"hoistAlt" -> "hoistAltF";
"hoistAlt" -> "hoistAp";
"hoistAlt" -> "iterAp";
"hoistAlt" -> "liftAp";
"hoistAlt" -> "retractAp";
"hoistAlt" -> "runAp";
"hoistAlt" -> "runAp_";
"hoistAltF" -> "hoistAlt";
"hoistAp" -> "hoistASeq";
"hoistAp" -> "hoistAp";
"hoistAp" -> "rebaseASeq";
"hoistApF" -> "hoistApT";
"hoistApT" -> "hoistApF";
"hoistCofree" -> "hoistCofree";
"hoistFree" -> "foldFree";
"hoistFree" -> "hoistFree";
"hoistFree" -> "liftF";
"hoistFreeT" -> "hoistFreeT";
"hoistIterT" -> "hoistIterT";
"improve" -> "fromF";
"improveT" -> "cutoff";
"improveT" -> "delay";
"improveT" -> "fold";
"improveT" -> "foldM";
"improveT" -> "fromFT";
"improveT" -> "hoistIterT";
"improveT" -> "interleave";
"improveT" -> "interleave_";
"improveT" -> "iter";
"improveT" -> "liftIter";
"improveT" -> "never";
"improveT" -> "retract";
"improveT" -> "runIter";
"improveT" -> "untilJust";
"intercalateT" -> "freeFTyCon";
"intercalateT" -> "freeTTyCon";
"intercalateT" -> "iterTM";
"interleave" -> "interleave";
"interleave_" -> "freeTyCon";
"interleave_" -> "interleave_";
"intersperseT" -> "iterTM";
"iter" -> "iter";
"iter" -> "iterT";
"iter" -> "runF";
"iterA" -> "iterA";
"iterConstr" -> "iterDataType";
"iterDataType" -> "iterConstr";
"iterM" -> "fold";
"iterM" -> "hoistFT";
"iterM" -> "hoistFreeT";
"iterM" -> "iterM";
"iterM" -> "iterT";
"iterM" -> "retract";
"iterM" -> "runF";
"iterT" -> "iterT";
"iterTM" -> "iterTM";
"joinApT" -> "joinApT";
"joinApT" -> "liftApT";
"joinFreeT" -> "joinFreeT";
"leaves" -> "cofree";
"leaves" -> "coiterT";
"leaves" -> "headF";
"leaves" -> "runCofree";
"leaves" -> "tailF";
"leaves" -> "transCofreeT";
"liftAlt" -> "liftAltF";
"liftCon" -> "constructorNames";
"liftCon" -> "liftCon";
"liftCon" -> "liftCon\'";
"liftCon" -> "liftGadtC";
"liftCon" -> "melem";
"liftCon\'" -> "captured";
"liftCon\'" -> "extractVars";
"liftCon\'" -> "findTypeOrFail";
"liftCon\'" -> "findValueOrFail";
"liftCon\'" -> "liftF";
"liftCon\'" -> "mkArg";
"liftCon\'" -> "mkOpName";
"liftCon\'" -> "params";
"liftCon\'" -> "unifyCaptured";
"liftCon\'" -> "zipExprs";
"liftDec" -> "liftCon";
"liftGadtC" -> "liftCon";
"liftGadtC" -> "splitAppT";
"liftIter" -> "hoistIterT";
"makeFree" -> "genFree";
"makeFreeCon" -> "genFreeCon";
"makeFreeCon_" -> "cutoff";
"makeFreeCon_" -> "foldFreeT";
"makeFreeCon_" -> "free";
"makeFreeCon_" -> "genFreeCon";
"makeFreeCon_" -> "hoistFreeT";
"makeFreeCon_" -> "intercalateT";
"makeFreeCon_" -> "intersperseT";
"makeFreeCon_" -> "iter";
"makeFreeCon_" -> "iterM";
"makeFreeCon_" -> "iterT";
"makeFreeCon_" -> "iterTM";
"makeFreeCon_" -> "joinFreeT";
"makeFreeCon_" -> "liftF";
"makeFreeCon_" -> "partialIterT";
"makeFreeCon_" -> "retract";
"makeFreeCon_" -> "retractT";
"makeFreeCon_" -> "runFree";
"makeFreeCon_" -> "transFreeT";
"makeFree_" -> "genFree";
"mapRet" -> "mapRet";
"mkArg" -> "usesTV";
"never" -> "delay";
"never" -> "never";
"params" -> "params";
"partialIterT" -> "partialIterT";
"pureConstr" -> "freeDataType";
"pureConstr" -> "freeFDataType";
"rebaseASeq" -> "rebaseASeq";
"reduceASeq" -> "reduceASeq";
"retract" -> "foldFree";
"retract" -> "retract";
"retract" -> "runF";
"retractAp" -> "apTyCon";
"retractAp" -> "hoistApF";
"retractAp" -> "hoistApT";
"retractAp" -> "joinApT";
"retractAp" -> "liftApO";
"retractAp" -> "liftApT";
"retractAp" -> "reduceASeq";
"retractAp" -> "retractAp";
"retractAp" -> "runAlt";
"retractAp" -> "runAp";
"retractAp" -> "runApF";
"retractAp" -> "runApT";
"retractAp" -> "runApT_";
"retractAp" -> "runAp_";
"retractAp" -> "transApF";
"retractAp" -> "transApT";
"retractT" -> "retractT";
"runAlt" -> "apFTyCon";
"runAlt" -> "apTTyCon";
"runAlt" -> "runAlt";
"runAp" -> "hoistAp";
"runAp" -> "retractAp";
"runAp" -> "runAp";
"runAp" -> "runApT";
"runApF" -> "runApT";
"runApT" -> "runApF";
"runApT_" -> "runApT";
"runAp_" -> "runAp";
"runAp_" -> "runApT_";
"runCofree" -> "headF";
"runCofree" -> "tailF";
"runIter" -> "hoistIterT";
"runIter" -> "never";
"section" -> "cofreeTyCon";
"section" -> "section";
"telescoped" -> "_extract";
"telescoped" -> "_unwrap";
"telescoped_" -> "_unwrap";
"toF" -> "toFT";
"toFT" -> "toFT";
"toFreeT" -> "foldFree";
"toFreeT" -> "liftF";
"toFreeT" -> "toFreeT";
"transApF" -> "transApT";
"transApT" -> "transApF";
"transCofreeT" -> "transCofreeF";
"transCofreeT" -> "transCofreeT";
"transFreeT" -> "transFreeF";
"transFreeT" -> "transFreeT";
"traverseASeq" -> "traverseASeq";
"unfold" -> "coiterTTyCon";
"unfold" -> "unfold";
"unfoldM" -> "unfoldM";
"unifyCaptured" -> "unifyT";
"unifyT" -> "findTypeOrFail";
"unifyT" -> "findValueOrFail";
"unifyT" -> "mapRet";
"unifyT" -> "unifyT";
"untilJust" -> "delay";
"untilJust" -> "untilJust";
"usesTV" -> "usesTV";
"wrapT" -> "liftF";
"wrapT" -> "makeFree";
"wrapT" -> "makeFreeCon";
"wrapT" -> "makeFreeCon_";
"wrapT" -> "makeFree_";
"zipExprs" -> "zipExprs";
}
