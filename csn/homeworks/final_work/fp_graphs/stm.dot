strict digraph deps {
"atomically" [style=solid];
"catchSTM" [style=solid];
"check" [style=solid];
"cloneTChan" [style=solid];
"dupTChan" [style=solid];
"flushTBQueue" [style=solid];
"flushTQueue" [style=solid];
"isEmptyTBQueue" [style=solid];
"isEmptyTChan" [style=solid];
"isEmptyTMVar" [style=solid];
"isEmptyTQueue" [style=solid];
"isFullTBQueue" [style=solid];
"lengthTBQueue" [style=solid];
"liftSTM" [style=solid];
"mkWeakTMVar" [style=solid];
"mkWeakTVar" [style=solid];
"modifyTVar" [style=solid];
"modifyTVar\'" [style=solid];
"newBroadcastTChan" [style=solid];
"newBroadcastTChanIO" [style=solid];
"newEmptyTMVar" [style=solid];
"newEmptyTMVarIO" [style=solid];
"newTBQueue" [style=solid];
"newTBQueueIO" [style=solid];
"newTChan" [style=solid];
"newTChanIO" [style=solid];
"newTMVar" [style=solid];
"newTMVarIO" [style=solid];
"newTQueue" [style=solid];
"newTQueueIO" [style=solid];
"newTSem" [style=solid];
"newTVar" [style=solid];
"newTVarIO" [style=solid];
"peekTBQueue" [style=solid];
"peekTChan" [style=solid];
"peekTQueue" [style=solid];
"putTMVar" [style=solid];
"readTBQueue" [style=solid];
"readTChan" [style=solid];
"readTMVar" [style=solid];
"readTQueue" [style=solid];
"readTVar" [style=solid];
"readTVarIO" [style=solid];
"rep" [style=solid];
"signalTSem" [style=solid];
"signalTSemN" [style=solid];
"stateTVar" [style=solid];
"swapTMVar" [style=solid];
"swapTVar" [style=solid];
"takeTMVar" [style=solid];
"throwSTM" [style=solid];
"tryPeekTBQueue" [style=solid];
"tryPeekTChan" [style=solid];
"tryPeekTQueue" [style=solid];
"tryPutTMVar" [style=solid];
"tryReadTBQueue" [style=solid];
"tryReadTChan" [style=solid];
"tryReadTMVar" [style=solid];
"tryReadTQueue" [style=solid];
"tryTakeTMVar" [style=solid];
"unGetTBQueue" [style=solid];
"unGetTChan" [style=solid];
"unGetTQueue" [style=solid];
"unSTM" [style=solid];
"waitTSem" [style=solid];
"writeTBQueue" [style=solid];
"writeTChan" [style=solid];
"writeTQueue" [style=solid];
"writeTVar" [style=solid];
"" -> "newTVar";
"" -> "readTVar";
"" -> "rep";
"" -> "writeTVar";
"catchSTM" -> "catchSTM";
"catchSTM" -> "unSTM";
"cloneTChan" -> "isEmptyTMVar";
"cloneTChan" -> "mkWeakTMVar";
"cloneTChan" -> "newEmptyTMVar";
"cloneTChan" -> "newEmptyTMVarIO";
"cloneTChan" -> "newTMVar";
"cloneTChan" -> "newTMVarIO";
"cloneTChan" -> "newTVar";
"cloneTChan" -> "putTMVar";
"cloneTChan" -> "readTMVar";
"cloneTChan" -> "readTVar";
"cloneTChan" -> "swapTMVar";
"cloneTChan" -> "takeTMVar";
"cloneTChan" -> "tryPutTMVar";
"cloneTChan" -> "tryReadTMVar";
"cloneTChan" -> "tryTakeTMVar";
"dupTChan" -> "newTVar";
"dupTChan" -> "readTVar";
"flushTBQueue" -> "readTVar";
"flushTBQueue" -> "writeTVar";
"flushTQueue" -> "readTVar";
"flushTQueue" -> "writeTVar";
"isEmptyTBQueue" -> "readTVar";
"isEmptyTChan" -> "readTVar";
"isEmptyTMVar" -> "readTVar";
"isEmptyTQueue" -> "newTSem";
"isEmptyTQueue" -> "readTVar";
"isEmptyTQueue" -> "signalTSem";
"isEmptyTQueue" -> "signalTSemN";
"isEmptyTQueue" -> "waitTSem";
"isFullTBQueue" -> "cloneTChan";
"isFullTBQueue" -> "dupTChan";
"isFullTBQueue" -> "isEmptyTChan";
"isFullTBQueue" -> "newBroadcastTChan";
"isFullTBQueue" -> "newBroadcastTChanIO";
"isFullTBQueue" -> "newTChan";
"isFullTBQueue" -> "newTChanIO";
"isFullTBQueue" -> "peekTChan";
"isFullTBQueue" -> "readTChan";
"isFullTBQueue" -> "readTVar";
"isFullTBQueue" -> "tryPeekTChan";
"isFullTBQueue" -> "tryReadTChan";
"isFullTBQueue" -> "unGetTChan";
"isFullTBQueue" -> "writeTChan";
"lengthTBQueue" -> "readTVar";
"liftSTM" -> "atomically";
"liftSTM" -> "catchSTM";
"liftSTM" -> "liftSTM";
"liftSTM" -> "newTVar";
"liftSTM" -> "newTVarIO";
"liftSTM" -> "readTVar";
"liftSTM" -> "readTVarIO";
"liftSTM" -> "throwSTM";
"liftSTM" -> "writeTVar";
"mkWeakTMVar" -> "flushTQueue";
"mkWeakTMVar" -> "isEmptyTQueue";
"mkWeakTMVar" -> "newTQueue";
"mkWeakTMVar" -> "newTQueueIO";
"mkWeakTMVar" -> "peekTQueue";
"mkWeakTMVar" -> "readTQueue";
"mkWeakTMVar" -> "tryPeekTQueue";
"mkWeakTMVar" -> "tryReadTQueue";
"mkWeakTMVar" -> "unGetTQueue";
"mkWeakTMVar" -> "writeTQueue";
"mkWeakTVar" -> "atomically";
"mkWeakTVar" -> "catchSTM";
"mkWeakTVar" -> "check";
"mkWeakTVar" -> "throwSTM";
"modifyTVar" -> "readTVar";
"modifyTVar" -> "writeTVar";
"modifyTVar\'" -> "readTVar";
"modifyTVar\'" -> "writeTVar";
"newBroadcastTChan" -> "newTVar";
"newBroadcastTChanIO" -> "newTVarIO";
"newEmptyTMVar" -> "newTVar";
"newEmptyTMVarIO" -> "newTVarIO";
"newTBQueue" -> "newTVar";
"newTBQueueIO" -> "newTVarIO";
"newTChan" -> "newTVar";
"newTChanIO" -> "newTVarIO";
"newTMVar" -> "newTVar";
"newTMVarIO" -> "newTVarIO";
"newTQueue" -> "newTVar";
"newTQueueIO" -> "newTVarIO";
"newTSem" -> "newTVar";
"newTVar" -> "newTVarIO";
"peekTBQueue" -> "readTVar";
"peekTBQueue" -> "writeTVar";
"peekTChan" -> "readTVar";
"peekTQueue" -> "readTVar";
"peekTQueue" -> "writeTVar";
"putTMVar" -> "readTVar";
"putTMVar" -> "writeTVar";
"readTBQueue" -> "readTVar";
"readTBQueue" -> "writeTVar";
"readTChan" -> "readTVar";
"readTChan" -> "writeTVar";
"readTMVar" -> "readTVar";
"readTQueue" -> "readTVar";
"readTQueue" -> "writeTVar";
"rep" -> "flushTBQueue";
"rep" -> "isEmptyTBQueue";
"rep" -> "isFullTBQueue";
"rep" -> "lengthTBQueue";
"rep" -> "newTBQueue";
"rep" -> "newTBQueueIO";
"rep" -> "peekTBQueue";
"rep" -> "readTBQueue";
"rep" -> "readTVar";
"rep" -> "tryPeekTBQueue";
"rep" -> "tryReadTBQueue";
"rep" -> "unGetTBQueue";
"rep" -> "writeTBQueue";
"rep" -> "writeTVar";
"signalTSem" -> "readTVar";
"signalTSem" -> "writeTVar";
"signalTSemN" -> "mkWeakTVar";
"signalTSemN" -> "modifyTVar";
"signalTSemN" -> "modifyTVar\'";
"signalTSemN" -> "newTVar";
"signalTSemN" -> "newTVarIO";
"signalTSemN" -> "readTVar";
"signalTSemN" -> "readTVarIO";
"signalTSemN" -> "signalTSem";
"signalTSemN" -> "stateTVar";
"signalTSemN" -> "swapTVar";
"signalTSemN" -> "writeTVar";
"stateTVar" -> "readTVar";
"stateTVar" -> "writeTVar";
"swapTMVar" -> "readTVar";
"swapTMVar" -> "writeTVar";
"swapTVar" -> "readTVar";
"swapTVar" -> "writeTVar";
"takeTMVar" -> "readTVar";
"takeTMVar" -> "writeTVar";
"tryPeekTBQueue" -> "tryReadTBQueue";
"tryPeekTBQueue" -> "unGetTBQueue";
"tryPeekTChan" -> "readTVar";
"tryPeekTQueue" -> "tryReadTQueue";
"tryPeekTQueue" -> "unGetTQueue";
"tryPutTMVar" -> "readTVar";
"tryPutTMVar" -> "writeTVar";
"tryReadTBQueue" -> "readTBQueue";
"tryReadTChan" -> "readTVar";
"tryReadTChan" -> "writeTVar";
"tryReadTMVar" -> "readTVar";
"tryReadTQueue" -> "readTQueue";
"tryTakeTMVar" -> "readTVar";
"tryTakeTMVar" -> "writeTVar";
"unGetTBQueue" -> "readTVar";
"unGetTBQueue" -> "writeTVar";
"unGetTChan" -> "newTVar";
"unGetTChan" -> "readTVar";
"unGetTChan" -> "writeTVar";
"unGetTQueue" -> "readTVar";
"unGetTQueue" -> "writeTVar";
"unSTM" -> "unSTM";
"waitTSem" -> "readTVar";
"waitTSem" -> "writeTVar";
"writeTBQueue" -> "readTVar";
"writeTBQueue" -> "writeTVar";
"writeTChan" -> "newTVar";
"writeTChan" -> "readTVar";
"writeTChan" -> "writeTVar";
"writeTQueue" -> "readTVar";
"writeTQueue" -> "writeTVar";
}
