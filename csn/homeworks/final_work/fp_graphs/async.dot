strict digraph deps {
"async" [style=solid];
"asyncBound" [style=solid];
"asyncOn" [style=solid];
"asyncOnWithUnmask" [style=solid];
"asyncUsing" [style=solid];
"asyncWithUnmask" [style=solid];
"cancel" [style=solid];
"cancelWith" [style=solid];
"catchAll" [style=solid];
"compareAsyncs" [style=solid];
"concurrently" [style=solid];
"concurrently\'" [style=solid];
"concurrently_" [style=solid];
"forConcurrently" [style=solid];
"forConcurrently_" [style=solid];
"forkRepeat" [style=solid];
"isCancel" [style=solid];
"link" [style=solid];
"link2" [style=solid];
"link2Only" [style=solid];
"linkOnly" [style=solid];
"mapConcurrently" [style=solid];
"mapConcurrently_" [style=solid];
"poll" [style=solid];
"pollSTM" [style=solid];
"race" [style=solid];
"race_" [style=solid];
"rawForkIO" [style=solid];
"rawForkOn" [style=solid];
"replicateConcurrently" [style=solid];
"replicateConcurrently_" [style=solid];
"tryAll" [style=solid];
"uninterruptibleCancel" [style=solid];
"wait" [style=solid];
"waitAny" [style=solid];
"waitAnyCancel" [style=solid];
"waitAnyCatch" [style=solid];
"waitAnyCatchCancel" [style=solid];
"waitAnyCatchSTM" [style=solid];
"waitAnySTM" [style=solid];
"waitBoth" [style=solid];
"waitBothSTM" [style=solid];
"waitCatch" [style=solid];
"waitCatchSTM" [style=solid];
"waitEither" [style=solid];
"waitEitherCancel" [style=solid];
"waitEitherCatch" [style=solid];
"waitEitherCatchCancel" [style=solid];
"waitEitherCatchSTM" [style=solid];
"waitEitherSTM" [style=solid];
"waitEitherSTM_" [style=solid];
"waitEither_" [style=solid];
"waitSTM" [style=solid];
"withAsync" [style=solid];
"withAsyncBound" [style=solid];
"withAsyncOn" [style=solid];
"withAsyncOnWithUnmask" [style=solid];
"withAsyncUsing" [style=solid];
"withAsyncWithUnmask" [style=solid];
"" -> "async";
"" -> "asyncBound";
"" -> "asyncOn";
"" -> "asyncOnWithUnmask";
"" -> "asyncWithUnmask";
"" -> "cancel";
"" -> "cancelWith";
"" -> "compareAsyncs";
"" -> "concurrently";
"" -> "concurrently_";
"" -> "forConcurrently";
"" -> "forConcurrently_";
"" -> "link";
"" -> "link2";
"" -> "link2Only";
"" -> "linkOnly";
"" -> "mapConcurrently";
"" -> "mapConcurrently_";
"" -> "poll";
"" -> "pollSTM";
"" -> "race";
"" -> "race_";
"" -> "replicateConcurrently";
"" -> "replicateConcurrently_";
"" -> "uninterruptibleCancel";
"" -> "wait";
"" -> "waitAny";
"" -> "waitAnyCancel";
"" -> "waitAnyCatch";
"" -> "waitAnyCatchCancel";
"" -> "waitAnyCatchSTM";
"" -> "waitAnySTM";
"" -> "waitBoth";
"" -> "waitBothSTM";
"" -> "waitCatch";
"" -> "waitCatchSTM";
"" -> "waitEither";
"" -> "waitEitherCancel";
"" -> "waitEitherCatch";
"" -> "waitEitherCatchCancel";
"" -> "waitEitherCatchSTM";
"" -> "waitEitherSTM";
"" -> "waitEitherSTM_";
"" -> "waitEither_";
"" -> "waitSTM";
"" -> "withAsync";
"" -> "withAsyncBound";
"" -> "withAsyncOn";
"" -> "withAsyncOnWithUnmask";
"" -> "withAsyncWithUnmask";
"async" -> "asyncUsing";
"async" -> "rawForkIO";
"asyncBound" -> "asyncUsing";
"asyncOn" -> "asyncUsing";
"asyncOn" -> "rawForkOn";
"asyncOnWithUnmask" -> "asyncUsing";
"asyncOnWithUnmask" -> "rawForkOn";
"asyncWithUnmask" -> "asyncUsing";
"asyncWithUnmask" -> "rawForkIO";
"cancel" -> "waitCatch";
"cancelWith" -> "waitCatch";
"concurrently" -> "concurrently";
"concurrently" -> "waitBoth";
"concurrently" -> "withAsync";
"concurrently\'" -> "catchAll";
"concurrently\'" -> "concurrently\'";
"concurrently_" -> "concurrently\'";
"forConcurrently" -> "mapConcurrently";
"forConcurrently_" -> "mapConcurrently_";
"forkRepeat" -> "tryAll";
"link" -> "isCancel";
"link" -> "linkOnly";
"link2" -> "isCancel";
"link2" -> "link2Only";
"link2Only" -> "forkRepeat";
"link2Only" -> "waitEitherCatch";
"linkOnly" -> "forkRepeat";
"linkOnly" -> "waitCatch";
"poll" -> "pollSTM";
"race" -> "race";
"race" -> "waitEither";
"race" -> "withAsync";
"race_" -> "concurrently\'";
"replicateConcurrently_" -> "concurrently";
"replicateConcurrently_" -> "race";
"uninterruptibleCancel" -> "cancel";
"wait" -> "waitSTM";
"waitAny" -> "waitAnySTM";
"waitAnyCancel" -> "cancel";
"waitAnyCancel" -> "waitAny";
"waitAnyCatch" -> "waitAnyCatchSTM";
"waitAnyCatchCancel" -> "cancel";
"waitAnyCatchCancel" -> "waitAnyCatch";
"waitAnyCatchSTM" -> "waitCatchSTM";
"waitAnySTM" -> "waitSTM";
"waitBoth" -> "waitBothSTM";
"waitBothSTM" -> "waitSTM";
"waitCatch" -> "waitCatchSTM";
"waitEither" -> "waitEitherSTM";
"waitEitherCancel" -> "cancel";
"waitEitherCancel" -> "waitEither";
"waitEitherCatch" -> "waitEitherCatchSTM";
"waitEitherCatchCancel" -> "cancel";
"waitEitherCatchCancel" -> "waitEitherCatch";
"waitEitherCatchSTM" -> "waitCatchSTM";
"waitEitherSTM" -> "waitSTM";
"waitEitherSTM_" -> "waitSTM";
"waitEither_" -> "waitEitherSTM_";
"waitSTM" -> "waitCatchSTM";
"withAsync" -> "rawForkIO";
"withAsync" -> "withAsyncUsing";
"withAsyncBound" -> "withAsyncUsing";
"withAsyncOn" -> "rawForkOn";
"withAsyncOn" -> "withAsyncUsing";
"withAsyncOnWithUnmask" -> "rawForkOn";
"withAsyncOnWithUnmask" -> "withAsyncUsing";
"withAsyncUsing" -> "catchAll";
"withAsyncUsing" -> "uninterruptibleCancel";
"withAsyncWithUnmask" -> "rawForkIO";
"withAsyncWithUnmask" -> "withAsyncUsing";
}
