strict digraph deps {
"builderDmyHMSz" [style=solid];
"cfilter" [style=solid];
"cfilterM" [style=solid];
"choose" [style=solid];
"chooseM" [style=solid];
"cmap" [style=solid];
"cmapM" [style=solid];
"cmapMaybe" [style=solid];
"cmapMaybeM" [style=solid];
"conquer" [style=solid];
"convertToLogAction" [style=solid];
"defCapacity" [style=solid];
"defaultFieldMap" [style=solid];
"divide" [style=solid];
"divideM" [style=solid];
"duplicate" [style=solid];
"extend" [style=solid];
"extract" [style=solid];
"extractField" [style=solid];
"filterBySeverity" [style=solid];
"fmtMessage" [style=solid];
"fmtRichMessageCustomDefault" [style=solid];
"fmtRichMessageDefault" [style=solid];
"fmtSimpleMessage" [style=solid];
"fmtSimpleRichMessageDefault" [style=solid];
"foldActions" [style=solid];
"forkBackgroundLogger" [style=solid];
"formatWith" [style=solid];
"getLogFiles" [style=solid];
"getOldFiles" [style=solid];
"hoistLogAction" [style=solid];
"infix" [style=solid];
"infixl" [style=solid];
"infixr" [style=solid];
"isFileSizeLimitReached" [style=solid];
"isLimitedBy" [style=solid];
"killBackgroundLogger" [style=solid];
"lens" [style=solid];
"liftLogAction" [style=solid];
"liftLogIO" [style=solid];
"log" [style=solid];
"logByteStringHandle" [style=solid];
"logByteStringStderr" [style=solid];
"logByteStringStdout" [style=solid];
"logDebug" [style=solid];
"logError" [style=solid];
"logException" [style=solid];
"logFileIndex" [style=solid];
"logFlush" [style=solid];
"logInfo" [style=solid];
"logMessagePure" [style=solid];
"logMsg" [style=solid];
"logMsgs" [style=solid];
"logPrint" [style=solid];
"logPrintHandle" [style=solid];
"logPrintStderr" [style=solid];
"logStringHandle" [style=solid];
"logStringStderr" [style=solid];
"logStringStdout" [style=solid];
"logText" [style=solid];
"logTextHandle" [style=solid];
"logTextStderr" [style=solid];
"logTextStdout" [style=solid];
"logWarning" [style=solid];
"lose" [style=solid];
"makeSem_" [style=solid];
"maxFileIndex" [style=solid];
"mkBackgroundThread" [style=solid];
"multiplicate" [style=solid];
"pattern" [style=solid];
"renameFileToNumber" [style=solid];
"richMessageAction" [style=solid];
"runInBackgroundThread" [style=solid];
"runLogAction" [style=solid];
"runLogActionSem" [style=solid];
"runLogAsOutput" [style=solid];
"runLogAsTrace" [style=solid];
"runOutputAsLog" [style=solid];
"runPureLog" [style=solid];
"runPureLogT" [style=solid];
"runTraceAsLog" [style=solid];
"separate" [style=solid];
"showSeverity" [style=solid];
"showSourceLoc" [style=solid];
"showThreadId" [style=solid];
"showTime" [style=solid];
"simpleMessageAction" [style=solid];
"square" [style=solid];
"unMessageField" [style=solid];
"upgradeMessageAction" [style=solid];
"usingLoggerT" [style=solid];
"withBackgroundLogger" [style=solid];
"withLog" [style=solid];
"withLogByteStringFile" [style=solid];
"withLogPrintFile" [style=solid];
"withLogRotation" [style=solid];
"withLogStringFile" [style=solid];
"withLogTextFile" [style=solid];
"" -> "cfilter";
"" -> "cfilterM";
"" -> "choose";
"" -> "chooseM";
"" -> "cmap";
"" -> "cmapM";
"" -> "cmapMaybe";
"" -> "cmapMaybeM";
"" -> "conquer";
"" -> "divide";
"" -> "divideM";
"" -> "duplicate";
"" -> "extend";
"" -> "extract";
"" -> "foldActions";
"" -> "hoistLogAction";
"" -> "lose";
"" -> "multiplicate";
"" -> "separate";
"extractField" -> "unMessageField";
"filterBySeverity" -> "cfilter";
"filterBySeverity" -> "log";
"filterBySeverity" -> "runLogAction";
"filterBySeverity" -> "runLogActionSem";
"filterBySeverity" -> "runLogAsOutput";
"filterBySeverity" -> "runLogAsTrace";
"filterBySeverity" -> "runOutputAsLog";
"filterBySeverity" -> "runTraceAsLog";
"fmtMessage" -> "showSeverity";
"fmtMessage" -> "showSourceLoc";
"fmtRichMessageCustomDefault" -> "extractField";
"fmtRichMessageDefault" -> "fmtRichMessageCustomDefault";
"fmtRichMessageDefault" -> "showSeverity";
"fmtRichMessageDefault" -> "showSourceLoc";
"fmtRichMessageDefault" -> "showThreadId";
"fmtRichMessageDefault" -> "showTime";
"fmtSimpleMessage" -> "showSourceLoc";
"fmtSimpleRichMessageDefault" -> "fmtRichMessageCustomDefault";
"fmtSimpleRichMessageDefault" -> "showSourceLoc";
"fmtSimpleRichMessageDefault" -> "showThreadId";
"fmtSimpleRichMessageDefault" -> "showTime";
"formatWith" -> "cmap";
"getOldFiles" -> "getLogFiles";
"getOldFiles" -> "logFileIndex";
"getOldFiles" -> "maxFileIndex";
"hoistLogAction" -> "lens";
"infixl" -> "extend";
"infixr" -> "cmap";
"infixr" -> "extend";
"isFileSizeLimitReached" -> "isLimitedBy";
"lens" -> "liftLogIO";
"lens" -> "logFlush";
"lens" -> "logPrint";
"lens" -> "logPrintHandle";
"lens" -> "logPrintStderr";
"lens" -> "logStringHandle";
"lens" -> "logStringStderr";
"lens" -> "logStringStdout";
"lens" -> "withLogPrintFile";
"lens" -> "withLogStringFile";
"liftLogAction" -> "hoistLogAction";
"log" -> "logMsg";
"logByteStringStderr" -> "logByteStringHandle";
"logDebug" -> "log";
"logError" -> "log";
"logException" -> "logError";
"logFlush" -> "filterBySeverity";
"logFlush" -> "pattern";
"logInfo" -> "log";
"logMessagePure" -> "withLogRotation";
"logMsg" -> "log";
"logMsgs" -> "logMsg";
"logPrintStderr" -> "logPrintHandle";
"logStringStderr" -> "logStringHandle";
"logText" -> "logMsg";
"logTextStderr" -> "logTextHandle";
"logWarning" -> "log";
"maxFileIndex" -> "getLogFiles";
"maxFileIndex" -> "logFileIndex";
"richMessageAction" -> "cmapM";
"richMessageAction" -> "convertToLogAction";
"richMessageAction" -> "defCapacity";
"richMessageAction" -> "defaultFieldMap";
"richMessageAction" -> "fmtRichMessageDefault";
"richMessageAction" -> "forkBackgroundLogger";
"richMessageAction" -> "killBackgroundLogger";
"richMessageAction" -> "logByteStringStdout";
"richMessageAction" -> "mkBackgroundThread";
"richMessageAction" -> "runInBackgroundThread";
"richMessageAction" -> "upgradeMessageAction";
"richMessageAction" -> "withBackgroundLogger";
"runInBackgroundThread" -> "choose";
"runInBackgroundThread" -> "conquer";
"runInBackgroundThread" -> "defaultFieldMap";
"runInBackgroundThread" -> "divide";
"runInBackgroundThread" -> "extractField";
"runInBackgroundThread" -> "fmtMessage";
"runInBackgroundThread" -> "fmtRichMessageCustomDefault";
"runInBackgroundThread" -> "fmtRichMessageDefault";
"runInBackgroundThread" -> "fmtSimpleMessage";
"runInBackgroundThread" -> "fmtSimpleRichMessageDefault";
"runInBackgroundThread" -> "formatWith";
"runInBackgroundThread" -> "log";
"runInBackgroundThread" -> "logDebug";
"runInBackgroundThread" -> "logError";
"runInBackgroundThread" -> "logException";
"runInBackgroundThread" -> "logInfo";
"runInBackgroundThread" -> "logText";
"runInBackgroundThread" -> "logWarning";
"runInBackgroundThread" -> "lose";
"runInBackgroundThread" -> "showSeverity";
"runInBackgroundThread" -> "showSourceLoc";
"runInBackgroundThread" -> "showTime";
"runInBackgroundThread" -> "unMessageField";
"runInBackgroundThread" -> "upgradeMessageAction";
"runOutputAsLog" -> "log";
"runOutputAsLog" -> "logByteStringHandle";
"runOutputAsLog" -> "logByteStringStderr";
"runOutputAsLog" -> "logByteStringStdout";
"runOutputAsLog" -> "logTextHandle";
"runOutputAsLog" -> "logTextStderr";
"runOutputAsLog" -> "logTextStdout";
"runOutputAsLog" -> "richMessageAction";
"runOutputAsLog" -> "simpleMessageAction";
"runOutputAsLog" -> "upgradeMessageAction";
"runOutputAsLog" -> "withLogByteStringFile";
"runOutputAsLog" -> "withLogTextFile";
"runPureLog" -> "runPureLogT";
"runTraceAsLog" -> "log";
"showSourceLoc" -> "square";
"showThreadId" -> "square";
"showTime" -> "builderDmyHMSz";
"showTime" -> "square";
"simpleMessageAction" -> "fmtMessage";
"simpleMessageAction" -> "logByteStringStdout";
"upgradeMessageAction" -> "cmap";
"upgradeMessageAction" -> "liftLogAction";
"upgradeMessageAction" -> "logMsg";
"upgradeMessageAction" -> "logMsgs";
"upgradeMessageAction" -> "usingLoggerT";
"upgradeMessageAction" -> "withLog";
"usingLoggerT" -> "liftLogAction";
"usingLoggerT" -> "logMessagePure";
"usingLoggerT" -> "runPureLog";
"usingLoggerT" -> "runPureLogT";
"withBackgroundLogger" -> "convertToLogAction";
"withBackgroundLogger" -> "forkBackgroundLogger";
"withBackgroundLogger" -> "killBackgroundLogger";
"withLogByteStringFile" -> "logByteStringHandle";
"withLogByteStringFile" -> "logFlush";
"withLogPrintFile" -> "logFlush";
"withLogPrintFile" -> "logPrintHandle";
"withLogRotation" -> "getOldFiles";
"withLogRotation" -> "isFileSizeLimitReached";
"withLogRotation" -> "maxFileIndex";
"withLogRotation" -> "renameFileToNumber";
"withLogStringFile" -> "logFlush";
"withLogStringFile" -> "logStringHandle";
"withLogTextFile" -> "logFlush";
"withLogTextFile" -> "logTextHandle";
}
